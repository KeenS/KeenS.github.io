<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>altJS on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/altjs/</link>
    <description>Recent content in altJS on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 13 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/altjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(S式で書く(altJS)達)</title>
      <link>//KeenS.github.io/slide/sshi-deshu-kualtjs/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/slide/sshi-deshu-kualtjs/</guid>
      <description>自己紹介  κeen 東大数学科の4年生 Twit : @blackenedgold Github : KeenS Blog : κeenのHappy Hacκing Blog Shibuya.lispにいます。(2014-06〜運営になりました) Lisp, Ruby, OCaml, Shell Scriptあたりを書きます  お品書き  (ボツ) Shen.js (ボツ) Embedable Common Lisp with Emscripten (ボツ) Picrin with Emscripten (ボツ) オレオレaltJSの作り方の話 ParenScript  Shen.js Shenの公式ページより
 パターンマッチ λ計算ベース マクロ 遅延評価も可能 静的型検査 関数的なPrologの統合 ビルトインコンパイラコンパイラ  これのJS実装もある。
例 (define factorial 0 -&amp;gt; 1 X -&amp;gt; (* X (factorial (- X 1)))) そもそもaltJSじゃない…
ボツ
ECL with Emscripten  ANSI Common Lisp準拠のCommon Lisp処理系 LispをコンパイルしてCを吐く Emscriptenでコンパイルすれば…  #include &amp;lt;ecl/ecl-cmp.</description>
    </item>
    
  </channel>
</rss>