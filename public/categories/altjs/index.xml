<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Altjs on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/altjs/</link>
    <description>Recent content in Altjs on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 13 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/altjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(S式で書く(altJS)達)</title>
      <link>//KeenS.github.io/slide/sshi-deshu-kualtjs/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/slide/sshi-deshu-kualtjs/</guid>
      <description># (S式で書く(altJS)達) κeen(@blackenedgold) 天下一altJS武闘会(#tenka1altJS) @渋谷プライムプラザ四階 ## 自己紹介 + κeen + 東大数学科の4年生 + Twit : @blackenedgold + Github : KeenS + Blog : [κeenのHappy Hacκing Blog](http://KeenS.github.io/) + Shibuya.lispにいます。(2014-06〜運営になりました) + Lisp, Ruby, OCaml, Shell Scriptあたりを書きます ## お品書き - (ボツ) Shen.js - (ボツ) Embedable Common Lisp with Emscripten - (ボツ) Picrin with Emscripten - (ボツ) オレオレaltJSの作り方の話 - ParenScript ## Shen.js Shenの公式ページより + パターンマッチ + λ計算ベース + マクロ + 遅延評価も可能 + 静的型検査 + 関数的なPrologの統合 + ビルトインコンパイラコンパイラ これのJS実装もある。 ## 例 ```lisp (define factorial 0 - 1 X - (* X (factorial (- X 1)))) ``` そもそもaltJSじゃない… ボツ ## ECL with Emscripten + ANSI Common Lisp準拠のCommon Lisp処理系 + LispをコンパイルしてCを吐く + Emscriptenでコンパイルすれば… `#include ` が悪さをしてコンパイル出来ない ボツ ## picrin + R7RS small準拠を目指すScheme処理系 + R7RS準拠の中では唯一Emscriptenで コンパイル出来るらしい + SDLもEmscriptenで動くらしいから 組み合わせればウハウハじゃね？ コンパイル出来ない… ( `va_args` は64bit x Clang3.</description>
    </item>
    
  </channel>
</rss>