<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lisp Meet Up on κeenのHappy Hacκing Blog</title>
    <link>/categories/lisp-meet-up/</link>
    <description>Recent content in Lisp Meet Up on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 26 Apr 2015 21:09:07 +0900</lastBuildDate>
    
	<atom:link href="/categories/lisp-meet-up/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Common Lispで限定継続と遊ぶ</title>
      <link>/slide/common_lispdegenteikeizokutoasobu_/</link>
      <pubDate>Sun, 26 Apr 2015 21:09:07 +0900</pubDate>
      
      <guid>/slide/common_lispdegenteikeizokutoasobu_/</guid>
      <description># Common Lispで限定継続と遊ぶ ---------------------- [Lisp Meet Up #27](https://atnd.org/events/64988) === # About Me --------- ![κeenのアイコン](/images/icon.png) + κeen + [@blackenedgold](https://twitter.com/blackenedgold) + Github: [KeenS](https://github.com/KeenS) + 渋谷のエンジニア + Lisp, ML, Shell Scriptあたりを書きます === # Agenda -------- 0. cl-contの紹介 1. 限定継続の話 2. 限定継続の使い方の話 3. 限定継続の実装の話 === # CL-CONTの紹介 === # CL-CONT --------- * Common Lispの限定継続ライブラリ * 結構古くからあるっぽい * 割と色々なライブラリが使ってる === # CL-CONT --------- ![cl-cont dependers](/images/cl-cont-dependers.png) === # API ----- * 継続を区切るマクロ + `with-call/cc` + `defun/cc` + `lambda/cc` * 継続を取得するマクロ + `call/cc` + `let/cc` ※後で説明するので意味が分からなくても問題ないです。 === # 限定継続の話 === # 継続とは --------- * &#34;</description>
    </item>
    
    <item>
      <title>lisp meet up #22でLTしてきた</title>
      <link>/blog/2014/11/28/lisp-meet-up-number-22deltsitekita/</link>
      <pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014/11/28/lisp-meet-up-number-22deltsitekita/</guid>
      <description>&lt;p&gt;κeenです。先日 Lisp Meet Up #22 でLTしてきたので報告です。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Semantic S式</title>
      <link>/slide/semantic-sshi/</link>
      <pubDate>Thu, 27 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>/slide/semantic-sshi/</guid>
      <description># Semantic S式 --- 2014-11-27 κeen(@blackenedgold) # About Me ---------- ![κeenのアイコン](/images/icon.png) + κeen + 東大数学科の4年生 + ソーシャルアカウントは上のアイコン達から。 + Lisp, Ruby, OCaml, Shell Scriptあたりを書きます # Semantic Web とは # [Semantic Web](http://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%9E%E3%83%B3%E3%83%86%E3%82%A3%E3%83%83%E3%82%AF%E3%83%BB%E3%82%A6%E3%82%A7%E3%83%96) ---------------- * W3C のティム・バーナーズ＝リーが提唱 * 文章の見た目を記述するんじゃなくて構造を記述しよう * そうすると機械がクローリングするの楽になるよね # Semantic S式とは # Semantic S式 -------------- * Shibuya.lispのκeenが提唱 (昨日思い付いた) * S式の見た目じゃなくて構造で括弧をつけよう * そうするとコーディングが楽になるよね # 良いところ ------------ 1. 意味が分かり易い 2. パースし易い 3. 編集が楽になる 4. 壊れにくい # 1. 意味が分かり易い # 1. 意味が分かり易い -------------------- ## 例1 * Clojure ```clojure (let [a 1 b 2] .</description>
    </item>
    
    <item>
      <title>Semantic S式</title>
      <link>/slide/semantic-sshi/</link>
      <pubDate>Thu, 27 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>/slide/semantic-sshi/</guid>
      <description># Semantic S式 --- 2014-11-27 κeen(@blackenedgold) # About Me ---------- ![κeenのアイコン](/images/icon.png) + κeen + 東大数学科の4年生 + ソーシャルアカウントは上のアイコン達から。 + Lisp, Ruby, OCaml, Shell Scriptあたりを書きます # Semantic Web とは # [Semantic Web](http://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%9E%E3%83%B3%E3%83%86%E3%82%A3%E3%83%83%E3%82%AF%E3%83%BB%E3%82%A6%E3%82%A7%E3%83%96) ---------------- * W3C のティム・バーナーズ＝リーが提唱 * 文章の見た目を記述するんじゃなくて構造を記述しよう * そうすると機械がクローリングするの楽になるよね # Semantic S式とは # Semantic S式 -------------- * Shibuya.lispのκeenが提唱 (昨日思い付いた) * S式の見た目じゃなくて構造で括弧をつけよう * そうするとコーディングが楽になるよね # 良いところ ------------ 1. 意味が分かり易い 2. パースし易い 3. 編集が楽になる 4. 壊れにくい # 1. 意味が分かり易い # 1. 意味が分かり易い -------------------- ## 例1 * Clojure ```clojure (let [a 1 b 2] .</description>
    </item>
    
    <item>
      <title>claspを少し触ってみた</title>
      <link>/slide/clasp/</link>
      <pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>/slide/clasp/</guid>
      <description># claspを少し触ってみた ---------------------- Lisp Meet Up presented by Shibuya.lisp #21 2014-10-29 κeen(@blackenedgold) # About Me --------- ![κeenのアイコン](/images/icon.png) + κeen + 東大数学科の4年生 + ソーシャルアカウントは上のアイコン達から。 + Lisp, Ruby, OCaml, Shell Scriptあたりを書きます # clasp ------- * Github: [drmeister/clasp](https://github.com/drmeister/clasp) * 2014-09-18に0.1リリース(現在0.11プレビューが出ている) * 今は0.11プレビューが出ている * ANSI Common Lisp準拠を目指す(現在80 ~90%) * ECLからのフォーク * LLVMベースのJIT([MCJIT](http://llvm.org/docs/MCJITDesignAndImplementation.html))搭載 * C++とLispで書かれている * C++との連携を意識 Note: C++との連携の部分を強調。今回は0.11プレビューでの話 # メモリ管理 ------------------ * Memory Pool Systemと Boehm GCから選べる * ビルドするときにどっちかを選ぶ # メモリ管理 ------------------ ## [Boehm GC](http://www.</description>
    </item>
    
    <item>
      <title>Lisp Meet Up #20でLTしてきました</title>
      <link>/blog/2014/09/30/lisp-meet-up-number-20/</link>
      <pubDate>Tue, 30 Sep 2014 09:35:05 +0000</pubDate>
      
      <guid>/blog/2014/09/30/lisp-meet-up-number-20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Picrinのチューニングの話、もといGCの話</title>
      <link>/slide/picrin-gc/</link>
      <pubDate>Mon, 29 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/slide/picrin-gc/</guid>
      <description># Picrinのチューニングの話、もといGCの話 --- Lisp Meet Up presented by Shibuya.lisp #20 2014-09-29 κeen(@blackenedgold) # 自己紹介 --- + κeen + 東大数学科の4年生 + ソーシャルアカウントは上のアイコン達から。 + Lisp, Ruby, OCaml, Shell Scriptあたりを書きます + [picrin](https://github.com/picrin-scheme/picrin)のコミッタです # picrin --- ![picrin](/images/picrin/picrin-logo-fin01-02.png) # picrin --- * R7RS compatibility * bytecode interpreter (based on stack VM) * internal representation by nan-boxing * conservative call/cc implementation (users can freely interleave native stack with VM stack) * exact GC (simple mark and sweep, partially reference count is used as well) * string representation by rope data structure # picrin --- * R7RS compatibility * bytecode interpreter (based on stack VM) * internal representation by nan-boxing * conservative call/cc implementation (users can freely interleave native stack with VM stack) * exact GC (simple mark and sweep, partially reference count is used as well) * string representation by rope data structure # picrin開発者の不満 --- * picrinの起動が遅い+ 2秒くらいかかる * picrinのテストが遅い+ 16秒くらいかかる # 少しGCの話 --- GC(ごみ集め)とは * 使われていないオブジェクトを自動的に解法する + メモリ管理に煩わせられないで済む + メモリーリークを防ぐ。 * 「使われていないオブジェクト」を判定するのはいくつかアルゴリズムがある # GCのアルゴリズム --- ## 主なGCのアルゴリズム * マーク&amp;amp;スイープ * 参照カウント * Copying GC # GCのアルゴリズム --- ## マーク&amp;amp;スイープ 1.</description>
    </item>
    
    <item>
      <title>Lisp Meet Up #19でLTしてきました</title>
      <link>/blog/2014/07/30/lisp-meet-up-number-19/</link>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014/07/30/lisp-meet-up-number-19/</guid>
      <description>&lt;p&gt;κeenです毎月恒例の&lt;a href=&#34;https://atnd.org/events/53246&#34;&gt;Lisp Meet Up presented by Shibuya.lisp&lt;/a&gt;でLTしてきたのでレポートです。

今回は募集20に対して参加登録20、参加18、LT4本と集りの良い会でした。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cloud 9の紹介</title>
      <link>/slide/cloud-9/</link>
      <pubDate>Tue, 29 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/slide/cloud-9/</guid>
      <description># Cloud 9の紹介 Lisp Meet Up #19 presented by Shibuya.lisp κeen(@blackenedgold) ## 自己紹介 + κeen + 東大数学科の4年生 + ソーシャルアカウントは上のアイコン達から。 + Lisp, Ruby, OCaml, Shell Scriptあたりを書きます ## Lispがあまり使われない原因  認知度が低い 開発環境構築の難易度高い  ## Cloud 9について + WEBベースのIDEサービス + 40以上の言語に対応（らしい） + この間正式リリース + 1アカウント毎に1Docker環境与えられる + IDEはオープンソース + よく分かってない ## こんなん ## デモ ## 良いところ + 難易度低い + Lisp環境動く + Githubとの連携 + どこからでも同じ環境にアクセス + キーバインドはうれしい各宗教対応の {Mac, Windows}x{Default, Emacs, Vim, Sublime} ## 微妙なところ + シンタックスハイライト微妙 （せめてキーワード引数はどうにか） + 補完微妙 + インデント微妙 + swank使いたい 以上 何か質問あればどうぞ   </description>
    </item>
    
    <item>
      <title>Lisp Meet Up #16 でLTしてきました。</title>
      <link>/blog/2014/04/25/lisp-meet-up-number-16/</link>
      <pubDate>Fri, 25 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014/04/25/lisp-meet-up-number-16/</guid>
      <description>&lt;p&gt;κeenです。年度末/年度始めで色々あり、しばらく更新できてませんでしたが &lt;a href=&#34;http://atnd.org/events/49370&#34;&gt;Lisp Meet Up Presented by Shibuya.lisp #16&lt;/a&gt;に参加してきたのでレポートです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lisp Meet Up #14でLTしてきました</title>
      <link>/blog/2014/02/27/lisp-meet-up-number-14/</link>
      <pubDate>Thu, 27 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014/02/27/lisp-meet-up-number-14/</guid>
      <description>&lt;p&gt;どうも、κeenです。Rubyをアップグレードしようとしたら&lt;code&gt;rvm&lt;/code&gt;が動かなくて、あれ？ってなったら私が&lt;code&gt;echo -&amp;gt; echo&lt;/code&gt;とかいう謎のsymlinkを作ってたせいでした。このブログはOctopressで作ってるのでその間更新遅れました。&lt;/p&gt;

&lt;p&gt;さて、毎月恒例 &lt;a href=&#34;http://atnd.org/events/47730&#34;&gt;Lisp Meet Up Presented by Shibuya.lisp #14&lt;/a&gt;でLTしてきたので報告です。今回は「Real World OCamlを読んだ感想」というタイトルです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lisp Meet Up #13でLTしてきました</title>
      <link>/blog/2014/01/24/lisp-meet-up-number-13/</link>
      <pubDate>Fri, 24 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/2014/01/24/lisp-meet-up-number-13/</guid>
      <description>&lt;p&gt;もう12時回ったので昨日になってしまいましたが &lt;a href=&#34;http://atnd.org/events/46746#comments&#34;&gt;Lisp Meet Up presented by Shibya.lisp #13&lt;/a&gt;に参加してLTしてきたので報告(?)エントリです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>