<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shelly on κeenのHappy Hacκing Blog</title>
    <link>/categories/shelly/</link>
    <description>Recent content in Shelly on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Sep 2013 21:25:00 +0000</lastBuildDate>
    <atom:link href="/categories/shelly/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Shellyを使ってCommon LispファイルをExecutableにする</title>
      <link>/blog/2013/09/26/shelly-script</link>
      <pubDate>Thu, 26 Sep 2013 21:25:00 +0000</pubDate>
      
      <guid>/blog/2013/09/26/shelly-script</guid>
      <description>&lt;p&gt;コマンドラインからCommon Lispの関数を実行できる &lt;a href=&#34;https://github.com/fukamachi/shelly&#34;&gt;Shelly&lt;/a&gt;を使ってCommon Lispファイルを実行形式にしてみました。Shellyは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ shly + 1 2
3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;みたいに関数を実行できます。&lt;/p&gt;

&lt;p&gt;モチベーションとしては、 &lt;a href=&#34;http://blog.8arrow.org/entry/20120521/1337596483&#34;&gt;Shellyの作者深町さん&lt;/a&gt;がTwitterで「Shellyでloadを使うとスクリプトみたいに実行できる」と発言していたのがきっかけで、Shebangを無視できればUNIX系ではExecutableにできるのでは？と思いついてやってみました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;read&lt;/code&gt;して&lt;code&gt;eval&lt;/code&gt;して…とか考えてましたが、&lt;code&gt;load&lt;/code&gt;に&lt;code&gt;stream&lt;/code&gt;を渡せるようなので案外簡単にできました。&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/KeenS/6688683.js?file=script.lisp&#34;&gt;&lt;/script&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;(in-package :shelly)
(export (defvar &lt;em&gt;argv&lt;/em&gt; nil))
(in-package :cl-user)&lt;/p&gt;

&lt;p&gt;(defun script (file argv)
  &amp;ldquo;Execute a file as script ignoring shebang&amp;rdquo;
  (setf shelly:&lt;em&gt;argv&lt;/em&gt; argv)
  (let* ((in (open file :if-does-not-exist :error))
     (first-char (read-char in))
     (second-char (read-char in)))
    (cond
      ((and (char= first-char ##) (char= second-char #!))
       (read-line in))
      (t (unread-char second-char in)
     (unread-char first-char in)))
    (load in)
    (values)))
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/p&gt;

&lt;p&gt;コマンドライン引数を受け取るために&lt;code&gt;*argv*&lt;/code&gt;という変数を用意してます。&lt;/p&gt;

&lt;p&gt;こんなことを&lt;code&gt;~/.shelly/Shellyfile&lt;/code&gt;に書いておき、Lispの初期化ファイルに&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#+shelly
(load &amp;quot;~/.shelly/Shellyfile&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と書いてます。この&lt;code&gt;~/.shelly/Shellyfile&lt;/code&gt;にはShelly向けの関数を溜め込んでいく予定です。&lt;/p&gt;

&lt;p&gt;あとは&lt;/p&gt;

&lt;figure class=&#34;code&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;
&lt;td class=&#34;gutter&#34;&gt;&lt;pre class=&#34;line-numbers&#34;&gt;&lt;span class=&#34;line-number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;common-lisp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;!shly&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;script&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;defun&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;hello&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;format&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;Hello ~a~%&#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;shelly:*argv*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;を&lt;code&gt;foo.lisp&lt;/code&gt;に書き込めば&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chmod u+x foo.lisp
$./foo.lisp κeen
Hello κeen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と実行できます。勿論、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$shly script foo.lisp κeen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としても同じです。一部の処理系ではこのようなことが出来ますが、コマンドライン引数の渡し方とかも処理系依存なのでポータブルに書くなら一つ試してみてはいかがでしょうか。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>