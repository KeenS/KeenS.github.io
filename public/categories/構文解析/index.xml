<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>構文解析 on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/%E6%A7%8B%E6%96%87%E8%A7%A3%E6%9E%90/</link>
    <description>Recent content in 構文解析 on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 08 Aug 2015 04:16:50 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/%E6%A7%8B%E6%96%87%E8%A7%A3%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>構文解析にまつわる小話たち</title>
      <link>//KeenS.github.io/slide/koubunkaisekiarekore/</link>
      <pubDate>Sat, 08 Aug 2015 04:16:50 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/koubunkaisekiarekore/</guid>
      <description># 構文解析にまつわる小話たち ---------------------- [#peg_study](https://twitter.com/search?q=%23peg_study&amp;src=typd&amp;vertical=default&amp;f=tweets) === # About Me --------- ![κeenのアイコン](/images/icon.png) + κeen + [@blackenedgold](https://twitter.com/blackenedgold) + Github: [KeenS](https://github.com/KeenS) + サイバエージェントの新卒エンジニア + Lisp, ML, Shell Scriptあたりを書きます === # ウォームアップ === # 構文解析はバッドノウハウ ------------------------- * プログラム言語を使っているなら既にパーサはある + 文法も定義されてる * 目の前のパーサを使え + パーサAPIがある言語もある(Lispとか) * そうでなくても内部DSLを考えろ + 内部DSLで解決出来ないときだけ構文解析 === # 本質はAST ----------- * 結局はASTになればどんな文法でも同じ * 文法はただの外皮、欲しいのはAST * シンタックスシュガーは飾り + DRY出来るなら別 * S式を使え + ASTをそのまま書き下せる === # AST First ----------- * 最初にASTを考える。そして文法を考える * 何が欲しいのかイメージし易くなる * 構文解析はAST生成の自動化。普段してないことを自動化するのは愚か。 * 早めに間違いに気付ける + `+`は二項演算子。じゃあ `&amp;&amp;` は？ `=` は？ Note: Lispだと+は関数、andはマクロ、setqはスペシャルフォーム === # 構文解析の流れ === # 構文解析の流れ --------------- 1.</description>
    </item>
    
  </channel>
</rss>