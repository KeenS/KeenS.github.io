<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on κeenのHappy Hacκing Blog</title>
    <link>/categories/rust/</link>
    <description>Recent content in Rust on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 20 Oct 2020 03:37:17 +0900</lastBuildDate>
    
	<atom:link href="/categories/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rustでインメモリキャッシュ作った話</title>
      <link>/blog/2020/10/20/rustdeinmemorikyasshutsukuttahanashi/</link>
      <pubDate>Tue, 20 Oct 2020 03:37:17 +0900</pubDate>
      
      <guid>/blog/2020/10/20/rustdeinmemorikyasshutsukuttahanashi/</guid>
      <description>&lt;p&gt;κeenです。先日発表した&lt;a href=&#34;https://keens.github.io/slide/rustdetsukuruinmemorikyasshu/&#34;&gt;Rustで作るインメモリキャッシュ&lt;/a&gt;が全然話し足りなかったので色々補足します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで作るインメモリキャッシュ</title>
      <link>/slide/rustdetsukuruinmemorikyasshu/</link>
      <pubDate>Sun, 18 Oct 2020 18:22:00 +0900</pubDate>
      
      <guid>/slide/rustdetsukuruinmemorikyasshu/</guid>
      <description>shinjuku.rsでの発表用。</description>
    </item>
    
    <item>
      <title>「安全」な言語Rust</title>
      <link>/slide/anzennagengorust/</link>
      <pubDate>Thu, 25 Jun 2020 09:31:42 +0900</pubDate>
      
      <guid>/slide/anzennagengorust/</guid>
      <description>フィンテックエンジニア養成勉強会9での発表用。Rustの紹介。</description>
    </item>
    
    <item>
      <title>シャドイングの嬉しさ</title>
      <link>/blog/2020/06/20/shadoingunoureshisa/</link>
      <pubDate>Sat, 20 Jun 2020 00:28:15 +0900</pubDate>
      
      <guid>/blog/2020/06/20/shadoingunoureshisa/</guid>
      <description>&lt;p&gt;κeenです。
Rustに限った話ではないのですが、よくRustを触ってみた人がシャドイングが気持ち悪いという反応をしているのを見かけるのでシャドイングがどういう機能かを解説します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WasmtimeのimportsにRustの関数を差し込む</title>
      <link>/blog/2020/06/07/wasmtimenoimportsnirustnokansuuwosashikomu/</link>
      <pubDate>Sun, 07 Jun 2020 03:08:39 +0900</pubDate>
      
      <guid>/blog/2020/06/07/wasmtimenoimportsnirustnokansuuwosashikomu/</guid>
      <description>&lt;p&gt;κeenです。WebAssembly/WASIのランタイム&lt;a href=&#34;https://wasmtime.dev/&#34;&gt;Wasmtime&lt;/a&gt;をちょっと触ってみたのでそのときのメモを残します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustのHashMapはentryが便利</title>
      <link>/blog/2020/05/23/rustnohashmaphaentrygabenri/</link>
      <pubDate>Sat, 23 May 2020 23:47:12 +0900</pubDate>
      
      <guid>/blog/2020/05/23/rustnohashmaphaentrygabenri/</guid>
      <description>&lt;p&gt;κeenです。個人的によく設計したなと思っているRustのEntry APIについて紹介します。
標準ライブラリのHashMapの操作を無駄なく書きたい人におすすめ。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで強めに型をつけるPart 5: 「なんでも文字列」をやめる</title>
      <link>/blog/2020/05/14/rustdetsuyomenikatawotsukerupart_5___nandemomojiretsu_woyameru/</link>
      <pubDate>Thu, 14 May 2020 03:05:21 +0900</pubDate>
      
      <guid>/blog/2020/05/14/rustdetsuyomenikatawotsukerupart_5___nandemomojiretsu_woyameru/</guid>
      <description>&lt;p&gt;κeenです。「強めに型をつける」シリーズです。
いつか書こうと思って後回しにしてたら全然書かなかったので寝れない夜に筆をとります。
特にスクリプト言語を使ってた人にありがちな「なんでも文字列」について。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rust-analyzerの紹介</title>
      <link>/slide/rust_analyzernoshoukai/</link>
      <pubDate>Mon, 27 Apr 2020 23:38:53 +0900</pubDate>
      
      <guid>/slide/rust_analyzernoshoukai/</guid>
      <description>下町.rsでの発表用。rust-analyzerについて。</description>
    </item>
    
    <item>
      <title>Rustで強めに型をつけるPart 4: タグ型</title>
      <link>/blog/2020/01/11/rustdetsuyomenikatawotsukerupart_4__tagukata/</link>
      <pubDate>Sat, 11 Jan 2020 17:05:51 +0900</pubDate>
      
      <guid>/blog/2020/01/11/rustdetsuyomenikatawotsukerupart_4__tagukata/</guid>
      <description>&lt;p&gt;κeenです。久しぶりに「強めに型をつける」シリーズです。
マーカとして使われる型について。呼び方が分からなかったので「タグ型」と呼ぶことにします。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自作lintルールとcargo fixでRustのコードをリファクタする</title>
      <link>/blog/2019/12/23/jisakulintru_rutocargo_fixderustnoko_doworifakutasuru/</link>
      <pubDate>Mon, 23 Dec 2019 19:56:13 +0900</pubDate>
      
      <guid>/blog/2019/12/23/jisakulintru_rutocargo_fixderustnoko_doworifakutasuru/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust2&#34;&gt;Rustその2 Advent Calendar 2019 - Qiita&lt;/a&gt; 25日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。私は既に冬休みに突入してます。Happy Holiday！
「Rustで簡単なコードの書き換えを自動化したいよなー」と思っていたら &lt;code&gt;cargo fix&lt;/code&gt; でできるよという啓示を貰ったのでやってみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>話題のGUIツールキットOrbtkを読む</title>
      <link>/slide/wadainoguitsu_rukittoorbtkwoyomu/</link>
      <pubDate>Tue, 10 Dec 2019 23:00:58 +0900</pubDate>
      
      <guid>/slide/wadainoguitsu_rukittoorbtkwoyomu/</guid>
      <description>Rust LT #7 での発表用。GUIツールキットOrbtkのコードの軽い解説</description>
    </item>
    
    <item>
      <title>RustでCPS変換が簡単になったよという話</title>
      <link>/blog/2019/12/07/rustdecpshenkangakantanninattayotoiuhanashi/</link>
      <pubDate>Sat, 07 Dec 2019 17:59:51 +0900</pubDate>
      
      <guid>/blog/2019/12/07/rustdecpshenkangakantanninattayotoiuhanashi/</guid>
      <description>&lt;p&gt;κeenです。このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust&#34;&gt;Rust Advent Calendar 2019 - Qiita&lt;/a&gt; 8日目の記事です。
昔書いたRustのコードをもけもけ漁ってたら、しばらく前にRustでCPS変換しようとしてた下書きをたまたま発見しました。&lt;/p&gt;

&lt;p&gt;当時はコンパイラの制約で簡単には書けなかったのですが今見ると簡単に書けるようになってたのでRustも進歩してるね、という確認をしたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dieselでselectするカラムを1箇所にまとめる</title>
      <link>/blog/2019/12/07/dieseldeselectsurukaramuwo1tsunimatomeru/</link>
      <pubDate>Sat, 07 Dec 2019 01:59:08 +0900</pubDate>
      
      <guid>/blog/2019/12/07/dieseldeselectsurukaramuwo1tsunimatomeru/</guid>
      <description>&lt;p&gt;κeenです。このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust3&#34;&gt;Rustその3 Advent Calendar 2019 - Qiita&lt;/a&gt;の7日目の記事です。空いてたので飛び入り参加しました。&lt;/p&gt;

&lt;p&gt;軽い小ネタです。Dieselで &lt;code&gt;select&lt;/code&gt; する時にいちいちカラム名書くの面倒だよねって話です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>itertoolsの紹介</title>
      <link>/blog/2019/12/06/itertoolsnoshoukai/</link>
      <pubDate>Fri, 06 Dec 2019 02:36:37 +0900</pubDate>
      
      <guid>/blog/2019/12/06/itertoolsnoshoukai/</guid>
      <description>&lt;p&gt;κeenです。このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust&#34;&gt;Rust Advent Calendar 2019 - Qiita&lt;/a&gt; 6日目のエントリです。
空いてたので飛び入りました。
飛び入りなので軽い小ネタ。便利クレート itertoolsの紹介です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustのturbofishを理解する</title>
      <link>/blog/2019/12/03/rustnoturbofishworikaisuru/</link>
      <pubDate>Tue, 03 Dec 2019 00:12:31 +0900</pubDate>
      
      <guid>/blog/2019/12/03/rustnoturbofishworikaisuru/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust3&#34;&gt;Rustその3 Advent Calendar 2019&lt;/a&gt;3日目に飛び入り参加しているエントリです。
Rustの型パラメータ指定の構文、通称ターボフィッシュ(turbofish)について。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rust 2020</title>
      <link>/blog/2019/11/30/rust_2020/</link>
      <pubDate>Sat, 30 Nov 2019 21:43:14 +0900</pubDate>
      
      <guid>/blog/2019/11/30/rust_2020/</guid>
      <description>&lt;p&gt;This is κeen. Here is my thoughts on Rust 2020.
Though I&amp;rsquo;m a Japanese speaker, and I don&amp;rsquo;t think the Rust Developers accept only English-written blog posts, I write this post for non-Japanese speakers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安全なシステムプログラミング言語Rustへの招待</title>
      <link>/slide/anzennashisutemupuroguramingugengorusthenoshoutai/</link>
      <pubDate>Mon, 18 Nov 2019 15:28:52 +0900</pubDate>
      
      <guid>/slide/anzennashisutemupuroguramingugengorusthenoshoutai/</guid>
      <description>IIJ Labでの発表用。主にシステムプログラミング言語経験者向けの内容</description>
    </item>
    
    <item>
      <title>Rustで構造体に配列のようなインデックスアクセス</title>
      <link>/blog/2019/10/31/rustdekouzoutainihairetsunoyounaindekkusuakusesu/</link>
      <pubDate>Thu, 31 Oct 2019 02:52:22 +0900</pubDate>
      
      <guid>/blog/2019/10/31/rustdekouzoutainihairetsunoyounaindekkusuakusesu/</guid>
      <description>&lt;p&gt;κeenです。ネタ記事です。ふと、構造体に配列のようなアクセスができる方法を思い付いたので共有します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで型レベル迷路</title>
      <link>/blog/2019/10/06/rustdekatareberumeiro/</link>
      <pubDate>Sun, 06 Oct 2019 21:55:42 +0900</pubDate>
      
      <guid>/blog/2019/10/06/rustdekatareberumeiro/</guid>
      <description>&lt;p&gt;κeenです。型レベル迷路作ったよ！コンパイルが通ったらゴール！！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで「文字が特定の文字集合に含まれるか」を判定するのはどれが速いか</title>
      <link>/blog/2019/10/06/rustde_mojigatokuteinomojishuugounifukumareruka_wohanteisurunohadoregahayaika/</link>
      <pubDate>Sun, 06 Oct 2019 19:00:53 +0900</pubDate>
      
      <guid>/blog/2019/10/06/rustde_mojigatokuteinomojishuugounifukumareruka_wohanteisurunohadoregahayaika/</guid>
      <description>&lt;p&gt;κeenです。ブログタイトルが長い。
普段、どれがいいとか特に気にせず書いている「文字が特定の文字集合に含まれるか」の判定をするのはどの方法が速いかが気になったのでベンチマークを取ってみました。&lt;/p&gt;

&lt;p&gt;想定しているのは何かのパーサを書いていて、例えば識別子に使える文字が &lt;code&gt;[a-zA-Z0-9_!?=&amp;lt;&amp;gt;]&lt;/code&gt; だったときにそれを判定する方法です。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
