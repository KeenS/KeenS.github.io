<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>正規表現 on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE/</link>
    <description>Recent content in 正規表現 on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 18 Oct 2019 02:47:52 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>その正規表現エンジン、インタプリタで満足してる？！</title>
      <link>//KeenS.github.io/slide/sonoseikihyougenenjin_intapuritademanzokushiteru__/</link>
      <pubDate>Fri, 18 Oct 2019 02:47:52 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/sonoseikihyougenenjin_intapuritademanzokushiteru__/</guid>
      <description>.narrow { letter-spacing: -30px; } .narrow span { transform: scaleX(0.7); transform-origin: left; display: inline-block; }  # その正規表現エンジン、
インタプリタで満足(サティスファイ)してる？！ ---------------------- [Regex Festa - connpass](https://opt.connpass.com/event/140566/) === # About Me --------- ![κeenのアイコン](/images/kappa.png) * κeen * [@blackenedgold](https://twitter.com/blackenedgold) * Github: [KeenS](https://github.com/KeenS) * GitLab: [blackenedgold](https://gitlab.com/blackenedgold) * [Idein Inc.](https://idein.jp/)のエンジニア * Lisp, ML, Rust, Shell Scriptあたりを書きます === # 今日話すこと -------------- * SATySFi * 部分評価と二村射影 * 多段階計算 * (正規表現のコンパイル) === # SATySFi --------- * 政府の支援によりTeXを倒すために作られた組版処理系 + ※多少の誇張を含みます * 日本語が扱えて、PDFを直接吐ける * ML系の言語で拡張ができる + 静的に型が付く * ↓ 作者 ？</description>
    </item>
    
    <item>
      <title>SMLで函数型的正規表現マッチ</title>
      <link>//KeenS.github.io/slide/smldekansuukatatekiseikihyougenmatchi/</link>
      <pubDate>Tue, 29 Mar 2016 01:44:39 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/smldekansuukatatekiseikihyougenmatchi/</guid>
      <description># SMLで函数型的正規表現マッチ ---------------------- === # About Me --------- ![κeenのアイコン](/images/icon.png) + κeen + [@blackenedgold](https://twitter.com/blackenedgold) + Github: [KeenS](https://github.com/KeenS) + サイバーエージェントのエンジニア + Lisp, ML, Rust, Shell Scriptあたりを書きます === # 元ネタ -------- [関数型的正規表現マッチ | Preferred Research](https://research.preferred.jp/2010/11/regexp-play/) === # 正規表現 ---------- 必要最小限の要素は5つだけ 1. 空文字 2. アルファベット1つ 3. 正規表現のOR結合 4. 正規表現のAND結合 5. 正規表現の繰り返し === # SMLで表してみる ----------------- ``` sml datatype reg = Empty | Sym of t | Or of reg * reg | And of reg * reg | Rep of reg ``` === # 本当に大丈夫？ === # `/(a|b)*c/` ----------- ``` sml And(Rep(Or(Sym &#34;</description>
    </item>
    
    <item>
      <title>Onigmoを最大49%高速化した話</title>
      <link>//KeenS.github.io/blog/2015/05/26/onigmowosaidai49_kousokukashitahanashi/</link>
      <pubDate>Tue, 26 May 2015 01:14:54 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2015/05/26/onigmowosaidai49_kousokukashitahanashi/</guid>
      <description>&lt;p&gt;κeenです。Rubyでも使われてる高速な正規表現エンジン、Onigmo(鬼雲)を高速化したのでその話を。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>