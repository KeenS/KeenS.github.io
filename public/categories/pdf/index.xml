<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pdf on κeenのHappy Hacκing Blog</title>
    <link>/categories/pdf/</link>
    <description>Recent content in Pdf on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 24 Jan 2015 10:23:00 +0000</lastBuildDate>
    <atom:link href="/categories/pdf/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>印刷フォマット済みのテキストファイルをPDF化する</title>
      <link>/blog/2015/01/24/a2pdf</link>
      <pubDate>Sat, 24 Jan 2015 10:23:00 +0000</pubDate>
      
      <guid>/blog/2015/01/24/a2pdf</guid>
      <description>&lt;p&gt;小ネタ。古いドキュメントやらポータブルな仕様を落としてくると中身が印刷フォーマット済み(ページネーションやヘッダ、フッタをアスキーアートで表現してる)であることがあります。
それらを普通のテキスト形式だと読みづらいのでPDF化する話。&lt;/p&gt;

&lt;p&gt;結論から言うと&lt;a href=&#34;http://search.cpan.org/~jonallen/a2pdf-1.11/lib/Script/a2pdf.pm&#34;&gt;a2pdf - search.cpan.org&lt;/a&gt;を使いました。選んだ理由は&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;余計な装飾を付与しない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^L&lt;/code&gt;(pagebreak)でちゃんと改ページする&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;です。使い方は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ a2pdf --noheader --noperl-syntax --noline-numbers  foo.txt -o foo.pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でok。本当は&lt;code&gt;--nofooter&lt;/code&gt;も付けたいんですがそれつけるとエラー出たのでやむなくフッタは甘受。元々perlのソースコードをPDF化するためのものらしく、デフォルトでそのような設定になってるので無効化する必要があります。&lt;/p&gt;

&lt;p&gt;生成速度なんですけどPDF化すると105ページあるテキストの変換に73秒かかりました。少し遅いですね。このくらいだったらサクっとCommon Lispで書いてしまった方が速かったのかなぁ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PDFユーティリティ</title>
      <link>/blog/2013/09/03/pdftk</link>
      <pubDate>Tue, 03 Sep 2013 23:34:00 +0000</pubDate>
      
      <guid>/blog/2013/09/03/pdftk</guid>
      <description>&lt;p&gt;小ネタ。コマンドラインからPDFを編集した話の備忘録。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.seeds-std.co.jp/seedsblog/181.html&#34;&gt;こちら&lt;/a&gt;に紹介されてるように、pdftkというツールである程度のことはできる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo apt-get install pdftk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でインストール可能。&lt;br /&gt;
今回は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$for pdf in *.pdf
&amp;gt;&amp;gt;do
&amp;gt;&amp;gt; pdftk $pdf cat 1-endR output `basename $pdf .pdf`_rot.pdf
&amp;gt;&amp;gt;done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で全てのPDFの全てのページを右周りに回転し、名前に_rotを付けて保存した。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pdftk *.pdf cat output all.pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とかで結合なんかもできて便利。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>