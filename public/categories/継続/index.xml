<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>継続 on κeenのHappy Hacκing Blog</title>
    <link>/categories/%E7%B6%99%E7%B6%9A/</link>
    <description>Recent content in 継続 on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 21 Dec 2019 01:38:06 +0900</lastBuildDate>
    
	<atom:link href="/categories/%E7%B6%99%E7%B6%9A/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SMLで継続を使ってprintf/scanf</title>
      <link>/blog/2019/12/21/smldekeizokuwotsukatteprintf_scanf/</link>
      <pubDate>Sat, 21 Dec 2019 01:38:06 +0900</pubDate>
      
      <guid>/blog/2019/12/21/smldekeizokuwotsukatteprintf_scanf/</guid>
      <description>&lt;p&gt;κeenです。Advent Calendarが賑う時期ですが特に関係なくSMLの話します。今年MLアドベントカレンダーやってないんですね。O.Danvyのprintfとその逆のscanfについて。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustでCPS変換が簡単になったよという話</title>
      <link>/blog/2019/12/07/rustdecpshenkangakantanninattayotoiuhanashi/</link>
      <pubDate>Sat, 07 Dec 2019 17:59:51 +0900</pubDate>
      
      <guid>/blog/2019/12/07/rustdecpshenkangakantanninattayotoiuhanashi/</guid>
      <description>&lt;p&gt;κeenです。このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust&#34;&gt;Rust Advent Calendar 2019 - Qiita&lt;/a&gt; 8日目の記事です。
昔書いたRustのコードをもけもけ漁ってたら、しばらく前にRustでCPS変換しようとしてた下書きをたまたま発見しました。&lt;/p&gt;

&lt;p&gt;当時はコンパイラの制約で簡単には書けなかったのですが今見ると簡単に書けるようになってたのでRustも進歩してるね、という確認をしたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>継続とかの話題サーベイ</title>
      <link>/blog/2019/06/27/keizokutokanowadaisa_bei/</link>
      <pubDate>Thu, 27 Jun 2019 01:16:40 +0900</pubDate>
      
      <guid>/blog/2019/06/27/keizokutokanowadaisa_bei/</guid>
      <description>&lt;p&gt;日夜CPSに励む紳士淑女のみなさなまこんにちは、κeenです。CPS変換について掘り返してたら発散していったので適当に書き留めておきます。
主に自分向けのメモで、あとで思い出すために書いてるので私自身以外には分かりづらいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>高速な継続ライブラリに向けて</title>
      <link>/slide/kousokunakeizokuraiburarinimukete/</link>
      <pubDate>Sun, 08 May 2016 21:26:32 +0900</pubDate>
      
      <guid>/slide/kousokunakeizokuraiburarinimukete/</guid>
      <description>継続勉強会向け http://connpass.com/event/28150/</description>
    </item>
    
    <item>
      <title>非同期処理の「その後」の話。goto、継続、限定継続、CPS、そしてコールバック地獄。</title>
      <link>/slide/hidoukishorino_sononochi_nohanashi_goto_keizoku_genteikeizoku_cps_soshiteko_rubakkujigoku_/</link>
      <pubDate>Sat, 25 Apr 2015 23:44:46 +0900</pubDate>
      
      <guid>/slide/hidoukishorino_sononochi_nohanashi_goto_keizoku_genteikeizoku_cps_soshiteko_rubakkujigoku_/</guid>
      <description>特に発表予定はないけどなんとなく作ってみたスライド。&lt;br&gt; 非同期処理には(限定)継続が必要という話からCPS変換を導入し、なぜコールバック地獄が起きるのか を説明します。これを見てコールバック地獄への理不尽さが少しでも柔らげばと思います。 </description>
    </item>
    
  </channel>
</rss>
