<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SBCL on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/sbcl/</link>
    <description>Recent content in SBCL on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 20 Jun 2015 18:30:52 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/sbcl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Common Lisp処理系拡張の探求 SBCLのマルチスレッドサポート</title>
      <link>//KeenS.github.io/slide/common_lispshorikeikakuchounotankyuu_sbclnomaruchisureddosapo_to/</link>
      <pubDate>Sat, 20 Jun 2015 18:30:52 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/common_lispshorikeikakuchounotankyuu_sbclnomaruchisureddosapo_to/</guid>
      <description>### Common Lisp 処理系拡張の探求 SBCLのマルチスレッドサポート ---------------------- Lisp Meet Up #29 === # About Me --------- ![κeenのアイコン](/images/icon.png) + κeen + [@blackenedgold](https://twitter.com/blackenedgold) + Github: [KeenS](https://github.com/KeenS) + 渋谷のエンジニア + Lisp, ML, Shell Scriptあたりを書きます === # CLのマルチスレッド ---------------------------- ## [bordeaux-threads](https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation) * 色々な処理系のマルチスレッドサポートの抽象レイヤー * デファクトスタンダード + スレッド + ロック + コンディションヴァリアル === # SBLCのマルチスレッド === # SBLCのマルチスレッド ---------------------------- * スレッド + スレッド内エラー * アトミック操作+ CAS* 排他制御（ロック） * セマフォ * コンディションヴァリアル * バリア * キュー* メールボックス* ゲート* frlock=== # アトミック操作 === # アトミック操作 ---------------- 複雑な動作は同じデータに並行に動かすと壊れうる ``` [var = 1] [incf] | [decf] [1][1] [2]---[var = 2] | | | [var = 0]+---+ go | | V V ``` === # frlock -------- * Fast Read Lock * またの名をRead-Write Lock * Read Lockは多重に取れる。Write Lockは1つしか取れない。 * 基本操作は`frlock-read`と`frlock-write` * 普通のlockと違って複数のReadが速くなる === # まとめ -------- * SBCLのマルチスレッドサポートはbordeaux-threadsよりもリッチ * 処理系の独自サポート面白い * 処理系に依存してしまってもいいんじゃないだろうか   </description>
    </item>
    
    <item>
      <title>VOPで遊ぶ</title>
      <link>//KeenS.github.io/blog/2014/12/02/vopdeyou-bu/</link>
      <pubDate>Tue, 02 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/blog/2014/12/02/vopdeyou-bu/</guid>
      <description>&lt;p&gt;(:meta&lt;br /&gt;
 ((:this &amp;ldquo;&lt;a href=&#34;http://qiita.com/advent-calendar/2014/lisp&#34;&gt;Lisp Advent Calendar 2014&lt;/a&gt;の3日目の記事&amp;rdquo;)&lt;br /&gt;
  (:prev (:author &amp;ldquo;tk_riple&amp;rdquo; :title &lt;a href=&#34;http://compassoftime.blogspot.jp/2014/12/r7rs.html&#34;&gt;&amp;ldquo;時の羅針盤＠blog: R7RSポータブルライブラリを書く際の落とし穴&amp;rdquo;&lt;/a&gt;))&lt;br /&gt;
  (:next (:author &amp;ldquo;nobkz&amp;rdquo; :tite &amp;ldquo;&lt;a href=&#34;http://qiita.com/nobkz/items/68ee2adbc13caf3eec6f&#34;&gt;Shenの基礎その1 基本的な型 - Qiita&lt;/a&gt;&amp;rdquo;))))&lt;/p&gt;

&lt;p&gt;κeenです。さっきまでVOPで遊んでたので当初の予定を変更してVOPの話をします。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>