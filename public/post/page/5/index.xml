<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/post/</link>
    <description>Recent content in Posts on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 21 Dec 2019 22:31:35 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>クレートを公開する前に埋めておくべきメタデータ</title>
      <link>//KeenS.github.io/blog/2017/12/03/kure_towokoukaisurumaeniumeteokubekimetade_ta/</link>
      <pubDate>Sun, 03 Dec 2017 23:14:35 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/12/03/kure_towokoukaisurumaeniumeteokubekimetade_ta/</guid>
      <description>&lt;p&gt;κeenです。&lt;a href=&#34;https://qiita.com/advent-calendar/2017/rust-lang-2&#34;&gt;Rustその2 Advent Calendar 2017&lt;/a&gt;3日目の記事です。&lt;/p&gt;

&lt;p&gt;クレートを&lt;code&gt;cargo publish&lt;/code&gt;する前に何すればいいんだっけと毎回なるので備忘録
publishするまでの手順自体は&lt;a href=&#34;https://keens.github.io/blog/2016/01/31/rustnopakke_jiwocrates_ionitourokusuru/&#34;&gt;過去記事&lt;/a&gt;を参考にして下さい&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ironのレスポンスの中身を覗き見るライブラリを雑に作った</title>
      <link>//KeenS.github.io/blog/2017/12/02/ironnoresuponsunonakamiwonozokimiruraiburariwozatsunitsukutta/</link>
      <pubDate>Sat, 02 Dec 2017 17:23:53 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/12/02/ironnoresuponsunonakamiwonozokimiruraiburariwozatsunitsukutta/</guid>
      <description>&lt;p&gt;κeenです。&lt;a href=&#34;https://qiita.com/advent-calendar/2017/rust-lang-2&#34;&gt;Rustその2 Advent Calendar 2017&lt;/a&gt;2日目の記事です。
タイトルのままです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustのDI</title>
      <link>//KeenS.github.io/blog/2017/12/01/rustnodi/</link>
      <pubDate>Fri, 01 Dec 2017 21:10:52 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/12/01/rustnodi/</guid>
      <description>&lt;p&gt;κeenです。&lt;a href=&#34;https://qiita.com/advent-calendar/2017/rust-lang-2&#34;&gt;Rustその2 Advent Calendar 2017&lt;/a&gt;が空いてたので小ネタをば。1日目の記事です。
&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E4%BE%9D%E5%AD%98%E6%80%A7%E3%81%AE%E6%B3%A8%E5%85%A5&#34;&gt;Dependency Injection&lt;/a&gt;の話。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>雰囲気でシェルを使っている人のためのシェル入門</title>
      <link>//KeenS.github.io/blog/2017/10/17/fun_ikideshieruwotsukatteiruninnotamenoshierunyuumon/</link>
      <pubDate>Tue, 17 Oct 2017 22:36:14 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/10/17/fun_ikideshieruwotsukatteiruninnotamenoshierunyuumon/</guid>
      <description>&lt;p&gt;κeenです。雰囲気でシェルを使ってる人が多いとのことだったので少しばかり込み入った知識を。
あと一応POSIX準拠かどうかも気にしながらやっていきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>心臓のこと</title>
      <link>//KeenS.github.io/blog/2017/10/09/shinzounokoto/</link>
      <pubDate>Mon, 09 Oct 2017 17:32:40 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/10/09/shinzounokoto/</guid>
      <description>&lt;p&gt;κeenです。そろそろそういう時期になってきたので。
結論からいうと心配無用です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで高速な標準出力</title>
      <link>//KeenS.github.io/blog/2017/10/05/rustdekousokunahyoujunshutsuryoku/</link>
      <pubDate>Thu, 05 Oct 2017 20:36:33 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/10/05/rustdekousokunahyoujunshutsuryoku/</guid>
      <description>&lt;p&gt;κeenです。Rustで何も考えずに標準出力に吐いてると遅いよねーって話です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoにシーケンス図を埋め込むその2</title>
      <link>//KeenS.github.io/blog/2017/08/27/hugonishi_kensuzuwoumekomusono2/</link>
      <pubDate>Sun, 27 Aug 2017 09:57:09 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/08/27/hugonishi_kensuzuwoumekomusono2/</guid>
      <description>&lt;p&gt;κeenです。&lt;a href=&#34;//KeenS.github.io/blog/2017/08/26/hugonishi_kensuzuwoumekomu/&#34;&gt;昨日のエントリ&lt;/a&gt;に&lt;a href=&#34;https://github.com/knsv/mermaid&#34;&gt;mermaid.js&lt;/a&gt;を試すといいよとのコメントを頂いたので試します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoにシーケンス図を埋め込む</title>
      <link>//KeenS.github.io/blog/2017/08/26/hugonishi_kensuzuwoumekomu/</link>
      <pubDate>Sat, 26 Aug 2017 15:20:21 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/08/26/hugonishi_kensuzuwoumekomu/</guid>
      <description>&lt;p&gt;κeenです。ブログに図を入れるお話です。
このブログの長らくの読者ならお気付きかもしれませんが、アスキーアートを多用していました。inkscapeを開いて図を生成してコピーして手で画像へのリンクを張るのがだるいためです。特段自動生成とかはしてなくて、全て手書きです。
流石にそろそろどうにかしようと思い立っていじった次第です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ステートマシン抽象化としてのFuture</title>
      <link>//KeenS.github.io/blog/2017/07/02/sute_tomashinchuushoukatoshitenofuture/</link>
      <pubDate>Sun, 02 Jul 2017 12:31:07 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/07/02/sute_tomashinchuushoukatoshitenofuture/</guid>
      <description>&lt;p&gt;κeenです。最近Futureと一口にいってもいくつか種類があるなと気付いたのでRustの&lt;a href=&#34;https://github.com/alexcrichton/futures-rs&#34;&gt;&lt;code&gt;futures-rs&lt;/code&gt;&lt;/a&gt;に実装されているFutureの挙動を紐解こうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ジェネリクス勉強会補足</title>
      <link>//KeenS.github.io/blog/2017/06/24/jienerikusubenkyoukaihosoku/</link>
      <pubDate>Sat, 24 Jun 2017 23:22:16 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/06/24/jienerikusubenkyoukaihosoku/</guid>
      <description>&lt;p&gt;κeenです。本日&lt;a href=&#34;https://connpass.com/event/56773/?utm_campaign=event_participate_to_owner&amp;amp;utm_source=notifications&amp;amp;utm_medium=email&amp;amp;utm_content=title_link&#34;&gt;ジェネリクス勉強会&lt;/a&gt;で発表したのですがいくつか拾いきれないコメントがあったのでここでお返事書きます&lt;/p&gt;

&lt;p&gt;発表スライドは&lt;a href=&#34;https://keens.github.io/slide/jienerikusu_disupatchi_omoteura/&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustでエラーが出てないのにファイルに書き出せないときは</title>
      <link>//KeenS.github.io/blog/2017/06/13/rustdeera_gadetenainonifairunikakidasenaitokiha/</link>
      <pubDate>Tue, 13 Jun 2017 22:53:46 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/06/13/rustdeera_gadetenainonifairunikakidasenaitokiha/</guid>
      <description>&lt;p&gt;κeenです。随分前から書こうと思いつつ先送りになっていた小ネタです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustのトランザクション抽象化ライブラリ作った</title>
      <link>//KeenS.github.io/blog/2017/06/06/rustnotoranzakushonchuushoukaraiburaritsukutta/</link>
      <pubDate>Tue, 06 Jun 2017 18:20:52 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/06/06/rustnotoranzakushonchuushoukaraiburaritsukutta/</guid>
      <description>&lt;p&gt;κeenです。最近&lt;a href=&#34;https://github.com/KeenS/transaction-rs&#34;&gt;KeenS/transaction-rs: The transaction abstraction library and its executors for rust&lt;/a&gt;というライブラリをリリースしたのでそれについて。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>非同期とノンブロッキングとあと何か</title>
      <link>//KeenS.github.io/blog/2017/05/19/hidoukitononburokkingutoatonanika/</link>
      <pubDate>Fri, 19 May 2017 20:51:46 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/05/19/hidoukitononburokkingutoatonanika/</guid>
      <description>&lt;p&gt;κeenです。最近同期/非同期、ブロッキング/ノンブロッキング、直接形式/継続渡し形式あたりが混乱してきたので個人的に整理します。
あくまで私個人の理解を纏めただけなので誤謬などに注意して下さい。&lt;/p&gt;

&lt;p&gt;追記: &lt;a href=&#34;https://twitter.com/tanaka_akr&#34;&gt;@tanaka_akr&lt;/a&gt;さんから&lt;a href=&#34;https://twitter.com/tanaka_akr/status/865722507281580032&#34;&gt;指摘&lt;/a&gt;されたのですが、用語の説明が間違っていそうだったので書き直しました。
diffは&lt;a href=&#34;https://github.com/KeenS/KeenS.github.io/commit/d46dad5282436eeaa615f31c160f892e6c724403&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rust風にデザインパターン23種</title>
      <link>//KeenS.github.io/blog/2017/05/06/rustkazenidezainpata_n23tane/</link>
      <pubDate>Sat, 06 May 2017 21:59:30 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/05/06/rustkazenidezainpata_n23tane/</guid>
      <description>&lt;p&gt;κeenです。
GoFのデザインパターンは有名ですが、言語機能によっては単純化できたりあるいは不要だったりするのでRust風に書き換えたらどうなるか試してみます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>メモリとスタックとヒープとプログラミング言語</title>
      <link>//KeenS.github.io/blog/2017/04/30/memoritosutakkutohi_puto/</link>
      <pubDate>Sun, 30 Apr 2017 09:09:50 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/04/30/memoritosutakkutohi_puto/</guid>
      <description>&lt;p&gt;κeenです。
今回の話は別にRustに限ったものではないのですが、よくRustを始めたばかりの人がスタックとヒープが分からないと言っているのをみかけるので少しメモリの話をしますね。
厳密な話というよりは雰囲気を掴んで欲しいという感じです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cargoのサブプロジェクトとreplace</title>
      <link>//KeenS.github.io/blog/2017/04/05/cargonosabupurojiekutotoreplace/</link>
      <pubDate>Wed, 05 Apr 2017 20:46:26 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/04/05/cargonosabupurojiekutotoreplace/</guid>
      <description>&lt;p&gt;κeenです。最近Cargoのreplace機能を使おうとしてハマったのでメモを残しておきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>関数型プログラマからみたRust</title>
      <link>//KeenS.github.io/blog/2017/04/04/kansuugatapuroguramakaramitarust/</link>
      <pubDate>Tue, 04 Apr 2017 21:38:57 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/04/04/kansuugatapuroguramakaramitarust/</guid>
      <description>&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;C++からRustに入った人あたりから「関数型言語から来た人のRustの感想を知りたい」とたまに言われるのでいつかブログ書こうか。&lt;/p&gt;&amp;mdash; κeen (@blackenedgold) &lt;a href=&#34;https://twitter.com/blackenedgold/status/848900720573075458&#34;&gt;2017年4月3日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>オーディナルの話とカーディナルの話</title>
      <link>//KeenS.github.io/blog/2017/03/02/o_dinarunohanashitoka_dinarunohanashi/</link>
      <pubDate>Thu, 02 Mar 2017 21:15:44 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/03/02/o_dinarunohanashitoka_dinarunohanashi/</guid>
      <description>&lt;p&gt;ちょっとオーディナルの話をしよう。ついでにカーディナルの話もしよう。
特に何も知らなくても分かる内容。だけど文脈を知ってると伝えたいことが伝わる筈。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustのちょっとやりすぎなBuilderパターン</title>
      <link>//KeenS.github.io/blog/2017/02/09/rustnochottoyarisuginabuilderpata_n/</link>
      <pubDate>Thu, 09 Feb 2017 23:03:45 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/02/09/rustnochottoyarisuginabuilderpata_n/</guid>
      <description>&lt;p&gt;κeenです。Rustでちょっとやりすぎだけど使う側の自由度が高くて安全なBuilderパターンを思い付いたので紹介しますね。&lt;/p&gt;

&lt;p&gt;※2017-02-11T13:18:58Z+09:00 最下部に追記しました&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deprecating CIM</title>
      <link>//KeenS.github.io/blog/2017/01/29/deprecating_cim/</link>
      <pubDate>Sun, 29 Jan 2017 22:18:24 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/01/29/deprecating_cim/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m κeen. I have a sad news, I&amp;rsquo;ll stop the development of &lt;a href=&#34;https://github.com/KeenS/CIM&#34;&gt;CIM&lt;/a&gt; and no more updates for new lisp impls will be provided.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
