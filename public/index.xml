<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>κeenのHappy Hacκing Blog</title>
    <link>/</link>
    <description>Recent content on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 02 Dec 2020 22:27:01 +0900</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Idrisの基本文法</title>
      <link>/blog/2020/12/02/idrisnokihonbunpou/</link>
      <pubDate>Wed, 02 Dec 2020 22:27:01 +0900</pubDate>
      
      <guid>/blog/2020/12/02/idrisnokihonbunpou/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/idris&#34;&gt;Idris Advent Calendar 2020&lt;/a&gt;の4日目のエントリです。前はhelloyukiさんで「IdrisにHello World on VSCode &amp;amp; Mac」でした。&lt;/p&gt;

&lt;p&gt;κeenです。今回は基本文法を解説します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustの環境構築（Emacs）</title>
      <link>/blog/2020/12/01/rustnokankyoukouchiku_emacs_/</link>
      <pubDate>Tue, 01 Dec 2020 23:17:11 +0900</pubDate>
      
      <guid>/blog/2020/12/01/rustnokankyoukouchiku_emacs_/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/rust3&#34;&gt;Rust 3 Advent Calendar 2020&lt;/a&gt;の2日目の記事です。前回はstnaoさんで&lt;a href=&#34;https://qiita.com/stnao/items/c366cabffa77becdf9ef&#34;&gt;Rust,Wasm,Dockerで&amp;rdquo;hello world&amp;rdquo;をする MacOs catalina&lt;/a&gt;でした。&lt;/p&gt;

&lt;p&gt;アドベントカレンダー埋まってないところを埋める担当のκeenです。そういえばRustの環境構築の記事を最近みかけないなと思ったので書きます。
それと私がEmacs使いなのでEmacsのセットアップや開発方法なども記します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Idrisのインストール</title>
      <link>/blog/2020/12/01/idrisnoinsuto_ru/</link>
      <pubDate>Tue, 01 Dec 2020 21:50:14 +0900</pubDate>
      
      <guid>/blog/2020/12/01/idrisnoinsuto_ru/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/idris&#34;&gt;Idris Advent Calendar 2020&lt;/a&gt;の2日目の記事です。前回は&lt;a href=&#34;https://keens.github.io/blog/2020/11/30/idristtedonnagengo_/&#34;&gt;依存型のあるHaskellことIdrisってどんな言語？&lt;/a&gt;でした。&lt;/p&gt;

&lt;p&gt;κeenです。
Idrisの紹介が済んだので処理系のインストール方法を紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>依存型のあるHaskellことIdrisってどんな言語？</title>
      <link>/blog/2020/11/30/idristtedonnagengo_/</link>
      <pubDate>Mon, 30 Nov 2020 23:46:01 +0900</pubDate>
      
      <guid>/blog/2020/11/30/idristtedonnagengo_/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/idris&#34;&gt;Idris Advent Calendar 2020&lt;/a&gt;の1日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。
Idrisのことを知らない人も多いと思うのでIdrisの紹介からはじめていきたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自作コンパイラをブラウザ上で動かす</title>
      <link>/blog/2020/11/30/jisakukonpairawoburauzauedeugokasu/</link>
      <pubDate>Mon, 30 Nov 2020 01:47:29 +0900</pubDate>
      
      <guid>/blog/2020/11/30/jisakukonpairawoburauzauedeugokasu/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/lang_dev&#34;&gt;言語実装 Advent Calendar 2020&lt;/a&gt;の1日目の記事です。
次はsisshiki1969さんで「RustでつくるRuby、その後の進捗」です。&lt;/p&gt;

&lt;p&gt;κeenです。
昔からちまちま作ってるSML処理系をブラウザ上で動かすことができたのでその進捗報告です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ブラウザ上で音楽を演奏する</title>
      <link>/blog/2020/11/14/burauzauedeongakuwoensousuru/</link>
      <pubDate>Sat, 14 Nov 2020 10:23:27 +0900</pubDate>
      
      <guid>/blog/2020/11/14/burauzauedeongakuwoensousuru/</guid>
      <description>&lt;p&gt;κeenです。めずらしくWebの話題でも。ブラウザ上で音出したいときってどうすればいいんだっけとなって調べた結果です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Inkscapeを使ってSVGからOGPイメージを半自動生成する</title>
      <link>/blog/2020/11/09/inkscapewotsukattesvgkaraogpime_jiwohanjidouseiseisuru/</link>
      <pubDate>Mon, 09 Nov 2020 03:10:33 +0900</pubDate>
      
      <guid>/blog/2020/11/09/inkscapewotsukattesvgkaraogpime_jiwohanjidouseiseisuru/</guid>
      <description>&lt;p&gt;κeenです。重い腰を上げてブログ記事のOGPを設定するようにしたので共有します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linuxで発表動画を撮る</title>
      <link>/blog/2020/11/08/linuxdehappyoudougawotoru/</link>
      <pubDate>Sun, 08 Nov 2020 09:21:53 +0900</pubDate>
      
      <guid>/blog/2020/11/08/linuxdehappyoudougawotoru/</guid>
      <description>&lt;p&gt;κeenです。
最近テックイベントに参加するにあたって発表動画を提出する機会があったので使用したツールを紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Inkscapeで描いたパーツをブラウザ上で合成する</title>
      <link>/blog/2020/11/03/inkscapedeegaitapa_tsuwoburauzauedegouseisuru/</link>
      <pubDate>Tue, 03 Nov 2020 09:54:05 +0900</pubDate>
      
      <guid>/blog/2020/11/03/inkscapedeegaitapa_tsuwoburauzauedegouseisuru/</guid>
      <description>&lt;p&gt;κeenです。最近紙芝居みたいなSVGをブログ（スライド）に載せる需要があったときに調べたのでそのメモ。
Inkscapeで描いたSVGを組み合わせます。Inkscape 1.0.1での情報です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>言語自作を通して学んだRust</title>
      <link>/slide/gengojisakuwotoushitemanandarust/</link>
      <pubDate>Mon, 26 Oct 2020 21:24:22 +0900</pubDate>
      
      <guid>/slide/gengojisakuwotoushitemanandarust/</guid>
      <description>Rustに入門してはじめてまとまった量のコードを書いたのが自作のLispインタプリタでした。当時の自分にはインタプリタは複雑すぎる題材でしたが、それゆえに多くのことを学びました。その後もシェルやMLコンパイラなどいくつかの言語を作っていきながらRustの機能を学んできました。本講演では言語自作を通して学んできたことをベースに、Rustに入門したての段階でのありがちなトラブルや意外と知られていない機能、Rustコンパイラの進化などを紹介します。Rustの入門体験記は色々ありますが、1つのテーマに沿って何度もプログラムを書いたことで徐々に問題へのアプローチが上手くなっていく点や、言語実装者が新たな言語を学んでいくという側面にも触れられたらなと思います。</description>
    </item>
    
    <item>
      <title>Rustでインメモリキャッシュ作った話</title>
      <link>/blog/2020/10/20/rustdeinmemorikyasshutsukuttahanashi/</link>
      <pubDate>Tue, 20 Oct 2020 03:37:17 +0900</pubDate>
      
      <guid>/blog/2020/10/20/rustdeinmemorikyasshutsukuttahanashi/</guid>
      <description>&lt;p&gt;κeenです。先日発表した&lt;a href=&#34;https://keens.github.io/slide/rustdetsukuruinmemorikyasshu/&#34;&gt;Rustで作るインメモリキャッシュ&lt;/a&gt;が全然話し足りなかったので色々補足します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで作るインメモリキャッシュ</title>
      <link>/slide/rustdetsukuruinmemorikyasshu/</link>
      <pubDate>Sun, 18 Oct 2020 18:22:00 +0900</pubDate>
      
      <guid>/slide/rustdetsukuruinmemorikyasshu/</guid>
      <description>shinjuku.rsでの発表用。</description>
    </item>
    
    <item>
      <title>「安全」な言語Rust</title>
      <link>/slide/anzennagengorust/</link>
      <pubDate>Thu, 25 Jun 2020 09:31:42 +0900</pubDate>
      
      <guid>/slide/anzennagengorust/</guid>
      <description>フィンテックエンジニア養成勉強会9での発表用。Rustの紹介。</description>
    </item>
    
    <item>
      <title>シャドイングの嬉しさ</title>
      <link>/blog/2020/06/20/shadoingunoureshisa/</link>
      <pubDate>Sat, 20 Jun 2020 00:28:15 +0900</pubDate>
      
      <guid>/blog/2020/06/20/shadoingunoureshisa/</guid>
      <description>&lt;p&gt;κeenです。
Rustに限った話ではないのですが、よくRustを触ってみた人がシャドイングが気持ち悪いという反応をしているのを見かけるのでシャドイングがどういう機能かを解説します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WasmtimeのimportsにRustの関数を差し込む</title>
      <link>/blog/2020/06/07/wasmtimenoimportsnirustnokansuuwosashikomu/</link>
      <pubDate>Sun, 07 Jun 2020 03:08:39 +0900</pubDate>
      
      <guid>/blog/2020/06/07/wasmtimenoimportsnirustnokansuuwosashikomu/</guid>
      <description>&lt;p&gt;κeenです。WebAssembly/WASIのランタイム&lt;a href=&#34;https://wasmtime.dev/&#34;&gt;Wasmtime&lt;/a&gt;をちょっと触ってみたのでそのときのメモを残します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustのHashMapはentryが便利</title>
      <link>/blog/2020/05/23/rustnohashmaphaentrygabenri/</link>
      <pubDate>Sat, 23 May 2020 23:47:12 +0900</pubDate>
      
      <guid>/blog/2020/05/23/rustnohashmaphaentrygabenri/</guid>
      <description>&lt;p&gt;κeenです。個人的によく設計したなと思っているRustのEntry APIについて紹介します。
標準ライブラリのHashMapの操作を無駄なく書きたい人におすすめ。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Twitter上のプログラミング入門者観察記</title>
      <link>/blog/2020/05/20/twitteruenopuroguramingunyuumonshakansatsunikki/</link>
      <pubDate>Wed, 20 May 2020 03:54:06 +0900</pubDate>
      
      <guid>/blog/2020/05/20/twitteruenopuroguramingunyuumonshakansatsunikki/</guid>
      <description>&lt;p&gt;κeenです。
ここ半年くらいTwitter上でプログラミングに入門してる人、入門してエンジニアとして働きはじめたばかりの人を観察していました。
そろそろ潮時かなと思ったので観察結果を報告します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで強めに型をつけるPart 5: 「なんでも文字列」をやめる</title>
      <link>/blog/2020/05/14/rustdetsuyomenikatawotsukerupart_5___nandemomojiretsu_woyameru/</link>
      <pubDate>Thu, 14 May 2020 03:05:21 +0900</pubDate>
      
      <guid>/blog/2020/05/14/rustdetsuyomenikatawotsukerupart_5___nandemomojiretsu_woyameru/</guid>
      <description>&lt;p&gt;κeenです。「強めに型をつける」シリーズです。
いつか書こうと思って後回しにしてたら全然書かなかったので寝れない夜に筆をとります。
特にスクリプト言語を使ってた人にありがちな「なんでも文字列」について。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rust-analyzerの紹介</title>
      <link>/slide/rust_analyzernoshoukai/</link>
      <pubDate>Mon, 27 Apr 2020 23:38:53 +0900</pubDate>
      
      <guid>/slide/rust_analyzernoshoukai/</guid>
      <description>下町.rsでの発表用。rust-analyzerについて。</description>
    </item>
    
    <item>
      <title>最小限のELF</title>
      <link>/blog/2020/04/12/saishougennoelf/</link>
      <pubDate>Sun, 12 Apr 2020 17:30:06 +0900</pubDate>
      
      <guid>/blog/2020/04/12/saishougennoelf/</guid>
      <description>&lt;p&gt;κeenです。
&lt;a href=&#34;/blog/2020/04/01/taneakirakashi__whitespacekonpairawotsukuttahanashinouragawa/&#34;&gt;先日の記事&lt;/a&gt;で言及した最小限のELFが需要ありそうだったので解説してみます。
コンパイラを作るときの参考にしてみて下さい&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
