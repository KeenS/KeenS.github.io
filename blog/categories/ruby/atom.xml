<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | κeenのHappy Hacκing Blog]]></title>
  <link href="http://KeenS.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://KeenS.github.io/"/>
  <updated>2014-07-10T18:00:36+09:00</updated>
  <id>http://KeenS.github.io/</id>
  <author>
    <name><![CDATA[κeen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RSPiでMongoDBを動かし、Twitter Post Alertを作った話]]></title>
    <link href="http://KeenS.github.io/blog/2014/01/19/rspi-plus-mongodb-plus-twitter/"/>
    <updated>2014-01-19T18:17:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2014/01/19/rspi-plus-mongodb-plus-twitter</id>
    <content type="html"><![CDATA[<p>κeenです。ここのところ寒い日が続いてますね。寒いと家に扃(ひきこも)ってTweet数が急上昇します。 すると一日に何postしてるか気になるのでカウンタを作りました。<br/>
そのときの苦労話です。</p>

<!-- more -->


<p>ただ、どうせ記録取るなら色々やりたいのでRspberry Piで一日のpost数、fav数、そしてメンヘラなことにフォロー/フォロワー全員のidを毎日記録することにしました。これで誰にリムられたかブロられたか一目瞭然ですね。</p>

<p>ここで一つ問題が。post, fav数は良いのですがフォロー/フォロワーのid一覧は毎日変わるのでmysqlで管理するのはちょっと面倒かなと。なのでMongoDBで管理することにしたいんですが、raspbianの<code>apt</code>にないんですよね。仕方ないので手動ビルドで対応しました。</p>

<h2>MongoDBのビルド</h2>

<p><a href="http://c-mobberley.com/wordpress/index.php/2013/10/14/raspberry-pi-mongodb-installation-the-working-guide/">ここ</a>を参考に</p>

<pre><code>cd ~/compile
sudo apt-get install build-essential libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev scons libboost-all-dev python-pymongo git
git clone https://github.com/skrabban/mongo-nonx86
cd mongo-nonx86
sudo scons
</code></pre>

<p>としました。が、<code>scons</code>に一晩かかるとのことなので放置してたら何故かraspberry piが落ちてる…<br/>
気をとりなおして再起動。もう一度<code>sudo scons</code>すると今度はエラー終了。<code>sig 9 killed</code>…いや、私なにもしてないですよ?ダメ元で今度は</p>

<pre><code>sudo scons install
</code></pre>

<p>したら完走。良ク分カラン。狂想曲感が出てますね。</p>

<h2>MongoDBのインストール</h2>

<p>さっきのでインストール終わったと思うでしょ？違うんですよ。<code>init.d</code>だとか<code>mongodb.conf</code>だとかは配置されてないんですよ。<code>debian/</code>以下に色々入ってるので</p>

<pre><code>cd debian
sudo cp mongodb.conf /etc/mongodb.conf
</code></pre>

<p>までは良いのですが、<code>init.d</code>と<code>mongodb.upstart</code>の<code>mongod</code>のパスが<code>/usr/bin/mongod</code>でハードコードされてるんですよ。上の<code>sudo scons install</code>だと<code>/usr/local/bin/mongod</code>です。さらに起動オプションに<code>--dbpadh /var/lib/mongodb</code>と<code>--logpath /var/log/mongodb/mongodb.log</code>が指定されていて、<code>mongodb.conf</code>で上書きしているにも係らずそこまでのパスが存在しないとエラー吐いて起動してくれないので修正。<br/>
<code>mongodb.upstart</code>は直ぐ分かるので良いとして、<code>init.d</code>は</p>

<p><figure class="code"><div class="highlight"><table><tr>
<td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td>
<td class="code"><pre><code class=""><span class="line">48d47
</span><span class="line">&lt;
</span><span class="line">50c49
</span><span class="line">&lt; DAEMON=/usr/bin/mongod
</span><span class="line">&mdash;&ndash;
</span><span class="line">&gt; DAEMON=/usr/local/bin/mongod
</span><span class="line">100c99
</span><span class="line">&lt; DAEMON_OPTS=&ldquo;$DAEMON_OPTS &mdash;config $CONF&rdquo;
</span><span class="line">&mdash;&ndash;
</span><span class="line">&gt; DAEMON_OPTS=&ldquo;run &mdash;config $CONF&rdquo;
</span></code></pre></td>
</tr></table></div></figure></p>

<p>な感じの修正です。なんか空行が一つ減ってますが気にしない。<br/>
ここまでしたらようやく</p>

<pre><code>chmod +x init.d mongodb.upstart
sudo cp init.d /etc/init.d/mongodb
sudo cp mongodb.upstart /etc/init/mongodb
</code></pre>

<p>で完了です。<code>man</code>とかもあるのですが配置の仕方が分からないので放置←</p>

<pre><code>sudo service mongodb start
mongo
</code></pre>

<p>で接続確認できます。</p>

<h2>Twitterのpostを集約する</h2>

<p>ビックリするくらい簡単。twitterのAPI keyを持ってる前提ですが。</p>

<pre><code>sudo gem install twitter mongo
</code></pre>

<p>で必要なgemをインストールし、<code>~/.twitter.rb</code>に</p>

<p><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr>
<td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td>
<td class="code"><pre><code class="ruby"><span class="line"><span class="vg">$client</span> <span class="o">=</span> <span class="ss">Twitter</span><span class="p">:</span><span class="ss">:REST</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">conf</span><span class="o">|</span>
</span><span class="line"> <span class="n">conf</span><span class="o">.</span><span class="n">consumer_key</span> <span class="o">=</span> <span class="s2">&ldquo;yours&rdquo;</span>
</span><span class="line"> <span class="n">conf</span><span class="o">.</span><span class="n">consumer_secret</span> <span class="o">=</span> <span class="s2">&ldquo;yours&rdquo;</span>
</span><span class="line"> <span class="n">conf</span><span class="o">.</span><span class="n">access_token</span> <span class="o">=</span> <span class="s2">&ldquo;yours&rdquo;</span>
</span><span class="line"> <span class="n">conf</span><span class="o">.</span><span class="n">access_token_secret</span> <span class="o">=</span> <span class="s2">&ldquo;yours&rdquo;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td>
</tr></table></div></figure></p>

<p>と保存しておきます。昔と形式が変わりましたね。この形式になってからスレッドセーフになり、Twitter Stream APIにも対応してるようです。いつか扱ってみたい</p>

<p>集計ですが</p>

<p><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr>
<td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td>
<td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#! /usr/local/bin/ruby</span>
</span><span class="line"><span class="c1"># coding: utf-8</span>
</span><span class="line"><span class="nb">require</span> <span class="s1">&lsquo;twitter&rsquo;</span>
</span><span class="line"><span class="nb">require</span> <span class="s1">&lsquo;mongo&rsquo;</span>
</span><span class="line"><span class="nb">require</span> <span class="s1">&lsquo;time&rsquo;</span>
</span><span class="line"><span class="nb">load</span> <span class="s2">&ldquo;~/.twitter.rb&rdquo;</span>
</span><span class="line">
</span><span class="line"><span class="n">doc</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&ldquo;tweets&rdquo;</span> <span class="o">=&gt;</span> <span class="vg">$client</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">tweets_count</span><span class="p">,</span>
</span><span class="line"> <span class="s2">&ldquo;favs&rdquo;</span> <span class="o">=&gt;</span> <span class="vg">$client</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">favorites_count</span><span class="p">,</span>
</span><span class="line"> <span class="s2">&ldquo;followers&rdquo;</span> <span class="o">=&gt;</span> <span class="vg">$client</span><span class="o">.</span><span class="n">friend_ids</span><span class="o">.</span><span class="n">to_a</span><span class="p">,</span>
</span><span class="line"> <span class="s2">&ldquo;friends&rdquo;</span> <span class="o">=&gt;</span> <span class="vg">$client</span><span class="o">.</span><span class="n">follower_ids</span><span class="o">.</span><span class="n">to_a</span><span class="p">,</span>
</span><span class="line"> <span class="s2">&ldquo;timestamp&rdquo;</span> <span class="o">=&gt;</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&ldquo;%Y%m%d%H%M%S&rdquo;</span><span class="p">)}</span>
</span><span class="line"><span class="n">col</span> <span class="o">=</span> <span class="ss">Mongo</span><span class="p">:</span><span class="ss">:Connection</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">db</span><span class="p">(</span><span class="s2">&ldquo;twitter&rdquo;</span><span class="p">)</span><span class="o">.</span><span class="n">collection</span><span class="p">(</span><span class="s2">&ldquo;tweets&rdquo;</span><span class="p">)</span>
</span><span class="line"><span class="n">last</span> <span class="o">=</span> <span class="n">col</span><span class="o">.</span><span class="n">find</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="o">[</span><span class="s2">&ldquo;timestamp&rdquo;</span><span class="p">,</span><span class="ss">:desc</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class="line">
</span><span class="line"><span class="n">tweets_sub</span> <span class="o">=</span> <span class="n">doc</span><span class="o">[</span><span class="s2">&ldquo;tweets&rdquo;</span><span class="o">]</span> <span class="o">&ndash;</span> <span class="n">last</span><span class="o">[</span><span class="s2">&ldquo;tweets&rdquo;</span><span class="o">]</span>
</span><span class="line"><span class="n">favs_sub</span> <span class="o">=</span> <span class="n">doc</span><span class="o">[</span><span class="s2">&ldquo;favs&rdquo;</span><span class="o">]</span> <span class="o">&ndash;</span> <span class="n">last</span><span class="o">[</span><span class="s2">&ldquo;favs&rdquo;</span><span class="o">]</span>
</span><span class="line"><span class="n">followers_sub</span> <span class="o">=</span> <span class="n">doc</span><span class="o">[</span><span class="s2">&ldquo;followers&rdquo;</span><span class="o">].</span><span class="n">length</span> <span class="o">&ndash;</span> <span class="n">last</span><span class="o">[</span><span class="s2">&ldquo;followers&rdquo;</span><span class="o">].</span><span class="n">length</span>
</span><span class="line"><span class="n">friends_sub</span> <span class="o">=</span> <span class="n">doc</span><span class="o">[</span><span class="s2">&ldquo;friends&rdquo;</span><span class="o">].</span><span class="n">length</span> <span class="o">&ndash;</span> <span class="n">last</span><span class="o">[</span><span class="s2">&ldquo;friends&rdquo;</span><span class="o">].</span><span class="n">length</span>
</span><span class="line"><span class="n">col</span><span class="o">.</span><span class="n">insert</span> <span class="n">doc</span>
</span><span class="line"><span class="n">message</span> <span class="o">=</span> <span class="s2">&ldquo;前回計測(</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">last</span><span class="o">[</span><span class="s2">"timestamp&rdquo;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">strftime</span> <span class="s2">&ldquo;%Y-%m-%d %H:%M:%S&rdquo;</span><span class="si">}</span><span class="s2">)以降</span><span class="se">\n</span><span class="s2">&ldquo;</span>
</span><span class="line"><span class="n">message</span> <span class="o">+=</span> <span class="s2">&rdquo;</span><span class="si">#{</span><span class="n">tweets_sub</span><span class="si">}</span><span class="s2">回ツイートし</span><span class="se">\n</span><span class="s2">&ldquo;</span>
</span><span class="line"><span class="n">message</span> <span class="o">+=</span> <span class="s2">&rdquo;</span><span class="si">#{</span><span class="n">favs_sub</span><span class="si">}</span><span class="s2">回favり</span><span class="se">\n</span><span class="s2">&ldquo;</span>
</span><span class="line"><span class="n">message</span> <span class="o">+=</span> <span class="s2">"友達は</span><span class="si">#{</span><span class="n">friends_sub</span><span class="o">.</span><span class="n">abs</span><span class="si">}</span><span class="s2">人</span><span class="si">#{</span><span class="n">friends_sub</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">?</span> <span class="s2">"増え&rdquo;</span> <span class="p">:</span> <span class="s2">&ldquo;減り&rdquo;</span><span class="si">}</span><span class="se">\n</span><span class="s2">&ldquo;</span>
</span><span class="line"><span class="n">message</span> <span class="o">+=</span> <span class="s2">"フォロワーは</span><span class="si">#{</span><span class="n">followers_sub</span><span class="o">.</span><span class="n">abs</span><span class="si">}</span><span class="s2">人</span><span class="si">#{</span><span class="n">followers_sub</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">?</span> <span class="s2">"増え&rdquo;</span> <span class="p">:</span> <span class="s2">&ldquo;減り&rdquo;</span><span class="si">}</span><span class="s2">ました"</span>
</span><span class="line"><span class="vg">$client</span><span class="o">.</span><span class="n">update</span> <span class="n">message</span>
</span></code></pre></td>
</tr></table></div></figure></p>

<p>で全部です。Rubyのハッシュ+配列がそのままinsert/selectできるのでぜんぜんMongoDBを意識しなくて良いですね。</p>

<p>ところで<code>datetime</code>型が無さげだったので<code>timestamp</code>をソートキー兼idにするために<code>YYYYMMDDHHMMSS</code>形式の文字列で格納してます(整数は8bitまでっぽかったです)。他に良い方法があると思うのですが思いつきませんでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MPlayerがうまく動かない]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/29/mplayer/"/>
    <updated>2013-09-29T01:51:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/29/mplayer</id>
    <content type="html"><![CDATA[<p>MPlayerを使ってBGMを流すコマンドを作ろうとしたときに困ったことがいくつかあったので誰か解決して下さい。</p>

<!-- more -->


<p>スクリプトは3年前で更新がとまってる<code>mplayer-ruby</code>を使ってRubyでmplayerを叩く方針。</p>

<p>案の定バグに当りました。スペースの入ってるファイルをうまく処理できない。これは内部的にシェルを呼んでるのですが、そのときにシェルエスケープをしてないためです。<code>require 'shellwords'</code>しとけば<code>String#shellescape</code>メソッドが追加されるので<code>mplayer-ruby</code>の何箇所かにある<code>file</code>を<code>file.shellescape</code>すれば解決しました。</p>

<p>さらにDirty Hack。複数ファイルを<code>load_file</code>で渡してると詰まるようなので思いきって<code>MPlayer::Slave#initialize</code>を改造して引数に再生ファイルの配列(元々はファイル名の文字列)を渡すようにしました。</p>

<p>これで</p>

<script src="https://gist.github.com/KeenS/6308894.js?file=BGM"></script>


<p><noscript><pre><code>#!/usr/bin/env ruby -Ku</p>

<h1><em>*</em> coding:UTF-8 <em>*</em></h1>

<p>require &lsquo;mplayer-ruby&rsquo;
require &lsquo;libnotify&rsquo;</p>

<p>class MPlayer::Slave
  def now_playing</p>

<pre><code>summary = ""
summary += get(:meta_title).chomp
summary += " -- " + get(:meta_artist).chomp
body = "NowPlaying"
Libnotify.show(body: body, summary: summary)
</code></pre>

<p>  end
end</p>

<p>music = &ldquo;/your/path/to/music/directory/&rdquo;
playlist = File.read( music + &ldquo;BGM.list&rdquo;).split(&ldquo;\n&rdquo;).map{|f| music + f }.shuffle
player = MPlayer::Slave.new playlist
player.loop
Signal.trap(:INT) {player.quit;exit}
Signal.trap(:KILL) {player.quit;exit}
player.now_playing
while line = player.stdout.gets
  player.now_playing if line =~ /playback/
end
</code></pre></noscript></p>

<p>が動くようになりました。</p>

<p>しかし一つ問題がありまして、再生が1曲目で止まっちゃいます。<code>loop</code>を指定してるのにです。mplayerを直接叩いてみるに、mplayerのバグっぽい…複数ファイル指定したときは本来なら全曲1回は再生してくれるはずなのに再生しませんし<code>-loop 0</code>オプションガン無視。今回入れたのはUbuntuのapt-getで入るやつで、バージョン(?)は「MPlayer2 UNKNOWN © 2000-2012 MPlayer Team」だそうです。</p>

<p>Ubuntuはパッケージが古いことが往々にしてあるので冷静に自分でビルドしようとしても<code>fridibi</code>がないとかで怒られる。</p>

<p>どなたか解決方法御存じないですか???</p>

<h2>追記</h2>

<p><code>-loop -1</code>を渡すとループしてくれました。それドキュメントと逆…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのgistプラグインが動かなかったので修正した]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/26/patch-to-gist-plugin/"/>
    <updated>2013-09-26T22:57:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/26/patch-to-gist-plugin</id>
    <content type="html"><![CDATA[<p>どうもGithubのgistのURLが変わってる(?)っぽくてOctopressのgistプラグインが動いてくれなかったので修正しました。</p>

<!-- more -->


<p>Octopressの最新版でも修正されてなかったっぽいです。自分の使い方が悪かったのかなぁ…</p>

<p>原因は生のソースコードを取ってくるときに<code>"https://raw.github.com/gist/#{gist}/#{file}"</code>にアクセスするんですがそいつが404返すんですね。ブラウザからgistにいって”view raw”をクリックすると<code>"https://gist.github.com/#{gist_id}/#{gist}/raw/#{file}"</code>でした。gist_idってかGithubアカウントです。この辺、挙動が怪しくて、gist_idがなくてもリダイレクトしてくれたりしてくれなかったりします。APIによって違うようです。問題の<code>raw</code>APIはリダイレクトしてくれないので割と大きめにプラグインを書き換える必要がありました。</p>

<p><figure class="code"><div class="highlight"><table><tr>
<td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
</pre></td>
<td class="code"><pre><code class=""><span class="line">diff &mdash;cc plugins/gist_tag.rb
</span><span class="line">index 1620345,0000000..58acd2a
</span><span class="line">mode 100644,000000..100644
</span><span class="line">&mdash;&ndash; a/plugins/gist_tag.rb
</span><span class="line">+++ b/plugins/gist_tag.rb
</span><span class="line">@@@ -1,105 -1,0 +1,105 @@@
</span><span class="line"> +# A Liquid tag for Jekyll sites that allows embedding Gists and showing code for non-JavaScript enabled browsers and readers.
</span><span class="line"> +# by: Brandon Tilly
</span><span class="line"> +# Source URL: <a href="https://gist.github.com/1027674">https://gist.github.com/1027674</a>
</span><span class="line"> +# Post <a href="http://brandontilley.com/2011/01/31/gist-tag-for-jekyll.html">http://brandontilley.com/2011/01/31/gist-tag-for-jekyll.html</a>
</span><span class="line"> +#
</span><span class="line"> +# Example usage: //embeds a gist for this plugin
</span><span class="line"> +
</span><span class="line"> +require &lsquo;cgi&rsquo;
</span><span class="line"> +require &lsquo;digest/md5&rsquo;
</span><span class="line"> +require &lsquo;net/https&rsquo;
</span><span class="line"> +require &lsquo;uri&rsquo;
</span><span class="line"> +
</span><span class="line"> +module Jekyll
</span><span class="line"> + class GistTag &lt; Liquid::Tag
</span><span class="line"> + def initialize(tag_name, text, token)
</span><span class="line"> + super
</span><span class="line"> + @text = text
</span><span class="line"> + @cache_disabled = false
</span><span class="line"> + @cache_folder = File.expand_path &ldquo;../.gist-cache&rdquo;, File.dirname( <strong>FILE</strong> )
</span><span class="line"> + FileUtils.mkdir_p @cache_folder
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line"> + def render(context)
</span><span class="line">&ndash; if parts = @text.match(/([a-zA-Z\d]<em>) (.</em>)/)
</span><span class="line">&ndash; gist, file = parts[1].strip, parts[2].strip
</span><span class="line">&ndash; script_url = script_url_for gist, file
</span><span class="line">&ndash; code = get_cached_gist(gist, file) || get_gist_from_web(gist, file)
</span><span class="line">++ if parts = @text.match(/([a-zA-Z]<em>) ([a-zA-Z\d]</em>) (.*)/)
</span><span class="line">++ gist_id, gist, file = parts[1].strip, parts[2].strip, parts[3].strip
</span><span class="line">++ script_url = script_url_for gist_id, gist, file
</span><span class="line">++ code = get_cached_gist(gist_id, gist, file) || get_gist_from_web(gist_id, gist, file)
</span><span class="line"> + html_output_for script_url, code
</span><span class="line"> + else
</span><span class="line"> + &ldquo;&rdquo;
</span><span class="line"> + end
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line"> + def html_output_for(script_url, code)
</span><span class="line"> + code = CGI.escapeHTML code
</span><span class="line"> + &lt;&lt;-HTML
</span><span class="line"> +&lt;div&gt;&lt;script src=&lsquo;#{script_url}&rsquo;&gt;&lt;/script&gt;
</span><span class="line"> +&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;#{code}&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;
</span><span class="line"> + HTML
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line">&ndash; def script_url_for(gist_id, filename)
</span><span class="line">&ndash; url = &ldquo;<a href="https://gist.github.com/#">https://gist.github.com/#</a>{gist_id}.js&rdquo;
</span><span class="line">++ def script_url_for(gist_id, gist, filename)
</span><span class="line">++ url = &ldquo;<a href="https://gist.github.com/#">https://gist.github.com/#</a>{gist_id}/#{gist}.js&rdquo;
</span><span class="line"> + url = &ldquo;#{url}?file=#{filename}&rdquo; unless filename.nil? or filename.empty?
</span><span class="line"> + url
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line">&ndash; def get_gist_url_for(gist, file)
</span><span class="line">&ndash; &ldquo;<a href="https://raw.github.com/gist/#">https://raw.github.com/gist/#</a>{gist}/#{file}&rdquo;
</span><span class="line">++ def get_gist_url_for(gist_id, gist, file)
</span><span class="line">++ &ldquo;<a href="https://gist.github.com/#">https://gist.github.com/#</a>{gist_id}/#{gist}/raw/#{file}&rdquo;
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line">&ndash; def cache(gist, file, data)
</span><span class="line">&ndash; cache_file = get_cache_file_for gist, file
</span><span class="line">++ def cache(gist_id, gist, file, data)
</span><span class="line">++ cache_file = get_cache_file_for gist_id, gist, file
</span><span class="line"> + File.open(cache_file, &ldquo;w&rdquo;) do |io|
</span><span class="line"> + io.write data
</span><span class="line"> + end
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line">&ndash; def get_cached_gist(gist, file)
</span><span class="line">++ def get_cached_gist(gist_id, gist, file)
</span><span class="line"> + return nil if @cache_disabled
</span><span class="line">&ndash; cache_file = get_cache_file_for gist, file
</span><span class="line">++ cache_file = get_cache_file_for gist_id, gist, file
</span><span class="line"> + File.read cache_file if File.exist? cache_file
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line">&ndash; def get_cache_file_for(gist, file)
</span><span class="line">++ def get_cache_file_for(gist_id, gist, file)
</span><span class="line"> + bad_chars = /[^a-zA-Z0-9-_.]/
</span><span class="line"> + gist = gist.gsub bad_chars, &lsquo;&rsquo;
</span><span class="line"> + file = file.gsub bad_chars, &lsquo;&rsquo;
</span><span class="line">&ndash; md5 = Digest::MD5.hexdigest &ldquo;#{gist}&ndash;#{file}&rdquo;
</span><span class="line">&ndash; File.join @cache_folder, &ldquo;#{gist}&ndash;#{file}&ndash;#{md5}.cache&rdquo;
</span><span class="line">++ md5 = Digest::MD5.hexdigest &ldquo;#{gist_id}&ndash;#{gist}&ndash;#{file}&rdquo;
</span><span class="line">++ File.join @cache_folder, &ldquo;#{gist_id}&ndash;#{gist}&ndash;#{file}&ndash;#{md5}.cache&rdquo;
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line">&ndash; def get_gist_from_web(gist, file)
</span><span class="line">&ndash; gist_url = get_gist_url_for gist, file
</span><span class="line">++ def get_gist_from_web(gist_id, gist, file)
</span><span class="line">++ gist_url = get_gist_url_for gist_id, gist, file
</span><span class="line"> + raw_uri = URI.parse gist_url
</span><span class="line"> + proxy = ENV[&lsquo;http_proxy&rsquo;]
</span><span class="line"> + if proxy
</span><span class="line"> + proxy_uri = URI.parse(proxy)
</span><span class="line"> + https = Net::<a href="HTTP::Proxy">HTTP::Proxy</a>(proxy_uri.host, proxy_uri.port).new raw_uri.host, raw_uri.port
</span><span class="line"> + else
</span><span class="line"> + https = Net::HTTP.new raw_uri.host, raw_uri.port
</span><span class="line"> + end
</span><span class="line"> + https.use_ssl = true
</span><span class="line"> + https.verify_mode = OpenSSL::SSL::VERIFY_NONE
</span><span class="line"> + request = Net::<a href="HTTP::Get.new">HTTP::Get.new</a> raw_uri.request_uri
</span><span class="line"> + data = https.request request
</span><span class="line"> + if data.code.to_i != 200
</span><span class="line"> + raise RuntimeError, &ldquo;Gist replied with #{data.code} for #{gist_url}&rdquo;
</span><span class="line"> + end
</span><span class="line"> + data = data.body
</span><span class="line">&ndash; cache gist, file, data unless @cache_disabled
</span><span class="line">++ cache gist_id, gist, file, data unless @cache_disabled
</span><span class="line"> + data
</span><span class="line"> + end
</span><span class="line"> + end
</span><span class="line"> +
</span><span class="line"> + class GistTagNoCache &lt; GistTag
</span><span class="line"> + def initialize(tag_name, text, token)
</span><span class="line"> + super
</span><span class="line"> + @cache_disabled = true
</span><span class="line"> + end
</span><span class="line"> + end
</span><span class="line"> +end
</span><span class="line"> +
</span><span class="line"> +Liquid::Template.register_tag(&lsquo;gist&rsquo;, Jekyll::GistTag)
</span><span class="line"> +Liquid::Template.register_tag(&lsquo;gistnocache&rsquo;, Jekyll::GistTagNoCache)</span></code></pre></td>
</tr></table></div></figure></p>

<p>なんかOctopressのブランチが面倒だったり<code>magit.el</code>の使い方がよく分らなかったのでアレですが伝えたいことは伝わるdiffだと思います。</p>

<p>見ての通り<code>gist_id</code>というパラメーターを追加してリクエストURLをちょこっと書き換えただけです。この修正を加えたあとは</p>

<pre><code>{% gist KeenS 6688683 script.lisp %}
</code></pre>

<p>で使えます。</p>

<p>本当にこれでいいのかなあ…なんか違う気がするなぁ。表示もイマイチだし。けどこれしかないのだから仕方がないですね。正確な情報を持ってる方いらっしゃいましたらコメントお願いします。</p>

<h2>追記</h2>

<p><a href="http://rcmdnk.github.io/blog/2013/05/06/blog-octopress/">http://rcmdnk.github.io/blog/2013/05/06/blog-octopress/</a>にあるエントリを見て変更加えました。やり方は貼られてあるdiffを<code>*scratch*</code>バッファにコピー、<code>M-x ediff-patch-file</code>でパッチ適用しました。</p>

<p>しかしどうもパッチの元のバージョンが古いらしく、何度もエラー出しながら手でパッチファイルを修正しました。もうちょっとパッチに慣れないとな…</p>

<p>しかも苦労してパッチ適用したのに表示変わらないなーって思ってたらどうもCleanpressは<code>sass/partial</code>を読み込まないようなので無駄骨でした。<code>sass/parts/_syntax.sass</code>をひたすら様子見ながら修正しました。</p>

<p>diffは…いいや。希望があったら晒します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redmineのインストール]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/05/install-redmine/"/>
    <updated>2013-09-05T16:35:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/05/install-redmine</id>
    <content type="html"><![CDATA[<p>私はバイトではプロジェクト管理に <a href="http://backlog.jp">Backlog</a>のサービスを利用してますが、同様のOSSに <a href="http://redmine.jp">Redmine</a>なるものがあると聞いて動かしてみたときのメモ。</p>

<!-- more -->


<p>以下、公式の引用。</p>

<blockquote><p>Redmineはオープンソースのプロジェクト管理ソフトウェアです。</p>

<p>プロジェクトのタスク管理、進捗管理、情報共有が行えます。SubversionやGitなどのバージョン管理システムとの連携機能も備えており、ソフトウェア開発やwebサイト制作などのITプロジェクトで特に威力を発揮します。</p></blockquote>

<p>Redmineの管理団体(？)が <a href="http://hosting.redmine.jp/">MyRedmine</a>というホスティングサービスを提供してたりしますが、今回はこれをローカルで動かします。</p>

<p><a href="http://redmine.jp/guide/RedmineInstall/">公式ドキュメント</a>を参考に作業していきます。</p>

<p>まずはダウンロード。現在の最新版は2.3.2だそうです。</p>

<pre><code>$cd ~/Ruby
$svn checkout http://svn.redmine.org/redmine/branches/2.3-stable redmine
</code></pre>

<p>んで、グローバルの空間を汚したくないので新たにGemsetを作ります。本来ならbundler仕事なのですが、railsのバージョンとか仕組みの問題が面倒臭そうだったのでGemsetで管理。</p>

<pre><code>$rvm use --create 1.9.3@redmine
$cd redmine
$echo ruby-1.9.3-p448 &gt; .ruby-version
$echo redmine &gt; .ruby-gemset
</code></pre>

<p>これで~/Ruby/redmineにcdすると自動的にrvmが1.9.3@redmineに切り替えてくれます。<br/>
※注意<br/>
<code>.rvmrc</code>に<code>rvm use 1.9.3@redmine</code>と書いてたら怒られます。<code>.ruby-version</code>と<code>.ruby-gemset</code>がバージョン管理システムに依存しない新しい書き方だそうです。</p>

<p>データベースはデフォルトだとMySQLを使う設定になってますがこんなお試しにのためにMySQLを動かしたくないのでSQLiteに変更。</p>

<pre><code>$cp config/{database.yml.example, database.yml}
</code></pre>

<p>のあと、database.ymlのproductionの部分を以下のように変更。</p>

<p><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr>
<td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td>
<td class="code"><pre><code class="yaml"><span class="line"><span class="l-Scalar-Plain">production</span><span class="p-Indicator">:</span>
</span><span class="line"><span class="err"> </span><span class="l-Scalar-Plain">adapter</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sqlite3</span>
</span><span class="line"><span class="err"> </span><span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">db/redmine.sqlite3</span>
</span></code></pre></td>
</tr></table></div></figure></p>

<p>あとは<code>bundle install</code>。(bundlerはインストールされてる前提です)</p>

<pre><code>$bundle install --without development test
</code></pre>

<p>すると…あれ？RMagickでコケる…。公式ドキュメントには <code>bundle</code>の<code>--without</code>に<code>rmagick</code>を加えろと書いてますが画像扱えないのは悔しいので色々調べた結果、</p>

<pre><code>$sudo apt-get install libmagic-dev libmagickwand-dev
</code></pre>

<p>で依存関係を満せるようです。これでようやく<code>bundle install</code>が通ります。</p>

<p>ここまできたらあとはドキュメント通り。</p>

<pre><code>$rake generate_secret_token
$RAILS_ENV=production rake db:migrate
$RAILS_ENV=production rake redmine:load_default_data
$rails s
</code></pre>

<p>…あれ？<code>rails s</code>でコケる。<br/>
これは自分がrailsに慣れてなかったのが問題のようで、正しくは</p>

<pre><code>$rails s -e production
</code></pre>

<p>だそうです。</p>

<pre><code>$RAILS_ENV=production rails s
</code></pre>

<p>としても同じ。これで <a href="http://localhost:3000">localhost:3000</a>にアクセスするとRedmineが開きます。</p>

<p><img src="/images/redmine-home.png" title="redmine-home" alt="Redmineのホーム画面" /></p>

<p>因みにAdminのID、パスワードはadminだそうです。</p>

<p>データベースの設定のexample部分にjenkinsとかいう文字列があったけど連携できるのかなぁ。要調査。</p>

<hr />

<h3>補足</h3>

<p>デフォルトのWEBrickだと遅いのでGemfileに</p>

<p><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr>
<td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td>
<td class="code"><pre><code class="ruby"><span class="line"><span class="n">gem</span> <span class="s2">&ldquo;thin&rdquo;</span>
</span></code></pre></td>
</tr></table></div></figure></p>

<p>を加えて、<code>bundle install</code>し直すと自動的にThinを使ってくれるそうです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Tutorial]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/03/rails-tutorial/"/>
    <updated>2013-09-03T22:15:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/03/rails-tutorial</id>
    <content type="html"><![CDATA[<p>夜中にコーヒー飲むと眠れなくなりますね。昨晩もコーヒー飲んだら朝まで眠れず、寝たのが朝8時半、起きたのが16時でした。明日提出のレポート終ってないのに…</p>

<p>さて、かなり良いRuby on Railsのチュートリアルを見付けたので紹介します。<br/>
 <a href="http://railstutorial.jp">Ruby on Rails チュートリアル：実例を使ってRailsを学ぼう</a></p>

<!-- more -->


<p>これはただのrailsの紹介ではなくてgitだとかherokuだとかを使ってかなり実践的にアプリケーションを作ていくものです。1, 2章で軽くrailsを動かしてみたあと、3章以降でテスト駆動開発でアプリケーションを構築していきます。</p>

<p>このテスト駆動開発の環境がすばらしいのなんのって、最初動かしたとき思わずニヤリとしました。しかも何故か(何も設定してないのに)Emacsのモードバーの色がテストの結果に応じて変わるという。<br/>
マウス操作もキーストロークも無くコードの正しさを教えてくれるのは非常に快適でした。</p>

<p>文体も訳本にありがちな片言の日本語ではなく読み易いですし、Ruby自体の解説もあり、「Scaffoldを使えば簡単にできるんだぜ~」じゃなくてちゃんとMVCの関係とかを解説して身に付いた上で「今後はScaffoldでより手軽に作れるよ」なのでRailsに限らずWeb開発のチュートリアルとして秀逸でした。</p>

<p>私もまだ5章までしか進めてないのですが是非一度試してみて下さい</p>
]]></content>
  </entry>
  
</feed>
