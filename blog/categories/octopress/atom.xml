<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | κeenのHappy Hacκing Blog]]></title>
  <link href="http://KeenS.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://KeenS.github.io/"/>
  <updated>2014-01-27T16:10:29+09:00</updated>
  <id>http://KeenS.github.io/</id>
  <author>
    <name><![CDATA[κeen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopressのgistプラグインが動かなかったので修正した]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/26/patch-to-gist-plugin/"/>
    <updated>2013-09-26T22:57:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/26/patch-to-gist-plugin</id>
    <content type="html"><![CDATA[<p>どうもGithubのgistのURLが変わってる(?)っぽくてOctopressのgistプラグインが動いてくれなかったので修正しました。</p>

<!-- more -->


<p>Octopressの最新版でも修正されてなかったっぽいです。自分の使い方が悪かったのかなぁ…</p>

<p>原因は生のソースコードを取ってくるときに<code>"https://raw.github.com/gist/#{gist}/#{file}"</code>にアクセスするんですがそいつが404返すんですね。ブラウザからgistにいって"view raw"をクリックすると<code>"https://gist.github.com/#{gist_id}/#{gist}/raw/#{file}"</code>でした。gist_idってかGithubアカウントです。この辺、挙動が怪しくて、gist_idがなくてもリダイレクトしてくれたりしてくれなかったりします。APIによって違うようです。問題の<code>raw</code>APIはリダイレクトしてくれないので割と大きめにプラグインを書き換える必要がありました。
<code>
diff --cc plugins/gist_tag.rb
index 1620345,0000000..58acd2a
mode 100644,000000..100644
--- a/plugins/gist_tag.rb
+++ b/plugins/gist_tag.rb
@@@ -1,105 -1,0 +1,105 @@@
 +# A Liquid tag for Jekyll sites that allows embedding Gists and showing code for non-JavaScript enabled browsers and readers.
 +# by: Brandon Tilly
 +# Source URL: https://gist.github.com/1027674
 +# Post http://brandontilley.com/2011/01/31/gist-tag-for-jekyll.html
 +#
 +# Example usage:  //embeds a gist for this plugin
 +
 +require 'cgi'
 +require 'digest/md5'
 +require 'net/https'
 +require 'uri'
 +
 +module Jekyll
 +  class GistTag &lt; Liquid::Tag
 +    def initialize(tag_name, text, token)
 +      super
 +      @text           = text
 +      @cache_disabled = false
 +      @cache_folder   = File.expand_path "../.gist-cache", File.dirname(__FILE__)
 +      FileUtils.mkdir_p @cache_folder
 +    end
 +
 +    def render(context)
-       if parts = @text.match(/([a-zA-Z\d]*) (.*)/)
-         gist, file = parts[1].strip, parts[2].strip
-         script_url = script_url_for gist, file
-         code       = get_cached_gist(gist, file) || get_gist_from_web(gist, file)
++      if parts = @text.match(/([a-zA-Z]*) ([a-zA-Z\d]*) (.*)/)
++        gist_id, gist, file = parts[1].strip, parts[2].strip, parts[3].strip
++        script_url = script_url_for gist_id, gist, file
++        code       = get_cached_gist(gist_id, gist, file) || get_gist_from_web(gist_id, gist, file)
 +        html_output_for script_url, code
 +      else
 +        ""
 +      end
 +    end
 +
 +    def html_output_for(script_url, code)
 +      code = CGI.escapeHTML code
 +      &lt;&lt;-HTML
 +&lt;div&gt;&lt;script src='#{script_url}'&gt;&lt;/script&gt;
 +&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;#{code}&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;
 +      HTML
 +    end
 +
-     def script_url_for(gist_id, filename)
-       url = "https://gist.github.com/#{gist_id}.js"
++    def script_url_for(gist_id, gist, filename)
++      url = "https://gist.github.com/#{gist_id}/#{gist}.js"
 +      url = "#{url}?file=#{filename}" unless filename.nil? or filename.empty?
 +      url
 +    end
 +
-     def get_gist_url_for(gist, file)
-       "https://raw.github.com/gist/#{gist}/#{file}"
++    def get_gist_url_for(gist_id, gist, file)
++      "https://gist.github.com/#{gist_id}/#{gist}/raw/#{file}"
 +    end
 +
-     def cache(gist, file, data)
-       cache_file = get_cache_file_for gist, file
++    def cache(gist_id, gist, file, data)
++      cache_file = get_cache_file_for gist_id, gist, file
 +      File.open(cache_file, "w") do |io|
 +        io.write data
 +      end
 +    end
 +
-     def get_cached_gist(gist, file)
++    def get_cached_gist(gist_id, gist, file)
 +      return nil if @cache_disabled
-       cache_file = get_cache_file_for gist, file
++      cache_file = get_cache_file_for gist_id, gist, file
 +      File.read cache_file if File.exist? cache_file
 +    end
 +
-     def get_cache_file_for(gist, file)
++    def get_cache_file_for(gist_id, gist, file)
 +      bad_chars = /[^a-zA-Z0-9\-_.]/
 +      gist      = gist.gsub bad_chars, ''
 +      file      = file.gsub bad_chars, ''
-       md5       = Digest::MD5.hexdigest "#{gist}-#{file}"
-       File.join @cache_folder, "#{gist}-#{file}-#{md5}.cache"
++      md5       = Digest::MD5.hexdigest "#{gist_id}-#{gist}-#{file}"
++      File.join @cache_folder, "#{gist_id}-#{gist}-#{file}-#{md5}.cache"
 +    end
 +
-     def get_gist_from_web(gist, file)
-       gist_url          = get_gist_url_for gist, file
++    def get_gist_from_web(gist_id, gist, file)
++      gist_url          = get_gist_url_for gist_id, gist, file
 +      raw_uri           = URI.parse gist_url
 +      proxy             = ENV['http_proxy']
 +      if proxy
 +        proxy_uri       = URI.parse(proxy)
 +        https           = Net::HTTP::Proxy(proxy_uri.host, proxy_uri.port).new raw_uri.host, raw_uri.port
 +      else
 +        https           = Net::HTTP.new raw_uri.host, raw_uri.port
 +      end
 +      https.use_ssl     = true
 +      https.verify_mode = OpenSSL::SSL::VERIFY_NONE
 +      request           = Net::HTTP::Get.new raw_uri.request_uri
 +      data              = https.request request
 +      if data.code.to_i != 200
 +        raise RuntimeError, "Gist replied with #{data.code} for #{gist_url}"
 +      end
 +      data              = data.body
-       cache gist, file, data unless @cache_disabled
++      cache gist_id, gist, file, data unless @cache_disabled
 +      data
 +    end
 +  end
 +
 +  class GistTagNoCache &lt; GistTag
 +    def initialize(tag_name, text, token)
 +      super
 +      @cache_disabled = true
 +    end
 +  end
 +end
 +
 +Liquid::Template.register_tag('gist', Jekyll::GistTag)
 +Liquid::Template.register_tag('gistnocache', Jekyll::GistTagNoCache)
</code>
なんかOctopressのブランチが面倒だったり<code>magit.el</code>の使い方がよく分らなかったのでアレですが伝えたいことは伝わるdiffだと思います。</p>

<p>見ての通り<code>gist_id</code>というパラメーターを追加してリクエストURLをちょこっと書き換えただけです。この修正を加えたあとは</p>

<pre><code>{%  gist KeenS 6688683 script.lisp %}
</code></pre>

<p>で使えます。</p>

<p>本当にこれでいいのかなあ…なんか違う気がするなぁ。表示もイマイチだし。けどこれしかないのだから仕方がないですね。正確な情報を持ってる方いらっしゃいましたらコメントお願いします。</p>

<h2>追記</h2>

<p><a href="http://rcmdnk.github.io/blog/2013/05/06/blog-octopress/">http://rcmdnk.github.io/blog/2013/05/06/blog-octopress/</a>にあるエントリを見て変更加えました。やり方は貼られてあるdiffを<code>*scratch*</code>バッファにコピー、<code>M-x ediff-patch-file</code>でパッチ適用しました。</p>

<p>しかしどうもパッチの元のバージョンが古いらしく、何度もエラー出しながら手でパッチファイルを修正しました。もうちょっとパッチに慣れないとな…</p>

<p>しかも苦労してパッチ適用したのに表示変わらないなーって思ってたらどうもCleanpressは<code>sass/partial</code>を読み込まないようなので無駄骨でした。<code>sass/parts/_syntax.sass</code>をひたすら様子見ながら修正しました。</p>

<p>diffは…いいや。希望があったら晒します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octomacs.elを修正しました]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/16/octomacs-el/"/>
    <updated>2013-09-16T21:24:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/16/octomacs-el</id>
    <content type="html"><![CDATA[<p>EmacsからOctopressに投稿できるOctomacs.elが最新版のrvm.elに対応してないようだったので修正してみました。</p>

<!-- more -->


<p>原因はOctomacs.elがrvm.elの内部で使われている関数を使っていたのですが、その関数が最新版で削除されていたからだったみたいです。</p>

<p>結論として、
```
*** /home/kim/.emacs.d/lisp/octomacs/octomacs.el    2013-09-16 22:29:14.498296762 +0900
&mdash;&ndash; /home/kim/.emacs.d/elpa/octomacs-20121026.1649/octomacs.el  2013-08-31 23:54:13.044373498 +0900</p>

<hr />

<p><strong>* 4,10 </strong>**
  ;;
  ;; Author: Jacob Helwig <a href="&#109;&#97;&#x69;&#108;&#116;&#111;&#58;&#x6a;&#97;&#99;&#111;&#x62;&#64;&#116;&#101;&#99;&#x68;&#110;&#x6f;&#115;&#x6f;&#x72;&#99;&#101;&#x72;&#x79;&#x2e;&#110;&#x65;&#x74;">&#106;&#x61;&#x63;&#x6f;&#x62;&#x40;&#x74;&#101;&#x63;&#x68;&#110;&#x6f;&#x73;&#111;&#x72;&#x63;&#101;&#114;&#x79;&#x2e;&#110;&#101;&#x74;</a>
  ;; Homepage: <a href="http://technosorcery.net">http://technosorcery.net</a>
! ;; Version: 0.0.1
  ;; URL: <a href="https://github.com/jhelwig/octomacs">https://github.com/jhelwig/octomacs</a>
  ;;
  ;;; License:
&mdash;&ndash; 4,11 &mdash;&mdash;
  ;;
  ;; Author: Jacob Helwig <a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#x6a;&#x61;&#x63;&#111;&#98;&#64;&#116;&#x65;&#99;&#x68;&#x6e;&#111;&#115;&#111;&#114;&#x63;&#x65;&#114;&#x79;&#46;&#110;&#x65;&#116;">&#x6a;&#x61;&#99;&#x6f;&#x62;&#x40;&#116;&#x65;&#99;&#x68;&#110;&#x6f;&#x73;&#111;&#x72;&#x63;&#x65;&#114;&#121;&#x2e;&#110;&#101;&#116;</a>
  ;; Homepage: <a href="http://technosorcery.net">http://technosorcery.net</a>
! ;; Version: 20121026.1649
! ;; X-Original-Version: 0.0.1
  ;; URL: <a href="https://github.com/jhelwig/octomacs">https://github.com/jhelwig/octomacs</a>
  ;;
  ;;; License:</p>

<hr />

<p><strong>* 133,146 </strong>**
  (defun octomacs-format-rake-task-with-args (task &amp;optional arguments)</p>

<pre><code>"Build a shell suitable string of the rake TASK name with the specified ARGUMENTS."
(let ((arguments-string (if arguments
</code></pre>

<p>!                               (format &ldquo;[%s]&rdquo; (if (listp arguments) (mapconcat &lsquo;octomacs-shell-escape-string arguments &ldquo;, &rdquo;) arguments))</p>

<pre><code>                          "")))
  (format "'%s%s'" task arguments-string)))
</code></pre>

<p>  (defun octomacs-rake-with-rvm (directory task &amp;optional arguments)</p>

<pre><code>"Run rake task TASK with specified ARGUMENTS in DIRECTORY using rvm"
(let* ((default-directory (file-name-as-directory (expand-file-name directory)))
</code></pre>

<p>!          (rvmrc-info (or (rvm&mdash;load-info-rvmrc) (rvm&mdash;load-info-ruby-version) (rvm&mdash;load-info-gemfile)))</p>

<pre><code>       (rvm-command (if rvmrc-info
                        (concat "rvm " (mapconcat 'identity rvmrc-info "@") " do ")
                      "")))
</code></pre>

<p>&mdash;&ndash; 134,148 &mdash;&mdash;
  (defun octomacs-format-rake-task-with-args (task &amp;optional arguments)</p>

<pre><code>"Build a shell suitable string of the rake TASK name with the specified ARGUMENTS."
(let ((arguments-string (if arguments
</code></pre>

<p>!                               (format &ldquo;[%s]&rdquo; (mapconcat &lsquo;octomacs-shell-escape-string arguments &ldquo;, &rdquo;))</p>

<pre><code>                          "")))
  (format "'%s%s'" task arguments-string)))
</code></pre>

<p>  (defun octomacs-rake-with-rvm (directory task &amp;optional arguments)</p>

<pre><code>"Run rake task TASK with specified ARGUMENTS in DIRECTORY using rvm"
(let* ((default-directory (file-name-as-directory (expand-file-name directory)))
</code></pre>

<p>!          (rvmrc-path (rvm&mdash;rvmrc-locate directory))
!          (rvmrc-info (if rvmrc-path (rvm&mdash;rvmrc-read-version rvmrc-path) nil))</p>

<pre><code>       (rvm-command (if rvmrc-info
                        (concat "rvm " (mapconcat 'identity rvmrc-info "@") " do ")
                      "")))
</code></pre>

<p>```</p>

<p>こんな感じです。これでちゃんと<code>.rvmrc</code>やら<code>.ruby-version</code>やら<code>.ruby-gemset</code>やらを反映してくれます。<a href="https://github.com/jhelwig/octomacs/pull/2">pull-req投げてみました</a>。初pull-reqです。英語心配です。</p>

<p>俺、pull-reqとりこまれたら<code>rake gen_deploy</code>にも挑戦するんだ…</p>

<p>あ、因みにこの投稿は<code>init.el</code>に</p>

<pre><code>(setq octomacs-workdir-alist '(("default" . "~/Ruby/octopress")))
</code></pre>

<p>して<code>octomacs-new-post</code>から投稿してます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[COOKPADのアイコン]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/07/cookpad/"/>
    <updated>2013-09-07T19:09:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/07/cookpad</id>
    <content type="html"><![CDATA[<p>クックパッドにレシピ初投稿の記念として左上のソーシャルアイコンにクックパッドを追加しました。</p>

<!-- more -->


<p>もともとソーシャルアイコン自体今使ってるOctopressのテーマ、CleanPressにはないのですが、別のテーマからもらってきました。</p>

<p>加えた変更は<br/>
source/_includes/header.htmlに</p>

<pre><code>&lt;nav id="sub-nav"&gt;{%  include custom/social.html %}&lt;/nav&gt;&lt;br&gt;
</code></pre>

<p>を、<br/>
source/_includes/custom/social.htmlのdivの中に</p>

<pre><code>{%  if site.cookpad_user %}
&lt;a class="cookpad" href="http://cookpad.com/kitchen/3303629" title="COOKPAD"&gt;COOKPAD&lt;/a&gt;
{%  endif %}
</code></pre>

<p>を、<br/>
sass/parts/_header.scssの&amp;.githubとかが並んでるところに</p>

<pre><code>&amp;.cookpad{
    background: image-url('social/cookpad.png') center no-repeat #FF9933;
    border: 1px solid #FF9933;
        &amp;:hover{
            border: 1px solid darken(#FF9933, 10%);
        }
}
</code></pre>

<p>を、<br/>
_config.ymlに</p>

<pre><code>#COOKPAD
cookpad_user: your_ID
</code></pre>

<p>を加え、<br/>
source/images/social/に
<a href="/images/social/cookpad.png">この画像</a>をつっこみました。16x16なのでめっちゃちっちゃいです。</p>

<p>画像はクックパッドの公式のバナーのピクセル数を数えながら作ったのですが、アンチエイリアスのかけかたとか分らなかったので質はかなり低いです。
かといって公式のやつ勝手に改造はマズいでしょうし。</p>

<p>16x16で白い部分のみ、背景透過でだれか作って下さい←<br/>
因みに私の作った画像は自由にご使用下さい。</p>
]]></content>
  </entry>
  
</feed>
