<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ISUCON | κeenのHappy Hacκing Blog]]></title>
  <link href="http://KeenS.github.io/blog/categories/isucon/atom.xml" rel="self"/>
  <link href="http://KeenS.github.io/"/>
  <updated>2013-10-09T16:29:59+09:00</updated>
  <id>http://KeenS.github.io/</id>
  <author>
    <name><![CDATA[κeen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ISUCON#3予選に参加しました]]></title>
    <link href="http://KeenS.github.io/blog/2013/10/09/isucon-qualifying-event/"/>
    <updated>2013-10-09T15:49:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/10/09/isucon-qualifying-event</id>
    <content type="html"><![CDATA[<p><a href="http://isucon.net/">ISUCON</a>#3の予選に参加してきた話です。</p>

<!-- more -->


<p>ISUCON(Iikanjini SpeedUp CONtest)とは椅子を投げないなどの一部のルールを除き、基本なんでもアリのWebアプリケーションチューニングコンテストです。</p>

<p>なんで私がこんなのに参加するかというと、サークルのOBさんから告知があり、8月に学生向けのISUCON夏期講習会に参加したからです。第３回となる今回は学生枠を作るとのことで事前に学生のレベルを上げておこうという方針だそうです。</p>

<p>その講習会でコテンパンにやられてめげつつも、もう一回チャレンジしようということで夏期講習会で知りあったasamiさんとその友達のyokoteさんでチームを組んで参戦しました。</p>

<p>ちなみにこのチーム、予選3日前にSkype会議で結成したもので、予選当日も各自自宅にいてSkypeで連絡を取ってたので私はyokoteさんとはまだ会ったことありません←</p>

<h2>準備</h2>

<p>事前の話しあいではasamiさんがAWSの準備からgit(bitbucket)、ssh鍵の設定までやってくれることになりました。私も本来ならISUCON#2で練習をしておくべきだったのですが、サークルとかを言い訳に、ISUCONの記事に目を通すだけに終りました。</p>

<h2>当日</h2>

<p>10時に開始しました。10時40分に起きました←</p>

<p>私が起きた頃にはasamiさんが色々設定を済ませていたので問題のアプリケーションを<code>git clone</code>して公開鍵をSkypeにペタっと貼って参戦。アプリを読むにMarkdownでメモを投稿できるもの。</p>

<p>フムフムってなってたらsslのバージョン問題でログインできてなかったyokoteさんも参戦し、asamiさんが<code>my.cnf</code>をいじってスコアが</p>

<p>900→2500</p>

<p>となりました。スゲー。あ、言語はasamiさんとyokoteさんが書けるperlを選択。私は1ミリも読めませんがサーバーをいじる気だったので気にしませんでした。</p>

<p>で、私がフロントサーバーをapacheからnginxに移行し、staticファイルをnginxから出すようにして、さらにキャッシュするようにし、ログを消したら</p>

<p>2500→2800</p>

<p>となりました。後で考えるとこのログを消したのまずかったですね。asamiさんがなんかpythonのツールを使ってトラフィック監視してたのでいっかなーって思ってたんですが。</p>

<p>その間asamiさんがslow queryのログを吐かせてボトルネックを見付けようとしますが、どれも平均的に重い。ソートに使われてる<code>created_at</code>にyokoteさんがインデックスを貼ってくれたりしましたが大した改善はみられず。後にこのインデックスはベンチマークが初期化するときに消されてるのではということが発覚しました。</p>

<p>あとは私がworker_connectionをいじったりasamiさんがmemcachedを使ってクエリの数を減らしたりyokoteさんがストレージエンジンをarchiveに変えたり色々しましたが努力虚しくスコアは改善しませんでした。</p>

<p>外部で<code>markdown</code>コマンドを呼んでるところを(それがperl製のスクリプトだったので)アプリに埋め込んでしまえばちょっとは速くなるかなと思いましたが私はperlをいじれませんし大差ないだろうからいっかと思って放置してたら案外それでスコア伸びたそうです。nginxのログを見てれば気づいたことだったのに…</p>

<p>ということで大したこともできず予選敗退です。因みに1位とは10倍くらいの差がありました。</p>

<h2>振り返って</h2>

<p>後で他の方のブログとかを見るとそんな手があったのかとかそこに罠があったのかとか全然気づかなかったことがたくさんありました。とりあえず勉強しなきゃって思ったのは
 + redis
 + プロファイラ
 + デプロイツール
ですね。asamiさんがデプロイツールを用意してくれてたのですが私には使いこなせず、折角git管理してたのにその利点を生かせませんでした。(私は手動デプロイしてました)</p>

<p>あとはボトルネックから攻める、redisで書き換えるといったこをとほとんどの上位チームがやってたのでそこは勉強したいです。</p>

<p>来年も開催されるなら是非参加したいですね。</p>
]]></content>
  </entry>
  
</feed>
