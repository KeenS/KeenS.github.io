<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | κeenのHappy Hacκing Blog]]></title>
  <link href="http://KeenS.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://KeenS.github.io/"/>
  <updated>2013-09-26T22:20:58+09:00</updated>
  <id>http://KeenS.github.io/</id>
  <author>
    <name><![CDATA[κeen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gitあれこれ]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/18/some-git-matters/"/>
    <updated>2013-09-18T15:13:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/18/some-git-matters</id>
    <content type="html"><![CDATA[<p>githubで共同作業してたらいろいろ困ったことがあったのでそのときのメモ。はじめてやって困ったことなので経験ある人には常識なのかもしれません。</p>

<!-- more -->


<h2>マスターリポジトリに追従する</h2>

<p>マスターをフォークして自分のレポジトリで作業、終ったらマスターにpull-reqという流れで作業してました。するとマスターが変更されたときに自分のリポジトリに反映させる必要があります。そのときは<a href="http://qiita.com/xtetsuji/items/555a1ef19ed21ee42873">http://qiita.com/xtetsuji/items/555a1ef19ed21ee42873</a>を参考に、</p>

<pre><code>$ git remote add upstream git@github.com:g000001/google-common-lisp-style-guide-ja.git
$ git fetch upstream
$ git merge upstream/master
</code></pre>

<p>でできました。</p>

<h2>Pull-Reqを正しく送る</h2>

<p>まず、masterでpull-req送るととりこまれるまで自分のマスターへのコミットが反映され続けるんですね。それで一回失敗。</p>

<p>じゃあ、ということでブランチを切ることに。するとまた問題が。
まあ、自分がアホっていったらアホなんですけど</p>

<pre><code>     _A_    _B_    _C_
*_/___\A'/___\B'/___\C'_HEAD
</code></pre>

<p>みたいなブランチの作り方してしまいました。<code>A</code>,<code>B</code>,<code>C</code>それぞれでpull-req送ったんですけど当然</p>

<pre><code>A : A
B : B-A'
C : C-B'-A'
</code></pre>

<p>みたいなヒストリのまま送られるわけです。<code>A</code>,<code>B</code>,<code>C</code>は同じファイルの違う箇所への変更なのでヒストリを</p>

<pre><code>       _C_
      /_B_
     /_A_ 
*_/______HEAD
</code></pre>

<p>のようにしたいわけです。<code>magit.el</code>さんにお助け願おうかと思いましたが、そもそも出来るか分らないのでTwitterで投げてみたところ、@mod_poppo氏に助けていただきました。<code>git reset</code>と<code>git cherry-pick</code>でできます。</p>

<p><code>A</code>のブランチは問題ないので<code>B</code>でやると、まず私は<code>magit.el</code>で必要な<code>B</code>のコミットを調べておいて</p>

<pre><code>$ git reset --hard *
</code></pre>

<p>で<code>*</code>に<code>HEAD</code>を戻して<code>A</code>, <code>B</code>で加えた変更を全て破棄。</p>

<pre><code>$ git cherry-pick B-commits
</code></pre>

<p>で<code>B</code>での変更のみ適用</p>

<pre><code>$ git push -f origin branch
</code></pre>

<p>で自分のリポジトリに反映(=pull-reqにも反映)<br/>
としました。<code>*</code>と<code>B-commits</code>はそれぞれリビジョンIDを調べて下さいね。</p>

<p>私の説明じゃ分りづらいと思うので
<a href="http://d.hatena.ne.jp/murank/20110327/1301224770">http://d.hatena.ne.jp/murank/20110327/1301224770</a>にあるすばらしい図を参考にして下さい。</p>
]]></content>
  </entry>
  
</feed>
