<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/post/</link>
    <description>Recent content in Posts on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 30 Dec 2019 20:28:34 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2019年振り返り</title>
      <link>//KeenS.github.io/blog/2019/12/30/2019nenfurikaeri/</link>
      <pubDate>Mon, 30 Dec 2019 20:28:34 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/30/2019nenfurikaeri/</guid>
      <description>&lt;p&gt;κeenです。2019年を振り返る。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自作lintルールとcargo fixでRustのコードをリファクタする</title>
      <link>//KeenS.github.io/blog/2019/12/23/jisakulintru_rutocargo_fixderustnoko_doworifakutasuru/</link>
      <pubDate>Mon, 23 Dec 2019 19:56:13 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/23/jisakulintru_rutocargo_fixderustnoko_doworifakutasuru/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust2&#34;&gt;Rustその2 Advent Calendar 2019 - Qiita&lt;/a&gt; 25日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。私は既に冬休みに突入してます。Happy Holiday！
「Rustで簡単なコードの書き換えを自動化したいよなー」と思っていたら &lt;code&gt;cargo fix&lt;/code&gt; でできるよという啓示を貰ったのでやってみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>リソースを管理する型</title>
      <link>//KeenS.github.io/blog/2019/12/21/riso_suwokanrisurukata/</link>
      <pubDate>Sat, 21 Dec 2019 22:31:35 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/21/riso_suwokanrisurukata/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/type&#34;&gt;型 Advent Calendar 2019 - Qiita&lt;/a&gt; 22日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。Session Typeの話をするつもりでしたが気が変わったのでリソースを管理する型の話をします。
リソースといっても所有権の話ではないです。
DBにWriteできるだとかS3からGetできるだとかです。リソースというよりはアクセス権限の方が正確かもしれません。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SMLで継続を使ってprintf/scanf</title>
      <link>//KeenS.github.io/blog/2019/12/21/smldekeizokuwotsukatteprintf_scanf/</link>
      <pubDate>Sat, 21 Dec 2019 01:38:06 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/21/smldekeizokuwotsukatteprintf_scanf/</guid>
      <description>&lt;p&gt;κeenです。Advent Calendarが賑う時期ですが特に関係なくSMLの話します。今年MLアドベントカレンダーやってないんですね。O.Danvyのprintfとその逆のscanfについて。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dependency Analysis入門</title>
      <link>//KeenS.github.io/blog/2019/12/15/dependency_analysisnyuumon/</link>
      <pubDate>Sun, 15 Dec 2019 00:34:30 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/15/dependency_analysisnyuumon/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/lang_dev&#34;&gt;言語実装 Advent Calendar 2019 - Qiita&lt;/a&gt; 16日目の記事です。1日ばかりフライングですが先に記事が完成してしまったので投稿します。&lt;/p&gt;

&lt;p&gt;κeenです。最近最適化コンパイラの本の読書会を&lt;a href=&#34;https://compiler-dev.connpass.com/&#34;&gt;やっている&lt;/a&gt;のですが、そこで学んだことの一部をアウトプットします。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>手続き型脳で型推論を実装してみた</title>
      <link>//KeenS.github.io/blog/2019/12/08/tetsuzukigatanoudekatasuironwojissoushitemita/</link>
      <pubDate>Sun, 08 Dec 2019 16:58:42 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/08/tetsuzukigatanoudekatasuironwojissoushitemita/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/type&#34;&gt;型 Advent Calendar 2019 - Qiita&lt;/a&gt; 2日目に遡って投稿しているエントリです。
担当に遅刻した訳ではなくて空いてたので前から詰めて投稿しただけです。&lt;/p&gt;

&lt;p&gt;κeenです。世の中に型推論アルゴリズムは色々知られていると思いますが、それを一切無視して型推論を実装してみたので報告します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustでCPS変換が簡単になったよという話</title>
      <link>//KeenS.github.io/blog/2019/12/07/rustdecpshenkangakantanninattayotoiuhanashi/</link>
      <pubDate>Sat, 07 Dec 2019 17:59:51 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/07/rustdecpshenkangakantanninattayotoiuhanashi/</guid>
      <description>&lt;p&gt;κeenです。このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust&#34;&gt;Rust Advent Calendar 2019 - Qiita&lt;/a&gt; 8日目の記事です。
昔書いたRustのコードをもけもけ漁ってたら、しばらく前にRustでCPS変換しようとしてた下書きをたまたま発見しました。&lt;/p&gt;

&lt;p&gt;当時はコンパイラの制約で簡単には書けなかったのですが今見ると簡単に書けるようになってたのでRustも進歩してるね、という確認をしたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dieselでselectするカラムを1箇所にまとめる</title>
      <link>//KeenS.github.io/blog/2019/12/07/dieseldeselectsurukaramuwo1tsunimatomeru/</link>
      <pubDate>Sat, 07 Dec 2019 01:59:08 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/07/dieseldeselectsurukaramuwo1tsunimatomeru/</guid>
      <description>&lt;p&gt;κeenです。このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust3&#34;&gt;Rustその3 Advent Calendar 2019 - Qiita&lt;/a&gt;の7日目の記事です。空いてたので飛び入り参加しました。&lt;/p&gt;

&lt;p&gt;軽い小ネタです。Dieselで &lt;code&gt;select&lt;/code&gt; する時にいちいちカラム名書くの面倒だよねって話です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>itertoolsの紹介</title>
      <link>//KeenS.github.io/blog/2019/12/06/itertoolsnoshoukai/</link>
      <pubDate>Fri, 06 Dec 2019 02:36:37 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/06/itertoolsnoshoukai/</guid>
      <description>&lt;p&gt;κeenです。このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust&#34;&gt;Rust Advent Calendar 2019 - Qiita&lt;/a&gt; 6日目のエントリです。
空いてたので飛び入りました。
飛び入りなので軽い小ネタ。便利クレート itertoolsの紹介です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustのturbofishを理解する</title>
      <link>//KeenS.github.io/blog/2019/12/03/rustnoturbofishworikaisuru/</link>
      <pubDate>Tue, 03 Dec 2019 00:12:31 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/12/03/rustnoturbofishworikaisuru/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2019/rust3&#34;&gt;Rustその3 Advent Calendar 2019&lt;/a&gt;3日目に飛び入り参加しているエントリです。
Rustの型パラメータ指定の構文、通称ターボフィッシュ(turbofish)について。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rust 2020</title>
      <link>//KeenS.github.io/blog/2019/11/30/rust_2020/</link>
      <pubDate>Sat, 30 Nov 2019 21:43:14 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/11/30/rust_2020/</guid>
      <description>&lt;p&gt;This is κeen. Here is my thoughts on Rust 2020.
Though I&amp;rsquo;m a Japanese speaker, and I don&amp;rsquo;t think the Rust Developers accept only English-written blog posts, I write this post for non-Japanese speakers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>代数的データ型とパターンマッチの補遺: 赤黒木</title>
      <link>//KeenS.github.io/blog/2019/11/02/daisuutekide_takatatopata_nmatchinohoi__akakuroki/</link>
      <pubDate>Sat, 02 Nov 2019 23:36:25 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/11/02/daisuutekide_takatatopata_nmatchinohoi__akakuroki/</guid>
      <description>&lt;p&gt;κeenです。
n月刊ラムダノートに書いた「代数的データ型とパターンマッチの基礎」のところで「パターンマッチがあるとこんなに便利になるよ」というのと紹介し忘れていたので勝手に補遺します。
まあ、紙面の都合もあって覚えていたとしても入りませんでしたね。
代数的データ型とパターンマッチの題材としては定番の赤黒木を紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n月刊ラムダノートにパターンマッチについて寄稿しました</title>
      <link>//KeenS.github.io/blog/2019/11/02/ngekkanramudano_tonipata_nmatchinitsuitekikoushimashita/</link>
      <pubDate>Sat, 02 Nov 2019 16:10:02 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/11/02/ngekkanramudano_tonipata_nmatchinitsuitekikoushimashita/</guid>
      <description>&lt;p&gt;κeenです。
&lt;a href=&#34;https://www.lambdanote.com/collections/n/products/nmonthly-vol-1-no-3-2019&#34;&gt;n月刊ラムダノート Vol.1, No.3(2019)&lt;/a&gt;に代数的データ型とパターンマッチの基礎の章を寄稿しました。
どんな内容か、どうやって執筆までに至ったのかを話そうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで構造体に配列のようなインデックスアクセス</title>
      <link>//KeenS.github.io/blog/2019/10/31/rustdekouzoutainihairetsunoyounaindekkusuakusesu/</link>
      <pubDate>Thu, 31 Oct 2019 02:52:22 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/31/rustdekouzoutainihairetsunoyounaindekkusuakusesu/</guid>
      <description>&lt;p&gt;κeenです。ネタ記事です。ふと、構造体に配列のようなアクセスができる方法を思い付いたので共有します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grub rescueで&#39;grub_file_filters&#39; not foundが出るときの対処方</title>
      <link>//KeenS.github.io/blog/2019/10/21/grub_rescuede_grub_file_filters__not_foundgaderutokinotaishohou/</link>
      <pubDate>Mon, 21 Oct 2019 18:14:12 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/21/grub_rescuede_grub_file_filters__not_foundgaderutokinotaishohou/</guid>
      <description>&lt;p&gt;κeenです。&lt;a href=&#34;https://keens.github.io/blog/2018/05/12/ubuntuderootfswobtrfsnoraid1insuto_ru/&#34;&gt;昔変な構成でRAID1を組んだ&lt;/a&gt;のですが、その状態でUbuntuのアップグレードをしたらgrubが壊れたらしくどうにもならなくなったのでそれを復旧したときのメモです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>パッチを当ててuim-skkをUTF-8化する</title>
      <link>//KeenS.github.io/blog/2019/10/20/patchiwoateteuim_skkwoutf_8kasuru/</link>
      <pubDate>Sun, 20 Oct 2019 00:21:47 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/20/patchiwoateteuim_skkwoutf_8kasuru/</guid>
      <description>&lt;p&gt;κeenです⸜( ¯⌓¯ )⸝。&lt;/p&gt;

&lt;p&gt;ずっとuim-skkを使っていての困り事がユニコードの扱いでした。
uimの内部コーディングはEUC-JPなんですが、「⸜( ¯⌓¯ )⸝」に含まれる「⌓」がEUJ-JP外なので入力できないのです。そこでuim-skk内部や辞書をUTF-8化して入力できるようにしたお話です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu 19.10でzfs root試してみた</title>
      <link>//KeenS.github.io/blog/2019/10/19/ubuntu_19_10dezfs_roottameshitemita/</link>
      <pubDate>Sat, 19 Oct 2019 12:17:24 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/19/ubuntu_19_10dezfs_roottameshitemita/</guid>
      <description>&lt;p&gt;κeenです。Ubuntu 19.10出ましたね。Ubuntu 19.10からZFSをroot fsにしたインストールがサポートされるようになったので試しました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで型レベル迷路</title>
      <link>//KeenS.github.io/blog/2019/10/06/rustdekatareberumeiro/</link>
      <pubDate>Sun, 06 Oct 2019 21:55:42 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/06/rustdekatareberumeiro/</guid>
      <description>&lt;p&gt;κeenです。型レベル迷路作ったよ！コンパイルが通ったらゴール！！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで「文字が特定の文字集合に含まれるか」を判定するのはどれが速いか</title>
      <link>//KeenS.github.io/blog/2019/10/06/rustde_mojigatokuteinomojishuugounifukumareruka_wohanteisurunohadoregahayaika/</link>
      <pubDate>Sun, 06 Oct 2019 19:00:53 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/06/rustde_mojigatokuteinomojishuugounifukumareruka_wohanteisurunohadoregahayaika/</guid>
      <description>&lt;p&gt;κeenです。ブログタイトルが長い。
普段、どれがいいとか特に気にせず書いている「文字が特定の文字集合に含まれるか」の判定をするのはどの方法が速いかが気になったのでベンチマークを取ってみました。&lt;/p&gt;

&lt;p&gt;想定しているのは何かのパーサを書いていて、例えば識別子に使える文字が &lt;code&gt;[a-zA-Z0-9_!?=&amp;lt;&amp;gt;]&lt;/code&gt; だったときにそれを判定する方法です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustのErrorとFailureのベンチマーク見たことある？</title>
      <link>//KeenS.github.io/blog/2019/07/20/rustnoerrortofailurenobenchima_kumitakotoaru_/</link>
      <pubDate>Sat, 20 Jul 2019 18:15:56 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/07/20/rustnoerrortofailurenobenchima_kumitakotoaru_/</guid>
      <description>&lt;p&gt;κeenです。最近ちょくちょく標準ライブラリの &lt;code&gt;Error&lt;/code&gt; とfailureライブラリの &lt;code&gt;Fail&lt;/code&gt; が比べられる（というより &lt;code&gt;Fail&lt;/code&gt; を推奨する）のが増えてきたようです。
個人的にちょっと気になってる点があって、みんなそれを抜きに議論してるようなので少しお話します。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
