<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/</link>
    <description>Recent content on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 21 Dec 2019 22:31:35 +0900</lastBuildDate>
    
        <atom:link href="//KeenS.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>安全なシステムプログラミング言語Rustへの招待</title>
      <link>//KeenS.github.io/slide/anzennashisutemupuroguramingugengorusthenoshoutai/</link>
      <pubDate>Mon, 18 Nov 2019 15:28:52 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/anzennashisutemupuroguramingugengorusthenoshoutai/</guid>
      <description># 安全なシステムプログラミング言語Rustへの招待 ---------------------- [IIJ Labセミナー](https://iijlab-seminars.connpass.c</description>
    </item>
    
    <item>
      <title>代数的データ型とパターンマッチの補遺: 赤黒木</title>
      <link>//KeenS.github.io/blog/2019/11/02/daisuutekide_takatatopata_nmatchinohoi__akakuroki/</link>
      <pubDate>Sat, 02 Nov 2019 23:36:25 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/11/02/daisuutekide_takatatopata_nmatchinohoi__akakuroki/</guid>
      <description>&lt;p&gt;κeenです。
n月刊ラムダノートに書いた「代数的データ型とパターンマッチの基礎」のところで「パターンマッチがあるとこんなに便利になるよ」というのと紹介し忘れていたので勝手に補遺します。
まあ、紙面の都合もあって覚えていたとしても入りませんでしたね。
代数的データ型とパターンマッチの題材としては定番の赤黒木を紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n月刊ラムダノートにパターンマッチについて寄稿しました</title>
      <link>//KeenS.github.io/blog/2019/11/02/ngekkanramudano_tonipata_nmatchinitsuitekikoushimashita/</link>
      <pubDate>Sat, 02 Nov 2019 16:10:02 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/11/02/ngekkanramudano_tonipata_nmatchinitsuitekikoushimashita/</guid>
      <description>&lt;p&gt;κeenです。
&lt;a href=&#34;https://www.lambdanote.com/collections/n/products/nmonthly-vol-1-no-3-2019&#34;&gt;n月刊ラムダノート Vol.1, No.3(2019)&lt;/a&gt;に代数的データ型とパターンマッチの基礎の章を寄稿しました。
どんな内容か、どうやって執筆までに至ったのかを話そうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで構造体に配列のようなインデックスアクセス</title>
      <link>//KeenS.github.io/blog/2019/10/31/rustdekouzoutainihairetsunoyounaindekkusuakusesu/</link>
      <pubDate>Thu, 31 Oct 2019 02:52:22 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/31/rustdekouzoutainihairetsunoyounaindekkusuakusesu/</guid>
      <description>&lt;p&gt;κeenです。ネタ記事です。ふと、構造体に配列のようなアクセスができる方法を思い付いたので共有します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grub rescueで&#39;grub_file_filters&#39; not foundが出るときの対処方</title>
      <link>//KeenS.github.io/blog/2019/10/21/grub_rescuede_grub_file_filters__not_foundgaderutokinotaishohou/</link>
      <pubDate>Mon, 21 Oct 2019 18:14:12 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/21/grub_rescuede_grub_file_filters__not_foundgaderutokinotaishohou/</guid>
      <description>&lt;p&gt;κeenです。&lt;a href=&#34;https://keens.github.io/blog/2018/05/12/ubuntuderootfswobtrfsnoraid1insuto_ru/&#34;&gt;昔変な構成でRAID1を組んだ&lt;/a&gt;のですが、その状態でUbuntuのアップグレードをしたらgrubが壊れたらしくどうにもならなくなったのでそれを復旧したときのメモです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>パッチを当ててuim-skkをUTF-8化する</title>
      <link>//KeenS.github.io/blog/2019/10/20/patchiwoateteuim_skkwoutf_8kasuru/</link>
      <pubDate>Sun, 20 Oct 2019 00:21:47 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/20/patchiwoateteuim_skkwoutf_8kasuru/</guid>
      <description>&lt;p&gt;κeenです⸜( ¯⌓¯ )⸝。&lt;/p&gt;

&lt;p&gt;ずっとuim-skkを使っていての困り事がユニコードの扱いでした。
uimの内部コーディングはEUC-JPなんですが、「⸜( ¯⌓¯ )⸝」に含まれる「⌓」がEUJ-JP外なので入力できないのです。そこでuim-skk内部や辞書をUTF-8化して入力できるようにしたお話です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu 19.10でzfs root試してみた</title>
      <link>//KeenS.github.io/blog/2019/10/19/ubuntu_19_10dezfs_roottameshitemita/</link>
      <pubDate>Sat, 19 Oct 2019 12:17:24 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/19/ubuntu_19_10dezfs_roottameshitemita/</guid>
      <description>&lt;p&gt;κeenです。Ubuntu 19.10出ましたね。Ubuntu 19.10からZFSをroot fsにしたインストールがサポートされるようになったので試しました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>その正規表現エンジン、インタプリタで満足してる？！</title>
      <link>//KeenS.github.io/slide/sonoseikihyougenenjin_intapuritademanzokushiteru__/</link>
      <pubDate>Fri, 18 Oct 2019 02:47:52 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/sonoseikihyougenenjin_intapuritademanzokushiteru__/</guid>
      <description>.narrow { letter-spacing: -30px; } .narrow span { transform: scaleX(0.7); transform-origin: left; display: inline-block; } # その正規表現エンジン、 インタプリタで満足(サティスファイ)してる？！ ---------------------- [Regex Festa - connpass](https://opt.connpass.com/event/140566/) === # About Me --------- ![κeenのアイコ</description>
    </item>
    
    <item>
      <title>Rustで型レベル迷路</title>
      <link>//KeenS.github.io/blog/2019/10/06/rustdekatareberumeiro/</link>
      <pubDate>Sun, 06 Oct 2019 21:55:42 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/06/rustdekatareberumeiro/</guid>
      <description>&lt;p&gt;κeenです。型レベル迷路作ったよ！コンパイルが通ったらゴール！！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで「文字が特定の文字集合に含まれるか」を判定するのはどれが速いか</title>
      <link>//KeenS.github.io/blog/2019/10/06/rustde_mojigatokuteinomojishuugounifukumareruka_wohanteisurunohadoregahayaika/</link>
      <pubDate>Sun, 06 Oct 2019 19:00:53 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2019/10/06/rustde_mojigatokuteinomojishuugounifukumareruka_wohanteisurunohadoregahayaika/</guid>
      <description>&lt;p&gt;κeenです。ブログタイトルが長い。
普段、どれがいいとか特に気にせず書いている「文字が特定の文字集合に含まれるか」の判定をするのはどの方法が速いかが気になったのでベンチマークを取ってみました。&lt;/p&gt;

&lt;p&gt;想定しているのは何かのパーサを書いていて、例えば識別子に使える文字が &lt;code&gt;[a-zA-Z0-9_!?=&amp;lt;&amp;gt;]&lt;/code&gt; だったときにそれを判定する方法です。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
