<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/</link>
    <description>Recent content on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 21 Dec 2019 22:31:35 +0900</lastBuildDate>
    
        <atom:link href="//KeenS.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>テストについて、Scalaと。</title>
      <link>//KeenS.github.io/slide/tesutonitsuite_scalato_/</link>
      <pubDate>Tue, 12 Apr 2016 22:31:51 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/tesutonitsuite_scalato_/</guid>
      <description># テストについて、Scalaと。 ---------------------- サイバーエージェント アドテクスタジオ ScalaMeetUp テスト回 === # About Me --------- ![κeenのアイコン](/images/icon</description>
    </item>
    
    <item>
      <title>Mirah関連ツールまとめ</title>
      <link>//KeenS.github.io/blog/2016/04/04/mirahkanrentsu_rumatome/</link>
      <pubDate>Mon, 04 Apr 2016 01:16:31 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/04/04/mirahkanrentsu_rumatome/</guid>
      <description>&lt;p&gt;κeenです。寝付けないのでMirah関連ツールについてまとめようかと。
とはいってもそんなにないのですが。Mirahについて知らない人は適当にググって下さい。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SMLで函数型的正規表現マッチ</title>
      <link>//KeenS.github.io/slide/smldekansuukatatekiseikihyougenmatchi/</link>
      <pubDate>Tue, 29 Mar 2016 01:44:39 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/smldekansuukatatekiseikihyougenmatchi/</guid>
      <description># SMLで函数型的正規表現マッチ ---------------------- === # About Me --------- ![κeenのアイコン](/images/icon.png) + κeen + [@blackenedgold](https://twitter.com/blackenedgold) + Github: [KeenS](https://github.com/KeenS) + サイバーエージ</description>
    </item>
    
    <item>
      <title>ビッグデータしないDrill、ローカルで快適に使うために</title>
      <link>//KeenS.github.io/slide/biggude_tashinaidrill_ro_karudekaitekinitsukautameni/</link>
      <pubDate>Sun, 06 Mar 2016 14:54:30 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/biggude_tashinaidrill_ro_karudekaitekinitsukautameni/</guid>
      <description># ビッグデータしないDrill、ローカルで快適に使うために ---------------------- [Tokyo Apache Drill Meetup](http://drill.connpass.com/event/27414/) 2016-03-22 === # About Me --------- ![κeenのアイコン](/images/icon.png)</description>
    </item>
    
    <item>
      <title>Rustとは何か。どんな言語か。</title>
      <link>//KeenS.github.io/slide/rusttohananika_donnagengoka_/</link>
      <pubDate>Sun, 06 Mar 2016 05:27:39 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/rusttohananika_donnagengoka_/</guid>
      <description># Rustとは何か。どんな言語か。 ---------------------- [異種プログラミング言語格闘勉強会](http://kbkz.connpass.com/event/26</description>
    </item>
    
    <item>
      <title>リージョンとRustの返り値</title>
      <link>//KeenS.github.io/blog/2016/03/02/ri_jontorustnokaerichi/</link>
      <pubDate>Wed, 02 Mar 2016 00:05:03 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/03/02/ri_jontorustnokaerichi/</guid>
      <description>&lt;p&gt;Rustにおいては返り値ポインタで返すよりもそのまま返して、受け取る側でポインタで受け取るかそのまま受け取るかを指定するのが良い選択肢だ、といっています。
しかし初めて見る時にはどうしてそんなことが出来るのかわからず、びっくりしますよね。
それをRustがリージョンを使ってメモリ管理をしていると分かればどうなっているのか分かったのですこしばかり。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustのゼロコスト抽象化</title>
      <link>//KeenS.github.io/blog/2016/03/01/rustnozerokosutochuushouka/</link>
      <pubDate>Tue, 01 Mar 2016 23:32:12 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/03/01/rustnozerokosutochuushouka/</guid>
      <description>&lt;p&gt;κeenです。今日Twitter上でのやりとりから少し面白いことが分かったのでそれについて。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>テストについて考えてみた</title>
      <link>//KeenS.github.io/blog/2016/03/01/tesutonitsuitekangaetemita/</link>
      <pubDate>Tue, 01 Mar 2016 22:49:23 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/03/01/tesutonitsuitekangaetemita/</guid>
      <description>&lt;p&gt;κeenです。
普段はテストをあまり書かない人なのですが業務では流石に書く必要があって、馴れないことをしていると色々と考えることがあったのでまとめます。
まだ私はテストのセオリーとかには詳しくないので勝手気儘に考えたことです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RustのHigher-Kinded type Trait</title>
      <link>//KeenS.github.io/blog/2016/02/28/rustnohigherkinded_type_trait/</link>
      <pubDate>Sun, 28 Feb 2016 14:40:59 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/02/28/rustnohigherkinded_type_trait/</guid>
      <description>&lt;p&gt;κeenです。少し前の話になりますがRustの関連型を駆使してHigher Kinded type Trait（高階型トレイト）を実現してしまったものが出回ってたのでそれについて。
本来RustはHKTをサポートしていませんが不思議なことに実装出来てしまっているのです。&lt;/p&gt;

&lt;p&gt;HKTについて微塵も知らない方にも分かるように解説していきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>druidというリアルタイムデータ分析ツールを知った</title>
      <link>//KeenS.github.io/blog/2016/02/27/druidtoiuriarutaimude_tabunsekitsu_ruwoshitta/</link>
      <pubDate>Sat, 27 Feb 2016 21:28:16 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/02/27/druidtoiuriarutaimude_tabunsekitsu_ruwoshitta/</guid>
      <description>&lt;p&gt;κeenです。社内ハッカソンに出てきた。そこでdruidというツール（？）を触ったのでそれについて。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
