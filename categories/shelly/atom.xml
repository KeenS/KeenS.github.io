<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: shelly | κeenのHappy Hacκing Blog]]></title>
  <link href="http://KeenS.github.io/categories/shelly/atom.xml" rel="self"/>
  <link href="http://KeenS.github.io/"/>
  <updated>2014-12-04T23:30:35+09:00</updated>
  <id>http://KeenS.github.io/</id>
  <author>
    <name><![CDATA[κeen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shellyを使ってCommon LispファイルをExecutableにする]]></title>
    <link href="http://KeenS.github.io/blog/2013/09/26/shelly-script/"/>
    <updated>2013-09-26T21:25:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2013/09/26/shelly-script</id>
    <content type="html"><![CDATA[<p>コマンドラインからCommon Lispの関数を実行できる <a href="https://github.com/fukamachi/shelly">Shelly</a>を使ってCommon Lispファイルを実行形式にしてみました。Shellyは</p>

<pre><code>$ shly + 1 2
3
</code></pre>

<p>みたいに関数を実行できます。</p>

<!-- more -->


<p>モチベーションとしては、 <a href="http://blog.8arrow.org/entry/20120521/1337596483">Shellyの作者深町さん</a>がTwitterで「Shellyでloadを使うとスクリプトみたいに実行できる」と発言していたのがきっかけで、Shebangを無視できればUNIX系ではExecutableにできるのでは？と思いついてやってみました。</p>

<p><code>read</code>して<code>eval</code>して…とか考えてましたが、<code>load</code>に<code>stream</code>を渡せるようなので案外簡単にできました。</p>

<script src="https://gist.github.com/KeenS/6688683.js?file=script.lisp"></script>


<p><noscript><pre><code>(in-package :shelly)
(export (defvar <em>argv</em> nil))
(in-package :cl-user)</p>

<p>(defun script (file argv)
  &ldquo;Execute a file as script ignoring shebang&rdquo;
  (setf shelly:<em>argv</em> argv)
  (let* ((in (open file :if-does-not-exist :error))</p>

<pre><code> (first-char (read-char in))
 (second-char (read-char in)))
(cond
  ((and (char= first-char #\#) (char= second-char #\!))
   (read-line in))
  (t (unread-char second-char in)
 (unread-char first-char in)))
(load in)
(values)))
</code></pre>

<p></code></pre></noscript></p>

<p>コマンドライン引数を受け取るために<code>*argv*</code>という変数を用意してます。</p>

<p>こんなことを<code>~/.shelly/Shellyfile</code>に書いておき、Lispの初期化ファイルに</p>

<pre><code>#+shelly
(load "~/.shelly/Shellyfile")
</code></pre>

<p>と書いてます。この<code>~/.shelly/Shellyfile</code>にはShelly向けの関数を溜め込んでいく予定です。</p>

<p>あとは</p>

<p><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr>
<td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td>
<td class="code"><pre><code class="common-lisp"><span class="line"><span class="err">#</span><span class="nv">!shly</span> <span class="nv">script</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nb">defun</span> <span class="nv">hello</span> <span class="p">()</span>
</span><span class="line"> <span class="p">(</span><span class="nb">format</span> <span class="no">t</span> <span class="s">&ldquo;Hello ~a~%&rdquo;</span> <span class="p">(</span><span class="nb">first</span> <span class="nv">shelly:<em>argv</em></span><span class="p">)))</span>
</span><span class="line"><span class="p">(</span><span class="nv">hello</span><span class="p">)</span>
</span></code></pre></td>
</tr></table></div></figure></p>

<p>を<code>foo.lisp</code>に書き込めば</p>

<pre><code>$ chmod u+x foo.lisp
$./foo.lisp κeen
Hello κeen
</code></pre>

<p>と実行できます。勿論、</p>

<pre><code>$shly script foo.lisp κeen
</code></pre>

<p>としても同じです。一部の処理系ではこのようなことが出来ますが、コマンドライン引数の渡し方とかも処理系依存なのでポータブルに書くなら一つ試してみてはいかがでしょうか。</p>
]]></content>
  </entry>
  
</feed>
