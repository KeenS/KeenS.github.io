<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>依存型 on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/%E4%BE%9D%E5%AD%98%E5%9E%8B/</link>
    <description>Recent content in 依存型 on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 21 Sep 2019 22:11:57 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/%E4%BE%9D%E5%AD%98%E5%9E%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Idrisの話とIdris2のウワサ</title>
      <link>//KeenS.github.io/slide/idrisnohanashitoidris2nouwasa/</link>
      <pubDate>Sat, 21 Sep 2019 22:11:57 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/idrisnohanashitoidris2nouwasa/</guid>
      <description>===
About Me   κeen @blackenedgold Github: KeenS GitLab: blackenedgold Idein Inc.のエンジニア Lisp, ML, Rust, Shell Scriptあたりを書きます  ===
Idris   Edwin Brady 2013 〜 証明支援系ではなくてプログラミング言語 依存型のあるHaskell Eager Evaluation コンパイルするとバイナリが出る  C経由 JSバックエンドなども    ===
Hello, Idris  main : IO () main = putStrLn &amp;#34;Hello&amp;#34;  $ idris -o hello hello.idr $ ./hello &amp;quot;Hello&amp;quot; ===
依存型   値を型に書ける  data Vect : (len : Nat) -&amp;gt; (elem : Type) -&amp;gt; Type where Nil : Vect Z elem (::) : (x : elem) -&amp;gt; (xs : Vect len elem) -&amp;gt; Vect (S len) elem  v : Vect 3 Int v = [1, 2, 3] ===</description>
    </item>
    
    <item>
      <title>ATS2の依存型を使ってAVL木</title>
      <link>//KeenS.github.io/blog/2015/12/29/ats2noizongatawotsukatteavlki/</link>
      <pubDate>Tue, 29 Dec 2015 23:40:45 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2015/12/29/ats2noizongatawotsukatteavlki/</guid>
      <description>&lt;p&gt;κeenです。少しばかりATS2を触ってみたので成果報告でも。&lt;/p&gt;
&lt;p&gt;AVL木は左右のノードの高さが高々1しか違わない平衡二分木です。OCamlやSMLでナイーブに実装すると本当に1しか違わないことを保証するのは難しく、精々テストなどで部分的に検査するだけです。&lt;/p&gt;
&lt;p&gt;ところがSMLに似た文法を持つATS2には依存型があり、左右のノードの高さが高々1しか違わないことを型で保証出来ます。
つまり、左右のノードの高さが2以上違う木を作ろうとしてもコンパイルエラーになるのでコンパイルが通れば高さについてはバグがないこと保証されます。&lt;/p&gt;
&lt;p&gt;そういうAVL木を使ってTreeSetを作ってみたので紹介します。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>