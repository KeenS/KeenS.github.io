<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>依存型 on κeenのHappy Hacκing Blog</title>
    <link>https://KeenS.github.io/categories/%E4%BE%9D%E5%AD%98%E5%9E%8B/</link>
    <description>Recent content in 依存型 on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 10 Sep 2022 02:42:15 +0900</lastBuildDate>
    
	<atom:link href="https://KeenS.github.io/categories/%E4%BE%9D%E5%AD%98%E5%9E%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Idris2の依存型つき木</title>
      <link>https://KeenS.github.io/blog/2022/09/10/idris2noizongatatsukiki/</link>
      <pubDate>Sat, 10 Sep 2022 02:42:15 +0900</pubDate>
      
      <guid>https://KeenS.github.io/blog/2022/09/10/idris2noizongatatsukiki/</guid>
      <description>&lt;p&gt;κeenです。&lt;a href=&#34;https://opt.connpass.com/event/255865/&#34;&gt;某勉強会&lt;/a&gt;の準備で色々Idrisのライブラリを眺めてたら面白いものを見付けたので共有します。
依存型があればどの言語でも定義できるはずですが、標準添付ライブラリとしてIdris2に入ってたのでタイトルにIdris2を入れときました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Idrisの依存型で高さが100%正しいAVL木を定義する</title>
      <link>https://KeenS.github.io/blog/2020/12/23/idrisdetakasaga100_tadashiiavlkiwoteigisuru/</link>
      <pubDate>Wed, 23 Dec 2020 20:29:01 +0900</pubDate>
      
      <guid>https://KeenS.github.io/blog/2020/12/23/idrisdetakasaga100_tadashiiavlkiwoteigisuru/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/idris&#34;&gt;Idris Advent Calendar 2020&lt;/a&gt;の22日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。今回は依存型を使って部分的に正しさを証明したデータ構造を作っていきたいと思います。
慣れてない人には難しめの内容になるかもしれません。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Idrisで依存型を使った定理証明入門</title>
      <link>https://KeenS.github.io/blog/2020/12/22/idrisdeizongatawotsukattashoumeinyuumon/</link>
      <pubDate>Tue, 22 Dec 2020 19:04:42 +0900</pubDate>
      
      <guid>https://KeenS.github.io/blog/2020/12/22/idrisdeizongatawotsukattashoumeinyuumon/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/idris&#34;&gt;Idris Advent Calendar 2020&lt;/a&gt;の19日目の記事です。
次はmock_beginnerさんで&lt;a href=&#34;https://kengo-yamashita.hatenablog.com/entry/2020/12/20/Idrisとはじめる型駆動開発&#34;&gt;Idrisとはじめる型駆動開発&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;κeenです。今回はこのAdvent Calendarの山場の1つ、定理証明について解説しようと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Idris面白機能：with構文と依存型、View</title>
      <link>https://KeenS.github.io/blog/2020/12/22/idrisomoshirokinou_withkoubuntoview/</link>
      <pubDate>Tue, 22 Dec 2020 04:53:18 +0900</pubDate>
      
      <guid>https://KeenS.github.io/blog/2020/12/22/idrisomoshirokinou_withkoubuntoview/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/idris&#34;&gt;Idris Advent Calendar 2020&lt;/a&gt;の18日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。Idrisで個人的に面白いなーと思ってる機能、 &lt;code&gt;with&lt;/code&gt; 構文とそれを利用したViewについて紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Idris手習い: ビッットマップ画像の書き出し</title>
      <link>https://KeenS.github.io/blog/2020/12/16/idristenarai__bitsuttomappugazounokakidashi/</link>
      <pubDate>Wed, 16 Dec 2020 02:40:32 +0900</pubDate>
      
      <guid>https://KeenS.github.io/blog/2020/12/16/idristenarai__bitsuttomappugazounokakidashi/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;https://qiita.com/advent-calendar/2020/idris&#34;&gt;Idris Advent Calendar 2020&lt;/a&gt; の12日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。今回は手を動かすパートとしてビットマップ画像の書き出しをIdrisでやってみます。
依存型やIdrisの標準ライブラリ、ファイルの扱いなどの練習になればなと思ってます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Idrisの話とIdris2のウワサ</title>
      <link>https://KeenS.github.io/slide/idrisnohanashitoidris2nouwasa/</link>
      <pubDate>Sat, 21 Sep 2019 22:11:57 +0900</pubDate>
      
      <guid>https://KeenS.github.io/slide/idrisnohanashitoidris2nouwasa/</guid>
      <description>Proof Summit 2019での発表用。Idrisと依存型と証明</description>
    </item>
    
    <item>
      <title>Idrisで依存キュー</title>
      <link>https://KeenS.github.io/blog/2019/02/28/idrisdeizonkyu_/</link>
      <pubDate>Thu, 28 Feb 2019 00:32:46 +0900</pubDate>
      
      <guid>https://KeenS.github.io/blog/2019/02/28/idrisdeizonkyu_/</guid>
      <description>&lt;p&gt;κeenです。なんか雑にIdrisでキューライブラリを作ったので紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ATS2の依存型を使ってAVL木</title>
      <link>https://KeenS.github.io/blog/2015/12/29/ats2noizongatawotsukatteavlki/</link>
      <pubDate>Tue, 29 Dec 2015 23:40:45 +0900</pubDate>
      
      <guid>https://KeenS.github.io/blog/2015/12/29/ats2noizongatawotsukatteavlki/</guid>
      <description>&lt;p&gt;κeenです。少しばかりATS2を触ってみたので成果報告でも。&lt;/p&gt;

&lt;p&gt;AVL木は左右のノードの高さが高々1しか違わない平衡二分木です。OCamlやSMLでナイーブに実装すると本当に1しか違わないことを保証するのは難しく、精々テストなどで部分的に検査するだけです。&lt;/p&gt;

&lt;p&gt;ところがSMLに似た文法を持つATS2には依存型があり、左右のノードの高さが高々1しか違わないことを型で保証出来ます。
つまり、左右のノードの高さが2以上違う木を作ろうとしてもコンパイルエラーになるのでコンパイルが通れば高さについてはバグがないこと保証されます。&lt;/p&gt;

&lt;p&gt;そういうAVL木を使ってTreeSetを作ってみたので紹介します。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
