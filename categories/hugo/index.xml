<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>κeenのHappy Hacκing Blog</title>
    <link>/categories/hugo/index.xml</link>
    <description>Recent content on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OctopressからHugoに移行した</title>
      <link>/blog/2014/12/30/migration-from-octopress-to-hugo</link>
      <pubDate>Tue, 30 Dec 2014 03:26:58 +0000</pubDate>
      
      <guid>/blog/2014/12/30/migration-from-octopress-to-hugo</guid>
      <description>&lt;p&gt;κeenです。年末ですね。&lt;a href=&#34;http://deeeet.com/writing/2014/12/25/hugo/&#34;&gt;こちらのブログ&lt;/a&gt;にもあるようにOctopressの生成の遅さに閉口してたのでHugoに移行しました。
出来るだけブログのURLは変えないようにしました。でもどっかでリンク切れちゃってるかも。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Octopressは遲い以外にもテンプレートのファイルが多い、Rubyのインストールと&lt;code&gt;bundle install&lt;/code&gt;が必要、柔軟性がない、など不満があったのですがバイナリ配布のHugoは~/binに置くだけで良いですしテーマが気に入らなければユーザーがオーバーライドする仕組みもあるので好きにいじれます。まあ、結局テーマをフォークしちゃったんですけどね。&lt;/p&gt;

&lt;h1 id=&#34;作業&#34;&gt;作業&lt;/h1&gt;

&lt;p&gt;Markdownとメタデータは概ね互換性があるのでcontent/post/に突っ込んで先のブログのワンライナーを回せばとりあえず動きます。URL互換性を保つために&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd content/post
for f in *.markdown; do mv ${f} $(basename ${f#*-*-*-} .markdown).md;done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;みたいなのを回します。ヒストリ搜すの面倒なので今即興で書きました。&lt;/p&gt;

&lt;p&gt;んで記事にカテゴリのタグが欲いのと日付をISOっぽくしたかったのでテンプレートをオーバーライド。あ、テンプレートは&lt;a href=&#34;https://github.com/eliasson/liquorice/&#34;&gt;liquorice&lt;/a&gt;を使いました。&lt;/p&gt;

&lt;h1 id=&#34;シンタックスハイライト&#34;&gt;シンタックスハイライト&lt;/h1&gt;

&lt;p&gt;Hugoはデフォルトでは提供しません。サーバーサイドでやろうとするとpygmentsが遲いから。クライアントサイドだと複数あるらしいので&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;にしてみました。Clojure REPLとか絶妙なものがあって良いですね。個人的にはコマンドラインのハイライトが欲かった…&lt;/p&gt;

&lt;h1 id=&#34;スライド&#34;&gt;スライド&lt;/h1&gt;

&lt;p&gt;Octopressの時はテーマに手を入れるわreveal.jsのテーマは自作するわちょっと表には出せないアドホックでダーティーなプラグインを作るわしてreveal.jsに無理やりブログのテーマを載せてました。&lt;/p&gt;

&lt;p&gt;今回はHugoテーマをフォークしてslide用のテンプレート書いて、Octopressの時に使っていたreveal.jsの自作テーマを少しいじるだけで済みました。しかもブロクにreveal.jsを埋め込む形になってます。この際&lt;a href=&#34;http://remarkjs.com/&#34;&gt;remark.js&lt;/a&gt;にしようかとも思ったのですがまたスライドのテーマ作るの面倒だったのでreveal.jsのままで。remark.jsだったら苦労せずとも導入出来たのかなぁ。&lt;/p&gt;

&lt;p&gt;一番の問題はreveal.jsにはmarkdownを食わせるのですが、Hugoがmarkdownをレンダリングしちゃうところですね。Octopressではプラグインで先にスライドだけ処理しちゃってOctopressには触らせないことで実現してました。&lt;/p&gt;

&lt;p&gt;Hugoはgoのテンプレートを使っているのですがこれまた癖があって文脈に応じてそのまま出したりレンダリングしたりHTMLエスケープしたりJSエスケープしたりします。試行錯誤する内に &lt;em&gt;markdown 全体を&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;で囲むとレンダリングされない&lt;/em&gt; というバグっぽい挙動を見付けました。というこで汚ないんですがスライドは各記事を手動で&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;section data-markdown
    data-separator=&amp;quot;\n\n&amp;quot;
    data-vertical=&amp;quot;\n\n&amp;quot;
    data-notes=&amp;quot;^Note:&amp;quot;&amp;gt;
&amp;lt;script type=&amp;quot;text/template&amp;quot;&amp;gt;


&amp;lt;/script&amp;gt;
&amp;lt;/section&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で囲むことにしました。&lt;/p&gt;

&lt;h1 id=&#34;雑感&#34;&gt;雑感&lt;/h1&gt;

&lt;p&gt;速いし導入楽だしもうOctopressに戻りたいとは思わないです。あとauto refleshが便利すぎる。変更したらビルドしてブラウザのリロードまでやってくれます。デュアルディスプレイだと捗りそうですね。&lt;/p&gt;

&lt;p&gt;不満はウィジェットが少ない、コマンド１発でデプロイ出来無い、octomacsが使えない。ソーシャルアイコン気に入ってたのに。&lt;/p&gt;

&lt;p&gt;あと折角なのでブログエントリ全体見返して細かな修正行いました。カテゴリの統一とか。&lt;/p&gt;

&lt;p&gt;これで今年の大掃除終わり！&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>