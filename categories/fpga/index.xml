<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FPGA on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/fpga/</link>
    <description>Recent content in FPGA on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 28 Mar 2017 09:21:33 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/fpga/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ソフトウェアエンジニアがFPGAやってみる</title>
      <link>//KeenS.github.io/slide/sofutoueaenjiniagafpgayattemiru/</link>
      <pubDate>Tue, 28 Mar 2017 09:21:33 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/sofutoueaenjiniagafpgayattemiru/</guid>
      <description>===
About Me   κeen @blackenedgold Github: KeenS Idein Inc.のエンジニア Lisp, ML, Rust, Shell Scriptあたりを書きます  ===
よくある話  ===
FPGAって？   Field-Programmable Gate Array プログラマブルな集積回路  オレオレ設計のCPU作ったり HDMI入力を直でmpg4にエンコードするデバイスとかも   クロックはASIC(ふつうのCPU)より大分遅い でも上手く嵌れば100倍高速化とか  ===
PYNQって？   PYNQ-Z1 Python Productivity for Zynq - Digilent xilinxのFPGAとARMのチップが載ったSoC ARMで動いてるPython(Jupyter)からFPGAにロジック焼ける  手軽にロジックを試せる   FPGAとの通信はMMIO  特定のアドレスのメモリにデータを書くとFPGAに送られる メモリのデータを読むとFPGAからデータが送られる    ===
===
ハードウェアロジック   ハードウェア記述言語(HDL)を使う  メジャーなのはVHDLとVerilog 今回はVerilogの話   クロックとかレジスタとかワイヤーとか駆使する 電気信号なのでロジックが並列で走る vivadoというツールでコンパイル  Tclで制御も出来る   回路設計とかも コンパイルは結構遅い… CPUと通信するときの規格とかも書かなきゃいけない  AXI LiteとかAXI Fullとか… 一応自動で生成はしてくれる    ===</description>
    </item>
    
  </channel>
</rss>