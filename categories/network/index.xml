<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>κeenのHappy Hacκing Blog</title>
    <link>/categories/network/index.xml</link>
    <description>Recent content on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="/categories/network/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bind Addressの意味がようやく分かった</title>
      <link>/blog/2016/02/24/bind_addressnoimigayouyakuwakatta</link>
      <pubDate>Wed, 24 Feb 2016 23:57:31 +0900</pubDate>
      
      <guid>/blog/2016/02/24/bind_addressnoimigayouyakuwakatta</guid>
      <description>&lt;p&gt;κeenです。小ネタを。サーバを立ち上げる時に指定するBind Addressについてよく分かっていなかったのがようやく分かるようになったのでそれについて。

Bind Addressはサーバ(特にHTTPサーバ)を立ち上げる時によく指定することになりますが、Usageを見ても「バインドするアドレスを指定する」などとトートジーめいたことしか書いてありませんでした。
実際に使ってみても127.0.0.1を指定すればローカルホストから、0.0.0.0を指定すれば外部からでも参照出来るな、くらいの認識しかありませんでした。
意味も分からず使っていると気持ち悪いもので、2つの疑問が湧いてきます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;0.0.0.0と127.0.0.1は正確に何を意味するのか&lt;/li&gt;
&lt;li&gt;127.0.0.1と0.0.0.0以外のアドレスを指定するのはどのようなケースか&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;もちろん、127.0.0.1がlocalhostを指すことは知っていますが0.0.0.0というアドレスはBind Addressでしか見たことありませんし、127.0.0.1が私の知っているlocalhostの意味でない可能性も十分あるな、と思っていました。&lt;/p&gt;

&lt;p&gt;さて、この疑問に答えるには前提知識が必要なのでそこから始めましょう。&lt;/p&gt;

&lt;h1 id=&#34;マシンは複数のipアドレスを持ちうる&#34;&gt;マシンは複数のIPアドレスを持ちうる&lt;/h1&gt;

&lt;p&gt;1つのマシンに、複数のIPアドレスが割り当てられることがあります。
典型的なのはルータのようにインターネットとローカルエリアネットワーク両方に参加しているもので、LANには「192.168.1.1」、インターネットには「www.xxx.yyy.zz」という2つのIPアドレスを持つでしょう。
また、どのマシンにも先程述べたlocalhost、127.0.0.1という内部から自身を指すIPアドレスもあります。
図にするとこんな感じでしょうか。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  [インターネット]
       |
       |
       | www.xxx.yyy.zz
[x 127.0.0.1] ルータ
       | 192.168.1.1
       |
   ...-+--+
          | 192.168.1.2
         [ 127.0.0.1]マシンA

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;さて、この時に例えばルータの管理WebUIを提供したいとしましょう。このUIは勿論LAN内にいるマシンAからは参照したいですがインターネット全てに公開する訳にはいきません。
こういう時のアクセス制御に使うのがBind Addressです。&lt;/p&gt;

&lt;h1 id=&#34;呼ばれ方で反応を変える&#34;&gt;呼ばれ方で反応を変える&lt;/h1&gt;

&lt;p&gt;bind addressは、他のマシンから何という名前で呼ばれたかでメッセージを受け取る/受け取らない（というか見える見えない）を変えるものです。
街中で「田中さん」と呼ばれたら返事したいけど「†漆黒の天翅†さん」と呼ばれたら返事したくないですよね。
少し実験してみましょう。&lt;/p&gt;

&lt;p&gt;さて、私の手元のマシンはifconfigによると127.0.0.1というアドレスと192.168.1.6というアドレスを持っているようです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ifconfig
lo        Link encap:ローカルループバック  
          inetアドレス:127.0.0.1  マスク:255.0.0.0
          inet6アドレス: ::1/128 範囲:ホスト
          UP LOOPBACK RUNNING  MTU:65536  メトリック:1
          RXパケット:5132 エラー:0 損失:0 オーバラン:0 フレーム:0
          TXパケット:5132 エラー:0 損失:0 オーバラン:0 キャリア:0
          衝突(Collisions):0 TXキュー長:0 
          RXバイト:665331 (665.3 KB)  TXバイト:665331 (665.3 KB)
wlp3s0    Link encap:イーサネット  ハードウェアアドレス cc:3d:82:38:21:e2  
          inetアドレス:192.168.1.6  ブロードキャスト:192.168.1.255  マスク:255.255.255.0
          inet6アドレス: fe80::ce3d:82ff:fe38:21e2/64 範囲:リンク
          UP BROADCAST RUNNING MULTICAST  MTU:1500  メトリック:1
          RXパケット:85578 エラー:0 損失:0 オーバラン:0 フレーム:0
          TXパケット:64002 エラー:0 損失:0 オーバラン:0 キャリア:0
          衝突(Collisions):0 TXキュー長:1000 
          RXバイト:85393847 (85.3 MB)  TXバイト:10710856 (10.7 MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;HTTPサーバをそれぞれにbindしてみます。今回使うのはRubyのコマンドラインから使えるHTTPサーバです。&lt;/p&gt;

&lt;p&gt;まずは127.0.0.1。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e httpd -- ./ --port 8080 --bind 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じですかね。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+-------+
|       |
|     +-+ 127.0.0.1
|ruby-+ |
|       + 192.168.1.6
+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;さて、これにcurlでアクセスしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl 127.0.0.1:8080
結果が返ってくる
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl 192.168.1.6:8080
curl: (7) Failed to connect to 192.168.1.6 port 8080: 接続を拒否されました
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次に192.168.1.6を試します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e httpd -- ./ --port 8080 --bind 192.168.1.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これもこんな感じですかね。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+-------+
|       |
|       + 127.0.0.1
|ruby-+ |
|     +-+ 192.168.1.6
+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同じくcurlでアクセスしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl 127.0.0.1:8080
curl: (7) Failed to connect to 127.0.0.1 port 8080: 接続を拒否されました
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl 192.168.1.6:8080
結果が返ってくる
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;見事にbindしたアドレスに投げた時にしか結果が返ってきません。
また、無関係なアドレス、例えば192.168.1.2などにbindしようとするとこうなります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e httpd -- ./ --port 8080 --bind 192.168.1.2
[2016-02-25 00:36:17] INFO  WEBrick 1.3.1
[2016-02-25 00:36:17] INFO  ruby 2.1.5 (2014-11-13) [x86_64-linux-gnu]
/usr/lib/ruby/2.1.0/socket.rb:206:in `bind&#39;: Cannot assign requested address - bind(2) for 192.168.1.2:3000 (Errno::EADDRNOTAVAIL)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;どうやら正確に自分のアドレスでないとbind出来ないようです。&lt;/p&gt;

&lt;h1 id=&#34;0-0-0-0はワイルドカード&#34;&gt;0.0.0.0はワイルドカード&lt;/h1&gt;

&lt;p&gt;さて、これで正確に何という名前で呼ばれたかでアクセスを制御出来るようになりました。しかし公開サーバのように「どこからでも」アクセスさせたい場合にこと細かく指定させるのは不便です（というか複数のネットワークから参照することが出来なくなる？）。
その「どこからでも」を表すのが0.0.0.0です。&lt;/p&gt;

&lt;p&gt;試してみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e httpd -- ./ --port 8080 --bind 0.0.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうなっているのでしょうか。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+-------+
|       |
|     +-+ 127.0.0.1
|ruby-+ |
|     +-+ 192.168.1.6
+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl 127.0.0.1:8080
結果が返ってくる
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl 192.168.1.6:8080
結果が返ってくる
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl 0.0.0.0:8080
結果が返ってくる
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このようにどのような指定方法でも返ってきます。
curl 0.0.0.0:3000で結果が返ってきた(0.0.0.0が自身を指す)ことに驚きましたがワイルドカードアドレスにbindされた時にだけ結果が返ってきて欲しい時に便利なんですかね。&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;Bind Addressは本当にBindするAddressでした。足りないのはBind Addressに対する知識ではなくネットワークに対する知識でした。
世の中知らないといけないことが多い。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>