<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Ruby on κeenのHappy Hacκing Blog </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>/categories/ruby/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Tue, 30 Sep 2014 00:00:00 UTC</updated>
    
    <item>
      <title>#ISUCON 4 予選に学生枠で参加してきました</title>
      <link>/blog/2014/09/30/isucon4-q</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 UTC</pubDate>
      
      <guid>/blog/2014/09/30/isucon4-q</guid>
      <description>

&lt;p&gt;κeenです。ISUCON 4 予選に学生枠で参加してきたのでレポートです。日曜、2日目の方に参加です。&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;メンバー集めと準備&lt;/h1&gt;

&lt;p&gt;一番苦労しました。去年と同じく、全く知らない人と組んでます。全然集らなくて、@941さんがメンバー集めの音頭をとってくれたりして、ようやく集りました。941++。&lt;/p&gt;

&lt;p&gt;結局ISUCON夏期講習にいたPythonアイドルのくーむ(&lt;a href=&#34;https://twitter.com/cocodrips&#34;&gt;@cocodrips&lt;/a&gt;)さんとその友達の友達のねむねむ(&lt;a href=&#34;https://twitter.com/nemunemu3desu&#34;&gt;@nemunemu3desu&lt;/a&gt;)さんと出ることになりました。くーむさんは競技プログラミング系Pythonista、ねむねむさんはプログラマのためのWebサービス開発のバイトをやってるWeb系Rubyist。因みに私は去年もISUCONに出て&lt;a href=&#34;/blog/2013/11/11/isucon-final-stage/&#34;&gt;学生賞なんか貰ってる&lt;/a&gt;のでISUCONで要求される技術は一通り、広く浅くといった感じのRubyist。普段はLisp書いてます。「Lispを書く」はダブルミーニングですよ。すごいどうでも良いけどくーむさんは情報系のM2、ねむねむさんは情報系のB4、私は数学科のB4です。&lt;/p&gt;

&lt;p&gt;流石に初対面のメンバーでいきなり競技を始めても何も出来ないので一度3人で顔を合わせて打ち合わせをしました。簡単に書いてますけど待ち合わせとか苦労したんですよ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;データ量とかアルゴリズムに対する感のあるくーむさんにはMySQLのチューニングを任せる&lt;/li&gt;
&lt;li&gt;くーむさんは各社のインターンで実務経験があるのでデプロイとかのコードの流れ、ベンチマークの管理もやって貰う&lt;/li&gt;
&lt;li&gt;その周辺のツールも作って貰う&lt;/li&gt;
&lt;li&gt;Rubyでwebサービスの開発をやってるねむねむさんにはRubyのコードをがんがん弄ってもらう&lt;/li&gt;
&lt;li&gt;Redisを使うことも視野に入れてもらう。Redisの経験はあるようなのでそんなに問題なさそう。&lt;/li&gt;
&lt;li&gt;あとは余ったNginX、Varnishをκeenが担当する&lt;/li&gt;
&lt;li&gt;恐らくNginX、Varnishは然程手間取らないのでアプリとMySQLで苦戦してる方にκeenが入る&lt;/li&gt;
&lt;li&gt;最初のセットアップはAWSアカウントを作ったくーむさんにやって貰う&lt;/li&gt;
&lt;li&gt;最初に計測することが大事なのでデフォルトのままログの設定だけ変えてベンチを走らせて作戦会議をする&lt;/li&gt;
&lt;li&gt;チーム名は3人のアイデンティティを合わせて「(ρ_-)/超銀杏バスターズ(･ω･ o)」とする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あたりを決めました。&lt;/p&gt;

&lt;p&gt;くーむさんは完全に普段とドメインが違うのでちょっとつらそうでしたがSQLとかRedisとかの本を貸したらめっちゃ勉強してきたみたいでした。
流石、情報科ですね。地力が違いますね。あとはGithubの学生が使えるプライベートリポジトリを用意してくれたり。ベンチマークを走らせたら時刻とgitのコミットIDをセットにしてログ用のレポジトリに突っこむスクリプトの準備もしてくれました。&lt;/p&gt;

&lt;p&gt;ねむねむさんはAWSアカウントを作って去年の予選の問題を予習してきたようでした。あとRedis使うかもって言っといたらRedis in ActionのPDFを見付けてたようなので読んできたんじゃないかなと思います。Rack用のプロファイラを試したようでした。去年も使おうとして結局使えなかったminiprofiler。ねむねむさんにも使えなかったようです。&lt;/p&gt;

&lt;p&gt;私はApacheとかNginXのログフォーマットを整備してパス/メソッド毎の(合計)レスポンスタイムを出す集計スクリプトを用意。その他マスタリングNginXを一通り読み直したりOpenRestyでmemcachedやlua、Redisのプラグインがあることを確認してインストールスクリプトを書いたりしてました。Varnishは間に合いませんでした。&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;当日&lt;/h1&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;開始&lt;/h2&gt;

&lt;p&gt;LINEカフェを使わせてもらうので9:20に集合。ちゃんと集まる。家の近いくーむさんがデカいディスプレイを持ってきてました。&lt;/p&gt;

&lt;p&gt;LINEカフェではLINEインターンの経験のあるくーむさんが勝手が分かってるので机を勝手に動かして三人横並びに座る。真ん中にくーむさんの大きいディスプレイがきて良い感じでした。&lt;/p&gt;

&lt;p&gt;10:00に号砲と共に競技開始。早速3人ともAWSの初心者でAMIの起動の仕方が分からず詰まります。ここクリックしてみて？とかいいながらログイン出来たのが10:20くらいですね。isuconユーザーにRSAのpubキーを突っ込むもパスワードを要求されてハマる。くーむさんはLinuxには不慣れなようだったので私がやるも&lt;a href=&#34;/blog/2014/08/21/isucon-summer-2014/&#34;&gt;夏期講習のとき&lt;/a&gt;と同じく解決出来ず。うーん。結局パスワードのまま通しました。&lt;/p&gt;

&lt;p&gt;gitの設定をするときにアプリとログはレポジトリを分けることは決まってましたがログを吐く場所を決めてなかったのでゴタゴタ。/var/logに吐こうとするもMySQLが吐いてくれない。権限の問題じゃね？とか言って777にするという邪悪なことをするとねむねむさんがsshを締め出される。MySQLが吐いてくれなかったのは再起動忘れ。sshを締め出されたのはsshdのログファイルの権限の問題。この辺解決したのが11時過ぎかな？&lt;/p&gt;

&lt;p&gt;ごたごたしてる間はねむねむさんはアプリ読んでくーむさんはインテグレーション周りの準備してくれたり。私もちょっとアプリ読んだりエラーでググったり。&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;作戦会議&lt;/h2&gt;

&lt;p&gt;12時前なので昼御飯食べながら。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ベンチマークを走らせると明かにMySQLが重いのでインデックスを張る(くーむ)&lt;/li&gt;
&lt;li&gt;アプリはキャッシュ効きそうなのでガンガンRedis使う(ねむねむ)&lt;/li&gt;
&lt;li&gt;とりあえずNginXの最適化とVarnishは入れる(κeen)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;な感じです。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;作業&lt;/h2&gt;

&lt;p&gt;Typoがあった以外はNginXとVarnishはスムーズに。&lt;/p&gt;

&lt;p&gt;実際にはくーむさんがログの自動プッシュ周りで苦戦してたのでけんちん汁を食べてる隙に私がインデックスを張ることにしました。ちまちまexplainしながらやるもどうもうまくいかない、と思ったらinit.shのヒアドキュメントが二重になってる…。そこを解消したら一気にスコア上がりました。でもWHERE狙いとORDER BY狙いってどうなんだっけとなって多少過剰なインデックスだったかもしれません。&lt;/p&gt;

&lt;p&gt;それでもうMySQLはCPU使わなくなったのでワークロード上げてみたらスコア12,000くらいになりました。&lt;/p&gt;

&lt;p&gt;なんか静的ファイルでベンチマークエラー出てるとくーむさんから報告がありました。Varnishの設定ミスったかなと思ったらエラーメッセージが無機質だったのでシステム関連っぽい。そこは全て独学でやってきた数学科生のググり力を発揮。調べるとローカルポートを使い果たしていた模様。システムの設定をコピペ。エラー出なくなる。&lt;/p&gt;

&lt;p&gt;RubyがCPU使ってるのでNginXからのリダイレクトをunixドメインソケットに。あんまり効果無し。&lt;/p&gt;

&lt;p&gt;ねむねむさんのRedisキャッシュ化が入って15,000とか。ねむねむさんを信じて「キャッシュして」とだけ言っといたので詳細は不明ですがユーザーはRedisに全部突っ込んだ模様。その後は脱MySQLを目指して黙々と作業してました。&lt;/p&gt;

&lt;p&gt;私は/reportがN+1クエリなので直そうと2時間くらい奮闘。後にスコアには反映されてないことを知らされて絶望。よく見とけば良かった。しかもEmacsのバッファに残ってるものをコミットしてしまってねむねむさんのコミット上書きしてしまったりしました。&lt;/p&gt;

&lt;p&gt;まだRubyがCPUを使ってるのてテンプレートエンジンを置き換えることを考えました。slimが速いと風の噂で訊いたのでくーむさんにお願いしてみるもスコアがた落ち。あれRuby製だったんですね。C製のテンプレートエンジン捜しとかなきゃ。&lt;/p&gt;

&lt;p&gt;さらにくーむさんがCSSやpngのminifyを試みるもチェックサムをとられていたようで失敗。良く見たらMD5とるってレギュレーションに書いてありました。後にminifyでなくインライン化すれば良かったらしいと聞く。&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;最終確認とか&lt;/h2&gt;

&lt;p&gt;17時あたりで一旦chkconfigしてリブートしてもベンチが動くことを確認。よかった。一応AMIを作ります。その後でN+1クエリの解決が動くも当然スコアには変動なし。あとはミドルウェアのログを切って脱MySQLは間に合わなくてアプリの微改善が入りパラメータの微調整をし、17,700あたりで競技終了。&lt;/p&gt;

&lt;h1 id=&#34;toc_6&#34;&gt;終わってみて&lt;/h1&gt;

&lt;p&gt;一応2日目の中では学生1位なものの、1日目10チーム、2日目4チームなので何とも言えないですね。一般枠は40,000でも本戦出場無理ポとか言ってるのに20,000にも全然届かないスコアで本戦出れるかもとか言ってるゆとりの学生です。&lt;/p&gt;

&lt;p&gt;反省は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;レギュレーション良く読む&lt;/li&gt;
&lt;li&gt;ベンチマークのスコアリングも確認する

&lt;ul&gt;
&lt;li&gt;静的ファイルは0.1点と思ってたら0.01点だった。この差大きい。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;権限管理は適切に&lt;/li&gt;
&lt;li&gt;hangoutに思ったことを垂れ流す筈だったのに口頭で済ませてしまった

&lt;ul&gt;
&lt;li&gt;それだけならまだしもhangoutに貼ったものが無視されてしまった&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;プロファイラ使えるようにならないとね。

&lt;ul&gt;
&lt;li&gt;RubyがCPU喰ってるのは分かってるのにどこがまずいか分かんなかったのは悔しい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;深みに嵌ったらあきらめる&lt;/li&gt;
&lt;li&gt;ブランチ切るとミドルウェアの違いで問題が出る(varnishとnginxの80の取り合い)&lt;/li&gt;
&lt;li&gt;互いのスキルを把握しておく&lt;/li&gt;
&lt;li&gt;開発スタイルを決めておく&lt;/li&gt;
&lt;li&gt;workload、workerprocessは最適値を捜す(コア数が4だったので4~8で決め打ちだったけど後に30くらいまで上げれると聞く)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;かな？私が普段Linuxを使ってるのでLinuxの設定くらいみんな出来ると思ってたら私以外Macerだったってのは予想外でした。本来なら私がAWSアカウント持ってれば問題なかったんですけどクレジットカード持ってないんですよね。つらい。&lt;/p&gt;

&lt;p&gt;開発スタイルはねむねむさんがpull-reqスタイル、私が細かいコミットをマスターに入れるスタイルでした。設定ファイルとアプリの違いもありますがpull-reqスタイルの方がロールバックし易いしそっちに統一した方が良さげですね。&lt;/p&gt;

&lt;p&gt;個人的に、いつも通りケアレスミスが多かったのは反省しなきゃなと思います。「あれ？動かない。あ！そうか！」みたいな。メンバーは「すげー。デバッグ速えー」って言ってましたけど違いますよ？世の中の不当評価はこうして産まれるんだと少し社会を知りました。&lt;/p&gt;

&lt;p&gt;Varnishももうちょっと使い熟さないとなーってのとlua勉強しなきゃなーってのが個人的な本戦に向けた準備ですね。N+1のとこはSQLの練習が出来たので個人的には満足…って言ったらメンバーに怒られますかね。&lt;/p&gt;

&lt;p&gt;全体として、チームは上手く動いてたんじゃないかなと思います。N+1のところで無駄に嵌らずにねむねむさんと2人でアプリの改修やってたら脱MySQLが間に合ったんじゃないかなってのが心残りです。インテグレーションはくーむさんのスクリプトで良い感じだったのでもうちょっと改良して本番にも使いたいですね。あとCapistranoかFabricも準備しないといけませんね。&lt;/p&gt;

&lt;p&gt;本当、やらかしてばっかの私に怒ることなく一緒にやってくれたくーむさん、ねむねむさんには感謝してます。もし予選通ってたら本戦も宜しくお願いします。&lt;/p&gt;

&lt;p&gt;そして忙しい中ISUCONを開催して下さったCOOKPADの方々、941さん、ありがとう御座います。ベンチマーカーの問題にも迅速に対応して下さってこちらは本当に楽しく競技出来ました。&lt;/p&gt;

&lt;p&gt;P.S.&lt;br /&gt;
今回の作業レポジトリは&lt;a href=&#34;https://github.com/cocodrips/isucon2014q&#34;&gt;ここ&lt;/a&gt;、ログレポジトリは&lt;a href=&#34;https://github.com/tomoasleep/isucon2014qlog&#34;&gt;ここ&lt;/a&gt;にありますがまだ非公開です。そのうち公開されると思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mirah 0.1.3がリリースされました</title>
      <link>/blog/2014/08/07/mirah-0-dot-1-3</link>
      <pubDate>Thu, 07 Aug 2014 00:00:00 UTC</pubDate>
      
      <guid>/blog/2014/08/07/mirah-0-dot-1-3</guid>
      <description>

&lt;p&gt;本日2回目のκeenです。次はRuby-likeな文法でJavaが書けるMirah言語の0.1.3がリリースたのでこれを期にMirahの紹介をします。&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Mirahとは？&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://mirah.org&#34;&gt;公式ページ&lt;/a&gt;。JRubyの開発者がJRubyのためにJavaを書くのが嫌になったという理由で作り始めた言語です。2008年にスタートだったかな？JRubyの開発の片手間に開発してるのでコミットペースはゆっくりです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mirah/mirah&#34;&gt;github&lt;/a&gt;のREADMEから引用すると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby-like シンタックス&lt;/li&gt;
&lt;li&gt;.classにコンパイルされる&lt;/li&gt;
&lt;li&gt;Javaと同じスピード&lt;/li&gt;
&lt;li&gt;ランタイムライブラリ必要なし&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;な言語です。私的には&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;型推論がある&lt;/li&gt;
&lt;li&gt;マクロがある&lt;/li&gt;
&lt;li&gt;面倒な部分はコンパイラが補ってくれる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;、Javaです。多くのJVM上の言語は独自言語+Java FFIって感じですが、Mirahは文法をRuby風にしただけで、吐かれるバイトコードはJavaコンパイラが吐くのものと等価です。&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;サンプルコード&lt;/h1&gt;

&lt;p&gt;一番Javaっぽいコードを見せましょう。ファイル名は&lt;code&gt;HelloWorld.mirah&lt;/code&gt;の他に&lt;code&gt;hello_world.mirah&lt;/code&gt;でも構いません。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class HelloWorld
  def self.main(args:String[]):void
    System.out.println(&amp;quot;Hello World&amp;quot;)
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まあ、Javaですね。JavaのstaticメソッドとRubyのクラスメソッドが対応しています。これをMirahの機能を使って書き換えていきます。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;暗黙のクラス&lt;/h2&gt;

&lt;p&gt;ファイル名からクラス名が推測出来るので省略することが出来ます。すなわち、トップレベルのメソッド定義は推測されたクラス内でのメソッド定義として扱われます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def self.main(args:String[]):void
  System.out.println(&amp;quot;Hello World&amp;quot;)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでも動きます。&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;暗黙のmain&lt;/h2&gt;

&lt;p&gt;トップレベルの式はmain内のものとして扱われます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;System.out.println(&amp;quot;Hello World&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうも書けることになります。ただし、argsにアクセス出来ないので複雑なことをやりたかったら大人しく&lt;code&gt;self.main&lt;/code&gt;を書きましょう。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;putsマクロ&lt;/h2&gt;

&lt;p&gt;mirahには組込みで&lt;code&gt;puts&lt;/code&gt;というマクロが定義されています。これはコンパイル時に&lt;code&gt;System.out.println&lt;/code&gt;に展開されます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;puts &amp;quot;Hello World&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こう書けます。ここまでくるとRubyと同じコードになりますね。あ、()が省略可能なのは良いですよね。Ruby系の言語ではよくあることです。&lt;/p&gt;

&lt;h1 id=&#34;toc_5&#34;&gt;もうちょっとサンプル&lt;/h1&gt;

&lt;p&gt;mirah/exmpleから面白いのを拾ってきます。だいたいRubyです。&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;リテラル&lt;/h2&gt;

&lt;p&gt;ほぼRubyです。つまり、&lt;code&gt;[]&lt;/code&gt;が配列ではなくArrayListになってます。尚、自動でintがIntegerに変換されてます。
また、hashはHashMapです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;str = &#39;non-interpolated string&#39;
str2 = &amp;quot;interpolated is better than #{str}&amp;quot;
heredoc = &amp;lt;&amp;lt;EOS
this is a here doc
EOS
int = 42
char = ?a
float = 3.14159265358979323846264
regex = /\d(cow)+\w\\/  # in Java, this would be &amp;quot;\\\\d(cow)+\\\\w\\\\\\\\&amp;quot;
regex2 = /interpolated #{regex}/
list = [1, 2, 3]
list[2] = 4
array = byte[5]
array[0] = byte(0)
hash = { &amp;quot;one&amp;quot; =&amp;gt; 1, &amp;quot;two&amp;quot; =&amp;gt; 2 }
hash[&amp;quot;three&amp;quot;] = 3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;修飾import&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;import java.util.HashMap as H
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;って書けます&lt;/p&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;型推論&lt;/h2&gt;

&lt;p&gt;Swingの例です。変数の型を書いてないことに注目して下さい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;import javax.swing.JFrame
import javax.swing.JButton

# FIXME blocks need to be inside a MethodDefinition, but main doesn&#39;t
# have one.
def self.run
  frame = JFrame.new &amp;quot;Welcome to Mirah&amp;quot;
  frame.setSize 300, 300
  frame.setVisible true

  button = JButton.new &amp;quot;Press me&amp;quot;
  frame.add button
  frame.show

  button.addActionListener do |event|
    JButton(event.getSource).setText &amp;quot;Mirah Rocks!&amp;quot;
  end
end

run
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;暗黙のInterface及び暗黙のabstractメソッド&lt;/h2&gt;

&lt;p&gt;先のSwingの例を良く見て下さい。この部分です。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  button.addActionListener do |event|
    JButton(event.getSource).setText &amp;quot;Mirah Rocks!&amp;quot;
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Javaだと&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;button.addactionlistener(new ActionListener(){
    public void actionPerformed(ActionEvent event){
        JButton(event.getSource).setText(&amp;quot;Mirah Rocks!&amp;quot;);
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となっていたところが、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;引数の型がインターフェースだったときはブロックで&lt;code&gt;new Class(){}&lt;/code&gt;と同じ働きになる&lt;/li&gt;
&lt;li&gt;abstractメソッドが一つのときはそれも省略出来る&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;というルールにより簡潔に書けます。これで引数の中に文が現れるという最悪の事態を回避出来ます。Java8のlambda式に近いのかな？Java8に詳しくなくてゴメンなさい。&lt;/p&gt;

&lt;p&gt;似たようなので、Threadも&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Thread.new do
 # do something
end.start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と書けます。&lt;/p&gt;

&lt;h2 id=&#34;toc_10&#34;&gt;マクロによる既存クラスの拡張&lt;/h2&gt;

&lt;p&gt;マクロは展開後のASTがJavaとして有効であれば良いのでJavaでは出来ない芸当が可能です。&lt;/p&gt;

&lt;p&gt;シンプルだけど強力な例&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;10.times{ puts &amp;quot;Hi&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;intを&lt;code&gt;times&lt;/code&gt;マクロで拡張してます。その他、&lt;code&gt;each&lt;/code&gt;などの便利マクロや&lt;code&gt;attr_accessor&lt;/code&gt;(getterとsetterを自動生成する)など色々あります。ユーザー定義のマクロで拡張も可能ですが、今シンプルに書けるシンタックスが議論中です。&lt;/p&gt;

&lt;h1 id=&#34;toc_11&#34;&gt;Javaとの互換性とか完成度とか&lt;/h1&gt;

&lt;p&gt;まだ未実装機能はいっぱいあります。&lt;code&gt;final&lt;/code&gt;とか&lt;code&gt;synchronized&lt;/code&gt;とか。あとスコープもRuby風に&lt;code&gt;private&lt;/code&gt;以下で定義されたものはprivateですがメソッド/フィールド単位では制限出来ません&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。ジェネリクスの構文もまだサポートされてません&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;のでジェネリクスの定義は不可能、使用も型推論で型を明示的に書かなくても良いときのみ可能です。インターフェースやアノテーションはあります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1t7NVsyysIlj6OF6E26OrVJ1AVrL8i2yzbMv92cdHN8c/edit#gid=0&#34;&gt;ここ&lt;/a&gt;にTODOがありますが、inner classやlambda(多分Java8のlambda式とは別もの)が弱いようです。&lt;/p&gt;

&lt;p&gt;でもまあ、Mirah自体Mirahでセルフホスティングされてますし一つ言語を作れる程度には機能は揃ってます。遊んでみる分には十分使えると思います。&lt;/p&gt;

&lt;h1 id=&#34;toc_12&#34;&gt;マクロの話&lt;/h1&gt;

&lt;p&gt;Mirahはオブジェクト指向で静的型付けの言語でマクロを実装してます。Lisper的には割と面白かったのでちょいと触れますね。&lt;/p&gt;

&lt;p&gt;まずは簡単な例から。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;macro def puts(node)
  quote {System.out.println(` [node] `)}
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lisperなら&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;macro def&lt;/code&gt;で&lt;code&gt;defmacro&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quote block&lt;/code&gt;でquasiquote&lt;/li&gt;
&lt;li&gt;バックスラッシュで囲んでunquote&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などが読み取れると思います。&lt;/p&gt;

&lt;p&gt;今のはASTは陽には出てこない簡単な例でしたが、次はちょっと飛躍しますよ？&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;macro def self.abstract(klass:ClassDefinition)
  anno = Annotation.new(@call.name.position, Constant.new(SimpleString.new(&#39;org.mirah.jvm.types.Modifiers&#39;)),
                        [HashEntry.new(SimpleString.new(&#39;flags&#39;), Array.new([SimpleString.new(&#39;ABSTRACT&#39;)]))])
  klass.annotations.add(anno)
  klass.setParent(nil)
  klass
end
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;macroにも型がある。その型はASTの型。&lt;/li&gt;
&lt;li&gt;というかClassDefinitionとかいう型がある&lt;/li&gt;
&lt;li&gt;ASTをいじるときにASTのNodeオブジェクトのメンバをゴニョゴニョするという手段がある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などが読み取れると思います。また、ClassDefinitionを受け取ってClassDefinitionを返しているのでmacro chainが可能ですね。&lt;/p&gt;

&lt;p&gt;次はASTを自分で組み立てる例です。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  macro def self.attr_reader(hash:Hash)
    methods = NodeList.new
    i = 0
    size = hash.size
    while i &amp;lt; size
      e = hash.get(i)
      i += 1
      method = quote do
        def `e.key`:`e.value`  #`
          @`e.key`
        end
      end
      methods.add(method)
    end
    methods
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NodeListがprognみたいなものでその中にMethodDefinitionを突っ込んでいってますね。中々楽しい。&lt;/p&gt;

&lt;p&gt;余談:ところでgetterメソッド名がgetKeyじゃなくてkeyになってますよね。コンパイル後は変換してくれるのかなと思い、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@foo = &amp;quot;a&amp;quot;
attr_accessor :foo =&amp;gt; :String
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;をコンパイル、ディスアセンブルしてみました。すると、&lt;code&gt;foo&lt;/code&gt;と&lt;code&gt;set_foo&lt;/code&gt;というメソッドが定義されてましたorz。Ruby的にはまあ良いんですがコンパイル後はJavaなのでそこはgetKey/setKeyにしてほしかったですね。もしかしたら今はシンボルをキャメルケースに変換出来ないのかもしれません&lt;/p&gt;

&lt;p&gt;閑話休題。また、呼び出し元の情報もとれます。これはStringの+マクロです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;macro def +(arg)
  quote { &amp;quot;#{`@call.target`}#{`arg`}&amp;quot; }
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;@call&lt;/code&gt;に呼び出し元の情報が入ってるのでそれを使って情報をとれます。&lt;/p&gt;

&lt;p&gt;gensymなんかもあります。これはintのtimesマクロです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;macro def times(block:Block)
  i = if block.arguments &amp;amp;&amp;amp; block.arguments.required_size() &amp;gt; 0
    block.arguments.required(0).name.identifier
  else
    gensym
  end
  last = gensym
  quote {
    while `i` &amp;lt; `last`
      init { `i` = 0; `last` = `@call.target`}
      post { `i` = `i` + 1 }
      `block.body`
    end
  }
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;whileの中にある&lt;code&gt;init&lt;/code&gt;と&lt;code&gt;post&lt;/code&gt;はRubyでいう&lt;code&gt;BEGIN&lt;/code&gt;と&lt;code&gt;END&lt;/code&gt;、JVM的には&lt;code&gt;for&lt;/code&gt;の実装のために使われているのでしょうか。&lt;/p&gt;

&lt;h1 id=&#34;toc_13&#34;&gt;まとめとか雑感とか&lt;/h1&gt;

&lt;p&gt;0.1.3で一番大きな変更はセルフホストされたことですね。今まではJRubyで書かれてたのでHello Worldのコンパイルに16秒とか掛かってました。今のmirahc.jarはかなり小さく、1MBちょっとしかありません。&lt;/p&gt;

&lt;p&gt;入手法はgithubから良いかんじにダウンロード出来るんじゃないですかね？（適当）&lt;/p&gt;

&lt;p&gt;古いバージョンにはMirahのコードと等価なJavaのソースを吐くオプションがありましたがコンパイラが変わってなくなりました。かつてheadiusはこの機能を使って吐いたコードをJRubyにコミットしたことがあるそうです。今新しいコンパイラが安定してきたのでそろそろ再実装されそうです。&lt;/p&gt;

&lt;p&gt;exampleですが一応私のコミットも入ってます。&lt;code&gt;grep keen NOTICE&lt;/code&gt;ってやってみて下さい。&lt;/p&gt;

&lt;p&gt;mirah-mode.elをちまちま書いてますが道程は通そうです。ブロックコメント(&lt;code&gt;/* .. */&lt;/code&gt;)がネスト可能なのですが、正規表現だと&lt;code&gt;/*/*&lt;/code&gt;を&lt;code&gt;/*&lt;/code&gt;2つと&lt;code&gt;*/&lt;/code&gt;1つと認識しちゃってつらいです。&lt;/p&gt;

&lt;p&gt;今回細かいところは省きましたがexampleとかあと公式ページとかgithubのwikiとか見て下さいね。&lt;/p&gt;

&lt;p&gt;ある程度の完成度になってきてるのでみなさんも遊んでみて下さい。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;pull-reqは入ってるのですが、まだマージされてません
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;まだリテラルの議論が終わってないだけで、内部はジェネリクスに対応してるので近い内に入りそうな気はします。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>RSPiでMongoDBを動かし、Twitter Post Alertを作った話</title>
      <link>/blog/2014/01/19/rspi-plus-mongodb-plus-twitter</link>
      <pubDate>Sun, 19 Jan 2014 00:00:00 UTC</pubDate>
      
      <guid>/blog/2014/01/19/rspi-plus-mongodb-plus-twitter</guid>
      <description>

&lt;p&gt;κeenです。ここのところ寒い日が続いてますね。寒いと家に扃(ひきこも)ってTweet数が急上昇します。 すると一日に何postしてるか気になるのでカウンタを作りました。&lt;br /&gt;
そのときの苦労話です。&lt;/p&gt;

&lt;p&gt;ただ、どうせ記録取るなら色々やりたいのでRspberry Piで一日のpost数、fav数、そしてメンヘラなことにフォロー/フォロワー全員のidを毎日記録することにしました。これで誰にリムられたかブロられたか一目瞭然ですね。&lt;/p&gt;

&lt;p&gt;ここで一つ問題が。post, fav数は良いのですがフォロー/フォロワーのid一覧は毎日変わるのでmysqlで管理するのはちょっと面倒かなと。なのでMongoDBで管理することにしたいんですが、raspbianの&lt;code&gt;apt&lt;/code&gt;にないんですよね。仕方ないので手動ビルドで対応しました。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;MongoDBのビルド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://c-mobberley.com/wordpress/index.php/2013/10/14/raspberry-pi-mongodb-installation-the-working-guide/&#34;&gt;ここ&lt;/a&gt;を参考に&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/compile
sudo apt-get install build-essential libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev scons libboost-all-dev python-pymongo git
git clone https://github.com/skrabban/mongo-nonx86
cd mongo-nonx86
sudo scons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としました。が、&lt;code&gt;scons&lt;/code&gt;に一晩かかるとのことなので放置してたら何故かraspberry piが落ちてる…&lt;br /&gt;
気をとりなおして再起動。もう一度&lt;code&gt;sudo scons&lt;/code&gt;すると今度はエラー終了。&lt;code&gt;sig 9 killed&lt;/code&gt;…いや、私なにもしてないですよ?ダメ元で今度は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo scons install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;したら完走。良ク分カラン。狂想曲感が出てますね。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;MongoDBのインストール&lt;/h2&gt;

&lt;p&gt;さっきのでインストール終わったと思うでしょ？違うんですよ。&lt;code&gt;init.d&lt;/code&gt;だとか&lt;code&gt;mongodb.conf&lt;/code&gt;だとかは配置されてないんですよ。&lt;code&gt;debian/&lt;/code&gt;以下に色々入ってるので&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd debian
sudo cp mongodb.conf /etc/mongodb.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;までは良いのですが、&lt;code&gt;init.d&lt;/code&gt;と&lt;code&gt;mongodb.upstart&lt;/code&gt;の&lt;code&gt;mongod&lt;/code&gt;のパスが&lt;code&gt;/usr/bin/mongod&lt;/code&gt;でハードコードされてるんですよ。上の&lt;code&gt;sudo scons install&lt;/code&gt;だと&lt;code&gt;/usr/local/bin/mongod&lt;/code&gt;です。さらに起動オプションに&lt;code&gt;--dbpadh /var/lib/mongodb&lt;/code&gt;と&lt;code&gt;--logpath /var/log/mongodb/mongodb.log&lt;/code&gt;が指定されていて、&lt;code&gt;mongodb.conf&lt;/code&gt;で上書きしているにも係らずそこまでのパスが存在しないとエラー吐いて起動してくれないので修正。&lt;br /&gt;
&lt;code&gt;mongodb.upstart&lt;/code&gt;は直ぐ分かるので良いとして、&lt;code&gt;init.d&lt;/code&gt;は&lt;/p&gt;

&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;
&lt;td class=&#34;gutter&#34;&gt;&lt;pre class=&#34;line-numbers&#34;&gt;&lt;span class=&#34;line-number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;6&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;7&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;8&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;9&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;&#34;&gt;&lt;span class=&#34;line&#34;&gt;48d47
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt; 
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;50c49
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt; DAEMON=/usr/bin/mongod
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;---
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; DAEMON=/usr/local/bin/mongod
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;100c99
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt; DAEMON_OPTS=&#34;$DAEMON_OPTS --config $CONF&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;---
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; DAEMON_OPTS=&#34;run --config $CONF&#34;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;な感じの修正です。なんか空行が一つ減ってますが気にしない。&lt;br /&gt;
ここまでしたらようやく&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x init.d mongodb.upstart
sudo cp init.d /etc/init.d/mongodb
sudo cp mongodb.upstart /etc/init/mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で完了です。&lt;code&gt;man&lt;/code&gt;とかもあるのですが配置の仕方が分からないので放置←&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service mongodb start
mongo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で接続確認できます。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Twitterのpostを集約する&lt;/h2&gt;

&lt;p&gt;ビックリするくらい簡単。twitterのAPI keyを持ってる前提ですが。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install twitter mongo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で必要なgemをインストールし、&lt;code&gt;~/.twitter.rb&lt;/code&gt;に&lt;/p&gt;

&lt;figure class=&#34;code&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;
&lt;td class=&#34;gutter&#34;&gt;&lt;pre class=&#34;line-numbers&#34;&gt;&lt;span class=&#34;line-number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;ruby&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;vg&#34;&gt;$client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;Twitter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;ss&#34;&gt;:REST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;n&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;consumer_key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;yours&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;n&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;consumer_secret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;yours&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;n&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;access_token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;yours&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;n&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;access_token_secret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;yours&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;と保存しておきます。昔と形式が変わりましたね。この形式になってからスレッドセーフになり、Twitter Stream APIにも対応してるようです。いつか扱ってみたい&lt;/p&gt;

&lt;p&gt;集計ですが&lt;/p&gt;

&lt;figure class=&#34;code&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;
&lt;td class=&#34;gutter&#34;&gt;&lt;pre class=&#34;line-numbers&#34;&gt;&lt;span class=&#34;line-number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;6&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;7&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;8&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;9&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;12&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;13&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;14&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;17&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;18&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;19&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;21&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;22&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;23&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;24&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;25&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;26&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;ruby&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#! /usr/local/bin/ruby&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# coding: utf-8&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;twitter&#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;mongo&#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;time&#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;nb&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;~/.twitter.rb&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;tweets&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;vg&#34;&gt;$client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tweets_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&#34;favs&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;vg&#34;&gt;$client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favorites_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&#34;followers&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;vg&#34;&gt;$client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;friend_ids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&#34;friends&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;vg&#34;&gt;$client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;follower_ids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;s2&#34;&gt;&#34;timestamp&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;%Y%m%d%H%M%S&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;Mongo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;ss&#34;&gt;:Connection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;twitter&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;tweets&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;last&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;ss&#34;&gt;:desc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;tweets_sub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;tweets&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;tweets&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;favs_sub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;favs&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;favs&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;followers_sub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;followers&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;followers&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;friends_sub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;friends&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;friends&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;前回計測(&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;%Y-%m-%d %H:%M:%S&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)以降&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tweets_sub&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;回ツイートし&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favs_sub&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;回favり&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;友達は&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;friends_sub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;人&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;friends_sub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;増え&#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;減り&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;フォロワーは&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;followers_sub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;人&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;followers_sub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;増え&#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;減り&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ました&#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;vg&#34;&gt;$client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;で全部です。Rubyのハッシュ+配列がそのままinsert/selectできるのでぜんぜんMongoDBを意識しなくて良いですね。&lt;/p&gt;

&lt;p&gt;ところで&lt;code&gt;datetime&lt;/code&gt;型が無さげだったので&lt;code&gt;timestamp&lt;/code&gt;をソートキー兼idにするために&lt;code&gt;YYYYMMDDHHMMSS&lt;/code&gt;形式の文字列で格納してます(整数は8bitまでっぽかったです)。他に良い方法があると思うのですが思いつきませんでした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MPlayerがうまく動かない</title>
      <link>/blog/2013/09/29/mplayer</link>
      <pubDate>Sun, 29 Sep 2013 00:00:00 UTC</pubDate>
      
      <guid>/blog/2013/09/29/mplayer</guid>
      <description>

&lt;p&gt;MPlayerを使ってBGMを流すコマンドを作ろうとしたときに困ったことがいくつかあったので誰か解決して下さい。&lt;/p&gt;

&lt;p&gt;スクリプトは3年前で更新がとまってる&lt;code&gt;mplayer-ruby&lt;/code&gt;を使ってRubyでmplayerを叩く方針。&lt;/p&gt;

&lt;p&gt;案の定バグに当りました。スペースの入ってるファイルをうまく処理できない。これは内部的にシェルを呼んでるのですが、そのときにシェルエスケープをしてないためです。&lt;code&gt;require &#39;shellwords&#39;&lt;/code&gt;しとけば&lt;code&gt;String#shellescape&lt;/code&gt;メソッドが追加されるので&lt;code&gt;mplayer-ruby&lt;/code&gt;の何箇所かにある&lt;code&gt;file&lt;/code&gt;を&lt;code&gt;file.shellescape&lt;/code&gt;すれば解決しました。&lt;/p&gt;

&lt;p&gt;さらにDirty Hack。複数ファイルを&lt;code&gt;load_file&lt;/code&gt;で渡してると詰まるようなので思いきって&lt;code&gt;MPlayer::Slave#initialize&lt;/code&gt;を改造して引数に再生ファイルの配列(元々はファイル名の文字列)を渡すようにしました。&lt;/p&gt;

&lt;p&gt;これで&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/KeenS/6308894.js?file=BGM&#34;&gt;&lt;/script&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby -Ku&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;&lt;em&gt;*&lt;/em&gt; coding:UTF-8 &lt;em&gt;*&lt;/em&gt;&lt;/h1&gt;

&lt;p&gt;require &amp;lsquo;mplayer-ruby&amp;rsquo;
require &amp;lsquo;libnotify&amp;rsquo;&lt;/p&gt;

&lt;p&gt;class MPlayer::Slave
  def now_playing
    summary = &amp;ldquo;&amp;rdquo;
    summary += get(:meta_title).chomp
    summary += &amp;ldquo; &amp;ndash; &amp;rdquo; + get(:meta_artist).chomp
    body = &amp;ldquo;NowPlaying&amp;rdquo;
    Libnotify.show(body: body, summary: summary)
  end
end&lt;/p&gt;

&lt;p&gt;music = &amp;ldquo;/your/path/to/music/directory/&amp;rdquo;
playlist = File.read( music + &amp;ldquo;BGM.list&amp;rdquo;).split(&amp;rdquo;\n&amp;rdquo;).map{|f| music + f }.shuffle
player = MPlayer::Slave.new playlist
player.loop
Signal.trap(:INT) {player.quit;exit}
Signal.trap(:KILL) {player.quit;exit}
player.now_playing
while line = player.stdout.gets
  player.now_playing if line =~ /playback/
end
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/p&gt;

&lt;p&gt;が動くようになりました。&lt;/p&gt;

&lt;p&gt;しかし一つ問題がありまして、再生が1曲目で止まっちゃいます。&lt;code&gt;loop&lt;/code&gt;を指定してるのにです。mplayerを直接叩いてみるに、mplayerのバグっぽい…複数ファイル指定したときは本来なら全曲1回は再生してくれるはずなのに再生しませんし&lt;code&gt;-loop 0&lt;/code&gt;オプションガン無視。今回入れたのはUbuntuのapt-getで入るやつで、バージョン(?)は「MPlayer2 UNKNOWN © 2000-2012 MPlayer Team」だそうです。&lt;/p&gt;

&lt;p&gt;Ubuntuはパッケージが古いことが往々にしてあるので冷静に自分でビルドしようとしても&lt;code&gt;fridibi&lt;/code&gt;がないとかで怒られる。&lt;/p&gt;

&lt;p&gt;どなたか解決方法御存じないですか???&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;追記&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;-loop -1&lt;/code&gt;を渡すとループしてくれました。それドキュメントと逆…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Octopressのgistプラグインが動かなかったので修正した</title>
      <link>/blog/2013/09/26/patch-to-gist-plugin</link>
      <pubDate>Thu, 26 Sep 2013 00:00:00 UTC</pubDate>
      
      <guid>/blog/2013/09/26/patch-to-gist-plugin</guid>
      <description>

&lt;p&gt;どうもGithubのgistのURLが変わってる(?)っぽくてOctopressのgistプラグインが動いてくれなかったので修正しました。&lt;/p&gt;

&lt;p&gt;Octopressの最新版でも修正されてなかったっぽいです。自分の使い方が悪かったのかなぁ…&lt;/p&gt;

&lt;p&gt;原因は生のソースコードを取ってくるときに&lt;code&gt;&amp;quot;https://raw.github.com/gist/#{gist}/#{file}&amp;quot;&lt;/code&gt;にアクセスするんですがそいつが404返すんですね。ブラウザからgistにいって”view raw”をクリックすると&lt;code&gt;&amp;quot;https://gist.github.com/#{gist_id}/#{gist}/raw/#{file}&amp;quot;&lt;/code&gt;でした。gist_idってかGithubアカウントです。この辺、挙動が怪しくて、gist_idがなくてもリダイレクトしてくれたりしてくれなかったりします。APIによって違うようです。問題の&lt;code&gt;raw&lt;/code&gt;APIはリダイレクトしてくれないので割と大きめにプラグインを書き換える必要がありました。&lt;/p&gt;

&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;
&lt;td class=&#34;gutter&#34;&gt;&lt;pre class=&#34;line-numbers&#34;&gt;&lt;span class=&#34;line-number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;6&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;7&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;8&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;9&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;12&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;13&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;14&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;17&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;18&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;19&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;21&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;22&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;23&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;24&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;25&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;26&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;27&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;28&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;29&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;30&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;32&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;33&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;34&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;35&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;36&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;37&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;38&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;39&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;40&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;41&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;42&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;43&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;44&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;45&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;46&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;47&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;48&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;49&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;50&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;51&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;52&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;53&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;54&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;55&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;56&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;57&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;58&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;59&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;60&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;61&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;62&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;63&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;64&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;65&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;66&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;67&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;68&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;69&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;70&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;71&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;72&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;73&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;74&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;75&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;76&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;77&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;78&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;79&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;80&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;81&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;82&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;83&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;84&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;85&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;86&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;87&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;88&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;89&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;90&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;91&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;92&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;93&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;94&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;95&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;96&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;97&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;98&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;99&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;100&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;101&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;102&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;103&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;104&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;105&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;106&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;107&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;108&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;109&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;110&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;111&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;112&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;113&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;114&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;115&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;116&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;117&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;118&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;119&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;120&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;121&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;122&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;123&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;124&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;125&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;126&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;127&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;128&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;129&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;&#34;&gt;&lt;span class=&#34;line&#34;&gt;diff --cc plugins/gist_tag.rb
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;index 1620345,0000000..58acd2a
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;mode 100644,000000..100644
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;--- a/plugins/gist_tag.rb
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;+++ b/plugins/gist_tag.rb
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;@@@ -1,105 -1,0 +1,105 @@@
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +# A Liquid tag for Jekyll sites that allows embedding Gists and showing code for non-JavaScript enabled browsers and readers.
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +# by: Brandon Tilly
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +# Source URL: https://gist.github.com/1027674
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +# Post http://brandontilley.com/2011/01/31/gist-tag-for-jekyll.html
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +#
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +# Example usage: //embeds a gist for this plugin
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +require &#39;cgi&#39;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +require &#39;digest/md5&#39;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +require &#39;net/https&#39;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +require &#39;uri&#39;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +module Jekyll
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + class GistTag &amp;lt; Liquid::Tag
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + def initialize(tag_name, text, token)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + super
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + @text = text
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + @cache_disabled = false
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + @cache_folder = File.expand_path &#34;../.gist-cache&#34;, File.dirname( __FILE__ )
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + FileUtils.mkdir_p @cache_folder
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + def render(context)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- if parts = @text.match(/([a-zA-Z\d]*) (.*)/)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- gist, file = parts[1].strip, parts[2].strip
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- script_url = script_url_for gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- code = get_cached_gist(gist, file) || get_gist_from_web(gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ if parts = @text.match(/([a-zA-Z]*) ([a-zA-Z\d]*) (.*)/)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ gist_id, gist, file = parts[1].strip, parts[2].strip, parts[3].strip
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ script_url = script_url_for gist_id, gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ code = get_cached_gist(gist_id, gist, file) || get_gist_from_web(gist_id, gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + html_output_for script_url, code
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + else
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + &#34;&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + def html_output_for(script_url, code)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + code = CGI.escapeHTML code
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + &amp;lt;&amp;lt;-HTML
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +&amp;lt;div&amp;gt;&amp;lt;script src=&#39;#{script_url}&#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +&amp;lt;noscript&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;#{code}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/noscript&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + HTML
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- def script_url_for(gist_id, filename)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- url = &#34;https://gist.github.com/#{gist_id}.js&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ def script_url_for(gist_id, gist, filename)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ url = &#34;https://gist.github.com/#{gist_id}/#{gist}.js&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + url = &#34;#{url}?file=#{filename}&#34; unless filename.nil? or filename.empty?
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + url
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- def get_gist_url_for(gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- &#34;https://raw.github.com/gist/#{gist}/#{file}&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ def get_gist_url_for(gist_id, gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ &#34;https://gist.github.com/#{gist_id}/#{gist}/raw/#{file}&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- def cache(gist, file, data)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- cache_file = get_cache_file_for gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ def cache(gist_id, gist, file, data)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ cache_file = get_cache_file_for gist_id, gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + File.open(cache_file, &#34;w&#34;) do |io|
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + io.write data
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- def get_cached_gist(gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ def get_cached_gist(gist_id, gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + return nil if @cache_disabled
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- cache_file = get_cache_file_for gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ cache_file = get_cache_file_for gist_id, gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + File.read cache_file if File.exist? cache_file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- def get_cache_file_for(gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ def get_cache_file_for(gist_id, gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + bad_chars = /[^a-zA-Z0-9\-_.]/
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + gist = gist.gsub bad_chars, &#39;&#39;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + file = file.gsub bad_chars, &#39;&#39;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- md5 = Digest::MD5.hexdigest &#34;#{gist}-#{file}&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- File.join @cache_folder, &#34;#{gist}-#{file}-#{md5}.cache&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ md5 = Digest::MD5.hexdigest &#34;#{gist_id}-#{gist}-#{file}&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ File.join @cache_folder, &#34;#{gist_id}-#{gist}-#{file}-#{md5}.cache&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- def get_gist_from_web(gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- gist_url = get_gist_url_for gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ def get_gist_from_web(gist_id, gist, file)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ gist_url = get_gist_url_for gist_id, gist, file
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + raw_uri = URI.parse gist_url
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + proxy = ENV[&#39;http_proxy&#39;]
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + if proxy
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + proxy_uri = URI.parse(proxy)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + https = Net::HTTP::Proxy(proxy_uri.host, proxy_uri.port).new raw_uri.host, raw_uri.port
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + else
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + https = Net::HTTP.new raw_uri.host, raw_uri.port
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + https.use_ssl = true
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + https.verify_mode = OpenSSL::SSL::VERIFY_NONE
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + request = Net::HTTP::Get.new raw_uri.request_uri
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + data = https.request request
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + if data.code.to_i != 200
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + raise RuntimeError, &#34;Gist replied with #{data.code} for #{gist_url}&#34;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + data = data.body
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;- cache gist, file, data unless @cache_disabled
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;++ cache gist_id, gist, file, data unless @cache_disabled
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + data
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + class GistTagNoCache &amp;lt; GistTag
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + def initialize(tag_name, text, token)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + super
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + @cache_disabled = true
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; + end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +end
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +Liquid::Template.register_tag(&#39;gist&#39;, Jekyll::GistTag)
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt; +Liquid::Template.register_tag(&#39;gistnocache&#39;, Jekyll::GistTagNoCache)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;なんかOctopressのブランチが面倒だったり&lt;code&gt;magit.el&lt;/code&gt;の使い方がよく分らなかったのでアレですが伝えたいことは伝わるdiffだと思います。&lt;/p&gt;

&lt;p&gt;見ての通り&lt;code&gt;gist_id&lt;/code&gt;というパラメーターを追加してリクエストURLをちょこっと書き換えただけです。この修正を加えたあとは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% gist KeenS 6688683 script.lisp %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で使えます。&lt;/p&gt;

&lt;p&gt;本当にこれでいいのかなあ…なんか違う気がするなぁ。表示もイマイチだし。けどこれしかないのだから仕方がないですね。正確な情報を持ってる方いらっしゃいましたらコメントお願いします。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;追記&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://rcmdnk.github.io/blog/2013/05/06/blog-octopress/&#34;&gt;http://rcmdnk.github.io/blog/2013/05/06/blog-octopress/&lt;/a&gt; にあるエントリを見て変更加えました。やり方は貼られてあるdiffを&lt;code&gt;*scratch*&lt;/code&gt;バッファにコピー、&lt;code&gt;M-x ediff-patch-file&lt;/code&gt;でパッチ適用しました。&lt;/p&gt;

&lt;p&gt;しかしどうもパッチの元のバージョンが古いらしく、何度もエラー出しながら手でパッチファイルを修正しました。もうちょっとパッチに慣れないとな…&lt;/p&gt;

&lt;p&gt;しかも苦労してパッチ適用したのに表示変わらないなーって思ってたらどうもCleanpressは&lt;code&gt;sass/partial&lt;/code&gt;を読み込まないようなので無駄骨でした。&lt;code&gt;sass/parts/_syntax.sass&lt;/code&gt;をひたすら様子見ながら修正しました。&lt;/p&gt;

&lt;p&gt;diffは…いいや。希望があったら晒します。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redmineのインストール</title>
      <link>/blog/2013/09/05/install-redmine</link>
      <pubDate>Thu, 05 Sep 2013 00:00:00 UTC</pubDate>
      
      <guid>/blog/2013/09/05/install-redmine</guid>
      <description>

&lt;p&gt;私はバイトではプロジェクト管理に &lt;a href=&#34;http://backlog.jp&#34;&gt;Backlog&lt;/a&gt;のサービスを利用してますが、同様のOSSに &lt;a href=&#34;http://redmine.jp&#34;&gt;Redmine&lt;/a&gt;なるものがあると聞いて動かしてみたときのメモ。&lt;/p&gt;

&lt;p&gt;以下、公式の引用。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Redmineはオープンソースのプロジェクト管理ソフトウェアです。&lt;/p&gt;

&lt;p&gt;プロジェクトのタスク管理、進捗管理、情報共有が行えます。SubversionやGitなどのバージョン管理システムとの連携機能も備えており、ソフトウェア開発やwebサイト制作などのITプロジェクトで特に威力を発揮します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Redmineの管理団体(？)が &lt;a href=&#34;http://hosting.redmine.jp/&#34;&gt;MyRedmine&lt;/a&gt;というホスティングサービスを提供してたりしますが、今回はこれをローカルで動かします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://redmine.jp/guide/RedmineInstall/&#34;&gt;公式ドキュメント&lt;/a&gt;を参考に作業していきます。&lt;/p&gt;

&lt;p&gt;まずはダウンロード。現在の最新版は2.3.2だそうです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$cd ~/Ruby
$svn checkout http://svn.redmine.org/redmine/branches/2.3-stable redmine
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;んで、グローバルの空間を汚したくないので新たにGemsetを作ります。本来ならbundler仕事なのですが、railsのバージョンとか仕組みの問題が面倒臭そうだったのでGemsetで管理。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$rvm use --create 1.9.3@redmine
$cd redmine
$echo ruby-1.9.3-p448 &amp;gt; .ruby-version
$echo redmine &amp;gt; .ruby-gemset
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで~/Ruby/redmineにcdすると自動的にrvmが1.9.3@redmineに切り替えてくれます。&lt;br /&gt;
※注意&lt;br /&gt;
&lt;code&gt;.rvmrc&lt;/code&gt;に&lt;code&gt;rvm use 1.9.3@redmine&lt;/code&gt;と書いてたら怒られます。&lt;code&gt;.ruby-version&lt;/code&gt;と&lt;code&gt;.ruby-gemset&lt;/code&gt;がバージョン管理システムに依存しない新しい書き方だそうです。&lt;/p&gt;

&lt;p&gt;データベースはデフォルトだとMySQLを使う設定になってますがこんなお試しにのためにMySQLを動かしたくないのでSQLiteに変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$cp config/{database.yml.example, database.yml}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のあと、database.ymlのproductionの部分を以下のように変更。&lt;/p&gt;

&lt;figure class=&#34;code&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;
&lt;td class=&#34;gutter&#34;&gt;&lt;pre class=&#34;line-numbers&#34;&gt;&lt;span class=&#34;line-number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;line-number&#34;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;l-Scalar-Plain&#34;&gt;production&lt;/span&gt;&lt;span class=&#34;p-Indicator&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;err&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l-Scalar-Plain&#34;&gt;adapter&lt;/span&gt;&lt;span class=&#34;p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l-Scalar-Plain&#34;&gt;sqlite3&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;err&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l-Scalar-Plain&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l-Scalar-Plain&#34;&gt;db/redmine.sqlite3&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;あとは&lt;code&gt;bundle install&lt;/code&gt;。(bundlerはインストールされてる前提です)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$bundle install --without development test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;すると…あれ？RMagickでコケる…。公式ドキュメントには &lt;code&gt;bundle&lt;/code&gt;の&lt;code&gt;--without&lt;/code&gt;に&lt;code&gt;rmagick&lt;/code&gt;を加えろと書いてますが画像扱えないのは悔しいので色々調べた結果、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo apt-get install libmagic-dev libmagickwand-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で依存関係を満せるようです。これでようやく&lt;code&gt;bundle install&lt;/code&gt;が通ります。&lt;/p&gt;

&lt;p&gt;ここまできたらあとはドキュメント通り。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$rake generate_secret_token
$RAILS_ENV=production rake db:migrate
$RAILS_ENV=production rake redmine:load_default_data
$rails s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;…あれ？&lt;code&gt;rails s&lt;/code&gt;でコケる。&lt;br /&gt;
これは自分がrailsに慣れてなかったのが問題のようで、正しくは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$rails s -e production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;だそうです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$RAILS_ENV=production rails s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としても同じ。これで &lt;a href=&#34;http://localhost:3000&#34;&gt;localhost:3000&lt;/a&gt;にアクセスするとRedmineが開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/redmine-home.png&#34; alt=&#34;Redmineのホーム画面&#34; title=&#34;redmine-home&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;因みにAdminのID、パスワードはadminだそうです。&lt;/p&gt;

&lt;p&gt;データベースの設定のexample部分にjenkinsとかいう文字列があったけど連携できるのかなぁ。要調査。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;補足&lt;/h3&gt;

&lt;p&gt;デフォルトのWEBrickだと遅いのでGemfileに&lt;/p&gt;

&lt;figure class=&#34;code&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;
&lt;td class=&#34;gutter&#34;&gt;&lt;pre class=&#34;line-numbers&#34;&gt;&lt;span class=&#34;line-number&#34;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;ruby&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;n&#34;&gt;gem&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;thin&#34;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;を加えて、&lt;code&gt;bundle install&lt;/code&gt;し直すと自動的にThinを使ってくれるそうです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rails Tutorial</title>
      <link>/blog/2013/09/03/rails-tutorial</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 UTC</pubDate>
      
      <guid>/blog/2013/09/03/rails-tutorial</guid>
      <description>&lt;p&gt;夜中にコーヒー飲むと眠れなくなりますね。昨晩もコーヒー飲んだら朝まで眠れず、寝たのが朝8時半、起きたのが16時でした。明日提出のレポート終ってないのに…&lt;/p&gt;

&lt;p&gt;さて、かなり良いRuby on Railsのチュートリアルを見付けたので紹介します。&lt;br /&gt;
 &lt;a href=&#34;http://railstutorial.jp&#34;&gt;Ruby on Rails チュートリアル：実例を使ってRailsを学ぼう&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これはただのrailsの紹介ではなくてgitだとかherokuだとかを使ってかなり実践的にアプリケーションを作ていくものです。1, 2章で軽くrailsを動かしてみたあと、3章以降でテスト駆動開発でアプリケーションを構築していきます。&lt;/p&gt;

&lt;p&gt;このテスト駆動開発の環境がすばらしいのなんのって、最初動かしたとき思わずニヤリとしました。しかも何故か(何も設定してないのに)Emacsのモードバーの色がテストの結果に応じて変わるという。&lt;br /&gt;
マウス操作もキーストロークも無くコードの正しさを教えてくれるのは非常に快適でした。&lt;/p&gt;

&lt;p&gt;文体も訳本にありがちな片言の日本語ではなく読み易いですし、Ruby自体の解説もあり、「Scaffoldを使えば簡単にできるんだぜ~」じゃなくてちゃんとMVCの関係とかを解説して身に付いた上で「今後はScaffoldでより手軽に作れるよ」なのでRailsに限らずWeb開発のチュートリアルとして秀逸でした。&lt;/p&gt;

&lt;p&gt;私もまだ5章までしか進めてないのですが是非一度試してみて下さい&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>