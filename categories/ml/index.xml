<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ML on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/ml/</link>
    <description>Recent content in ML on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 16 Sep 2018 01:26:15 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/ml/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Inside Pattern Matchings</title>
      <link>//KeenS.github.io/slide/inside_pattern_machings/</link>
      <pubDate>Sun, 16 Sep 2018 01:26:15 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/inside_pattern_machings/</guid>
      <description># Inside Pattern Matchings ---------------------- [ML Day #2](https://ml-lang.connpass.com/event/94284/) === # About Me --------- ![κeenのアイコン](/images/kappa.png) * κeen * [ちゅーんさんだよー](https://</description>
    </item>
    
    <item>
      <title>関数適用、関数から評価するか？引数から評価するか？</title>
      <link>//KeenS.github.io/blog/2018/02/24/kansuutekiyou_kansuukarahyoukasuruka_hikisuukarahyoukasuruka/</link>
      <pubDate>Sat, 24 Feb 2018 01:26:59 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2018/02/24/kansuutekiyou_kansuukarahyoukasuruka_hikisuukarahyoukasuruka/</guid>
      <description>&lt;p&gt;κeenです。簡単にいうと「OCamlが関数の引数を右から評価する件について」。&lt;/p&gt;

&lt;p&gt;これは他人から聞いた話なのですがよく目にするので文章として纏めておきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SMLのエコシステム（？）</title>
      <link>//KeenS.github.io/blog/2017/12/24/smlnoekoshisutemu___/</link>
      <pubDate>Sun, 24 Dec 2017 21:18:14 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/12/24/smlnoekoshisutemu___/</guid>
      <description>&lt;p&gt;κeenです。
どこかで紹介したつもりでしたが意外に書いてなかったのでSMLのツールとかそういうのを紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>1ML - コア言語とモジュール言語の統合</title>
      <link>//KeenS.github.io/slide/1ml___koagengotomoju_rugengonotougou/</link>
      <pubDate>Sun, 24 Sep 2017 23:23:57 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/1ml___koagengotomoju_rugengonotougou/</guid>
      <description># 1ML - コア言語とモジュール言語の統合 ---------------------- [型システム論文読書会 Vol.1 - connpass](https://connpass.com/event/63454/) === # About Me --------- ![κeenのアイコン](/images/kappa.png) *</description>
    </item>
    
    <item>
      <title>最近のSML#の話題</title>
      <link>//KeenS.github.io/slide/saikinnosml_nowadai/</link>
      <pubDate>Mon, 17 Jul 2017 21:04:57 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/saikinnosml_nowadai/</guid>
      <description># 最近のSML#の話題 ---------------------- [ML勉強会 #2 - connpass](https://ml-lang.connpass.com/event/58151/) === # About Me --------- ![κeenのアイコン](/images/kappa.png) * κeen * [@blackenedgold](https://twitter.com/blackenedgold) * Github: [KeenS](https://github.com/KeenS) * [Idein I</description>
    </item>
    
    <item>
      <title>SMLで函数型的正規表現マッチ</title>
      <link>//KeenS.github.io/slide/smldekansuukatatekiseikihyougenmatchi/</link>
      <pubDate>Tue, 29 Mar 2016 01:44:39 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/smldekansuukatatekiseikihyougenmatchi/</guid>
      <description># SMLで函数型的正規表現マッチ ---------------------- === # About Me --------- ![κeenのアイコン](/images/icon.png) + κeen + [@blackenedgold](https://twitter.com/blackenedgold) + Github: [KeenS](https://github.com/KeenS) + サイバーエージ</description>
    </item>
    
    <item>
      <title>SML#のpthreadバインディング作った</title>
      <link>//KeenS.github.io/blog/2016/01/11/sml_nopthreadbaindingutsukutta/</link>
      <pubDate>Mon, 11 Jan 2016 00:57:20 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/01/11/sml_nopthreadbaindingutsukutta/</guid>
      <description>&lt;p&gt;κeenです。またしても深夜になってしまいましたがSML#のpthreadバインディングを作ったのでその報告を。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ATS2の観が整理出来た</title>
      <link>//KeenS.github.io/blog/2016/01/01/ats2nokangaseiridekita/</link>
      <pubDate>Fri, 01 Jan 2016 18:52:56 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2016/01/01/ats2nokangaseiridekita/</guid>
      <description>&lt;p&gt;κeenです。ATS2には3つの世界があります。動的な世界、静的な世界、証明の世界。
&lt;a href=&#34;//KeenS.github.io/blog/2015/12/29/ats2noizongatawotsukatteavlki/&#34;&gt;前回&lt;/a&gt;の記事では静的な世界を色々扱ってみました。
今回は証明の世界である観について少し。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ATS2の依存型を使ってAVL木</title>
      <link>//KeenS.github.io/blog/2015/12/29/ats2noizongatawotsukatteavlki/</link>
      <pubDate>Tue, 29 Dec 2015 23:40:45 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2015/12/29/ats2noizongatawotsukatteavlki/</guid>
      <description>&lt;p&gt;κeenです。少しばかりATS2を触ってみたので成果報告でも。&lt;/p&gt;

&lt;p&gt;AVL木は左右のノードの高さが高々1しか違わない平衡二分木です。OCamlやSMLでナイーブに実装すると本当に1しか違わないことを保証するのは難しく、精々テストなどで部分的に検査するだけです。&lt;/p&gt;

&lt;p&gt;ところがSMLに似た文法を持つATS2には依存型があり、左右のノードの高さが高々1しか違わないことを型で保証出来ます。
つまり、左右のノードの高さが2以上違う木を作ろうとしてもコンパイルエラーになるのでコンパイルが通れば高さについてはバグがないこと保証されます。&lt;/p&gt;

&lt;p&gt;そういうAVL木を使ってTreeSetを作ってみたので紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SML#とCプリプロセッサの連携</title>
      <link>//KeenS.github.io/blog/2015/12/26/sml_tocpuripurosessanorenkei/</link>
      <pubDate>Sat, 26 Dec 2015 20:09:24 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2015/12/26/sml_tocpuripurosessanorenkei/</guid>
      <description>&lt;p&gt;κeenです。Advent Calendarのためにネタやアイディアを用意したものの時間/場所的都合でAdvent Calendarとして出せなかったボツネタでも供養しようかと。
Advent Calendarが終わってしまったので投げやり気味ですね。
第3段はSML#とCプリプロセッサで連携する話。&lt;/p&gt;

&lt;p&gt;SML#のC FFIを使ってるとマクロで定義された値などを触りたくなるのですが、触れないのでどうにかしようかと。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SML#のオレオレREPLを作る話 初級</title>
      <link>//KeenS.github.io/blog/2015/12/26/sml_nooreorereplwotsukuruhanashi_shokyuu/</link>
      <pubDate>Sat, 26 Dec 2015 19:48:30 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2015/12/26/sml_nooreorereplwotsukuruhanashi_shokyuu/</guid>
      <description>&lt;p&gt;κeenです。Advent Calendarのためにネタやアイディアを用意したものの時間/場所的都合でAdvent Calendarとして出せなかったボツネタでも供養しようかと。
Advent Calendarが終わってしまったので投げやり気味ですね。
第2段はSML#のオレオレREPLを作る話の初級。&lt;/p&gt;

&lt;p&gt;SML#にはFFIがあり、任意のオブジェクトファイル/ライブラリをリンクしてC関数を呼び出すことが出来ますが、REPLで試そうとしてもREPLにリンクされていないので呼び出せません。
そこで呼び出したいオブジェクトファイルをリンクしたREPLを作れば捗るよね、という発想です。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>