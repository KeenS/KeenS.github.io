<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>マクロ on κeenのHappy Hacκing Blog</title>
    <link>/categories/%E3%83%9E%E3%82%AF%E3%83%AD/</link>
    <description>Recent content in マクロ on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 17 Feb 2018 15:15:07 +0900</lastBuildDate>
    
	<atom:link href="/categories/%E3%83%9E%E3%82%AF%E3%83%AD/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>マクロクラブ Rust支部</title>
      <link>/blog/2018/02/17/makurokurabu_rustshibu/</link>
      <pubDate>Sat, 17 Feb 2018 15:15:07 +0900</pubDate>
      
      <guid>/blog/2018/02/17/makurokurabu_rustshibu/</guid>
      <description>&lt;p&gt;マクロ・クラブのルール&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;マクロを書くな&lt;/li&gt;
&lt;li&gt;それがパターンをカプセル化する唯一の方法ならば、マクロを書け&lt;/li&gt;
&lt;li&gt;例外: 同等の関数に比べて、 呼び出し側が楽になるならば、マクロを書いても構わない&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>マクロやコンパイラプラグインの実装方法色々</title>
      <link>/blog/2016/12/01/makuroyakonpairapuraguinnojissouhouhou/</link>
      <pubDate>Thu, 01 Dec 2016 13:29:52 +0900</pubDate>
      
      <guid>/blog/2016/12/01/makuroyakonpairapuraguinnojissouhouhou/</guid>
      <description>&lt;p&gt;このエントリは&lt;a href=&#34;http://qiita.com/advent-calendar/2016/lang_dev&#34;&gt;言語実装 Advent Calendar 2016 - Qiita&lt;/a&gt;2日目の記事です。&lt;/p&gt;

&lt;p&gt;κeenです。マクロなどのコンパイル時に何か処理をしてコード生成する機構の実現方法が言語によって様々にあるなぁと思ったのでちょっと探ってみます&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
