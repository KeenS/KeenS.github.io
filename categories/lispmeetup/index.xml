<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lispmeetup on κeenのHappy Hacκing Blog</title>
    <link>/categories/lispmeetup/</link>
    <description>Recent content in Lispmeetup on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 28 Nov 2016 15:41:36 +0900</lastBuildDate>
    
	<atom:link href="/categories/lispmeetup/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SchemeでClassとProtocol</title>
      <link>/slide/schemedeclasstoprotocol/</link>
      <pubDate>Mon, 28 Nov 2016 15:41:36 +0900</pubDate>
      
      <guid>/slide/schemedeclasstoprotocol/</guid>
      <description># ClassとProtocol ---------------------- [Lisp Meet Up presented by Shibuya.lisp #46](https://lisp.connpass.com/event/45517/) Scheme回 === # About Me --------- ![κeenのアイコン](/images/icon.png) * κeen * [@blackenedgold](https://twitter.com/blackenedgold) * Github: [KeenS](https://github.com/KeenS) * サイバーエージェントのエンジニア * Lisp, ML, Rust, Shell Scriptあたりを書きます === # Class ------- * ここでは単に値の集合を表わす * `new` のように新しいインスタンスを作る機能はつけない * ほとんど型と同じ機能 * 唯一の機能 `instance?` を持つ === ``` scheme (instance? 3 ) ; = #t (instance? &#34;foo&#34; ) ; = #f ``` === # Classの実装 ------------- * 事実上述語があればいい * [詳細](https://github.</description>
    </item>
    
  </channel>
</rss>