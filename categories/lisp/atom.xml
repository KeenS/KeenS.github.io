<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lisp | κeenのHappy Hacκing Blog]]></title>
  <link href="http://KeenS.github.io/categories/lisp/atom.xml" rel="self"/>
  <link href="http://KeenS.github.io/"/>
  <updated>2014-07-30T01:49:03+09:00</updated>
  <id>http://KeenS.github.io/</id>
  <author>
    <name><![CDATA[κeen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lisp Meet Up #19でLTしてきました]]></title>
    <link href="http://KeenS.github.io/blog/2014/07/30/lisp-meet-up-number-19/"/>
    <updated>2014-07-30T00:30:40+09:00</updated>
    <id>http://KeenS.github.io/blog/2014/07/30/lisp-meet-up-number-19</id>
    <content type="html"><![CDATA[<p>κeenです毎月恒例の<a href="https://atnd.org/events/53246">Lisp Meet Up presented by Shibuya.lisp</a>でLTしてきたのでレポートです。</p>

<!-- more -->


<p>今回は募集20に対して参加登録20、参加18、LT4本と集りの良い会でした。</p>

<p>自己紹介ではほぼCLの人ばっかりでした。珍しいところ（？）では数理システムの方が居たり会場を提供して下さってるサイバーエージェントの方が覗きにきてたり。</p>

<p>LT1本目はTOYOZUMIさんから連作の一つのCommon Lisp最適化発展。画像のエッジ検出をするときの関数の最適化の話でした。カーネルを渡すだけで最適なコードを生成するそうです。コーナーケースのif式をループの外に追い出してたりと半分成程、あとはよく分かんない話してるなーって。<br/>
最終的には<code>eval</code>を使ってるらしく、本当に速度出るの？って気になりましたが本人もやってみたところ速くなってビックリだったそうです。</p>

<p>スライドはこちら。</p>

<iframe src="//www.slideshare.net/slideshow/embed_code/37456264" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/toyozumiKouichi/common-lisp-37456264" title="Common lisp最適化発展" target="_blank">Common lisp最適化発展</a> </strong> from <strong><a href="http://www.slideshare.net/toyozumiKouichi" target="_blank">Toyozumi Kouichi</a></strong> </div></p>

<p>動画は今回から私が担当なので処理が終ったらリンク張ります。</p>

<p>次はTakagiさんよりcl-cudaについて。話聞く前は「どうせC APIをCFFIで叩いただけだろ(ホジ」って思ってましたがさすがにGPGPUはそんなに簡単じゃなかったようです。
cl-cudaはLispのAPIを叩いたらCUDA向けのCコードを吐いてCUDA専用のコンパイラ通してモジュールとして動的に読み込んで、ってやってくれるそうです。すごい。
完成度も、CUDAを研究に使ってたchikuさんによると普通使う分にはほぼ困らなくて、あとは構造体のサポートがあれば良いかも程度だそうです。すごい。</p>

<p>スライドはまだ見付けてないです。</p>

<p>3番目は私から、WebブラウザベースのIDE、<a href="https://c9.io/">Cloud9</a>の紹介とLispの対応状況について。
スライドはこのブログに載せてますが、こちら</p>

<p><a href="http://keens.github.io/slide/cloud-9.html">Cloud 9の紹介 | κeenのHappy Hacκing Blog</a></p>

<p>もうちょっと説明が欲しそうな雰囲気だったので別記事立てますね。@potix2さんが社内チャットに流したところなり反応が良かったようなので普通にIDEとして優れてるんじゃないでしょうか。</p>

<p>最後はかにたん(@kazh98)から床下からLispが出てきた話。うん。本当に床下からLispが出てきた話でした。かにたんの研究室すごいですね。みなさんの家の床下にもLispがあるかもしれませんよm9っ。</p>

<p>最後の最後にかにたんの研究室から出てきたLispについてTOYOZUMIさんがモニタをスクリーンに映しつつみんなで色々議論。なんかWEBのマニュアルがポルトガル語で書かれてたのでポルトガル語喋れる人捜したけど居なかったり。次回、床下Lispを動かしてみようってなりました。</p>

<p>そこでもう閉場の時間だったので懇親会へ。11名が参加。</p>

<p>私とかにたんとpotix2さんがschemeの実装の話してたり@mhkojiさんがhunchentootがありえないくらい遅いって話してたり色々でしたね。
CIMの話も出てました。実用上Windowsサポートは外せないってことで@snmstsさんがCでCIMを書き直してるだとか@nitro_idiotさんがshellyでCIMを使うにあたってCIM側でコアのマネジメントして欲しいって言ってただとか。</p>

<p>C CIMは面白そうですね。ビルドしなきゃいけないから手軽さの問題が…とかlibcurlに依存するとLinuxが…とか言ってたら「ディストリのパッケージシステムに乗せてしまえば問題無い」と一刀両断。その発想はなかった。むしろパッケージシステムに入った方が手軽。</p>

<p>今からCloud9の記事とCIMのコアマネジメント頑張りますね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloud 9の紹介]]></title>
    <link href="http://KeenS.github.io/slide/cloud-9.html"/>
    <updated>2014-07-29T01:29:00+09:00</updated>
    <id>http://KeenS.github.io/slide/cloud-9.markdown</id>
    <content type="html"><![CDATA[<h1>Cloud 9の紹介</h1>

<hr />


<p>Lisp Meet Up #19 presented by Shibuya.lisp<br/>
κeen(@blackenedgold)</p>

<h2>自己紹介</h2>

<hr />


<ul>
<li>κeen</li>
<li>東大数学科の4年生</li>
<li>ソーシャルアカウントは上のアイコン達から。</li>
<li>Lisp, Ruby, OCaml, Shell Scriptあたりを書きます</li>
</ul>


<h2>Lispがあまり使われない原因</h2>

<hr />




<ul>
<li class="fragment">認知度が低い</li>
<li class="fragment"><strong>開発環境構築の難易度高い</strong></li>
</ul>


<h2>Cloud 9について</h2>

<hr />


<ul>
<li>WEBベースのIDEサービス</li>
<li>40以上の言語に対応（らしい）</li>
<li>この間正式リリース</li>
<li>1アカウント毎に1Docker環境与えられる</li>
<li>IDEはオープンソース</li>
<li>よく分かってない</li>
</ul>


<h2>こんなん</h2>

<p><img src="http://KeenS.github.io/images/cloud9/login.png" alt="ログイン画面" /></p>

<p><img src="http://KeenS.github.io/images/cloud9/dashboard.png" alt="ダッシュボード" /></p>

<p><img src="http://KeenS.github.io/images/cloud9/workspace.png" alt="ワークスペース" /></p>

<p><img src="http://KeenS.github.io/images/cloud9/lookandfeel.png" alt="こんなかんじ" /></p>

<p><img src="http://KeenS.github.io/images/cloud9/CIMworks.png" alt="CIMも動く" /></p>

<p><img src="http://KeenS.github.io/images/cloud9/clworks.png" alt="CLもRun出来る" /></p>

<h2>デモ</h2>

<h2>良いところ</h2>

<hr />


<ul>
<li>難易度低い</li>
<li>Lisp環境動く</li>
<li>Githubとの連携</li>
<li>どこからでも同じ環境にアクセス</li>
<li>キーバインドはうれしい各宗教対応の<br/>
{Mac, Windows}x{Default, Emacs, Vim, Sublime}</li>
</ul>


<h2>微妙なところ</h2>

<hr />


<ul>
<li>シンタックスハイライト微妙<br/>
（せめてキーワード引数はどうにか）</li>
<li>補完微妙</li>
<li>インデント微妙</li>
<li>swank使いたい</li>
</ul>


<p><span style="font-size:600%">以上</span><br/>
何か質問あればどうぞ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(S式で書く(altJS)達)]]></title>
    <link href="http://KeenS.github.io/slide/sshi-deshu-kualtjs.html"/>
    <updated>2014-07-13T21:17:00+09:00</updated>
    <id>http://KeenS.github.io/slide/sshi-deshu-kualtjs.markdown</id>
    <content type="html"><![CDATA[<h1>(S式で書く(altJS)達)</h1>

<p>&lt;2014-06-08 日><br/>
κeen(@blackenedgold)<br/>
天下一altJS武闘会(#tenka1altJS)<br/>
@渋谷プライムプラザ四階</p>

<h2>自己紹介</h2>

<ul>
<li>κeen</li>
<li>東大数学科の4年生</li>
<li>Twit : @blackenedgold</li>
<li>Github : KeenS</li>
<li>Blog : <a href="http://KeenS.github.io/">κeenのHappy Hacκing Blog</a></li>
<li>Shibuya.lispにいます。(2014-06〜運営になりました)</li>
<li>Lisp, Ruby, OCaml, Shell Scriptあたりを書きます</li>
</ul>


<h2>お品書き</h2>

<ul>
<li>(ボツ) Shen.js</li>
<li>(ボツ) Embedable Common Lisp with Emscripten</li>
<li>(ボツ) Picrin with Emscripten</li>
<li>(ボツ) オレオレaltJSの作り方の話</li>
<li>ParenScript</li>
</ul>


<h2>Shen.js</h2>

<p>Shenの公式ページより</p>

<ul>
<li>パターンマッチ</li>
<li>λ計算ベース</li>
<li>マクロ</li>
<li>遅延評価も可能</li>
<li>静的型検査</li>
<li>関数的なPrologの統合</li>
<li>ビルトインコンパイラコンパイラ</li>
</ul>


<p>これのJS実装もある。</p>

<h3>例</h3>

<p><code>lisp
(define factorial
  0 -&gt; 1
  X -&gt; (* X (factorial (- X 1))))
</code></p>

<p>そもそもaltJSじゃない…</p>

<p>ボツ</p>

<h2>ECL with Emscripten</h2>

<ul>
<li>ANSI Common Lisp準拠のCommon Lisp処理系</li>
<li>LispをコンパイルしてCを吐く</li>
<li>Emscriptenでコンパイルすれば…</li>
</ul>


<p><code>#include &lt;ecl/ecl-cmp.h&gt;</code>
が悪さをしてコンパイル出来ない</p>

<p>ボツ</p>

<h2>picrin</h2>

<ul>
<li>R7RS small準拠を目指すScheme処理系</li>
<li>R7RS準拠の中では唯一Emscriptenで
コンパイル出来るらしい</li>
<li>SDLもEmscriptenで動くらしいから
組み合わせればウハウハじゃね？</li>
</ul>


<p>コンパイル出来ない…
( <code>va_args</code> は64bit x Clang3.3では
コンパイル出来ないとか言われる。回避策も効かない)</p>

<p>ボツ</p>

<h2>オレオレaltJSの作り方の話</h2>

<p>escodegenを使う
```javascript
{</p>

<pre><code>type: 'BinaryExpression',
operator: '+',
left: { type: 'Literal', value: 40 },
right: { type: 'Literal', value: 2 }
</code></pre>

<p>}
→40 + 2
```</p>

<p>オレオレaltJS(S式)<br/>
 ↓ read<br/>
リスト<br/>
 ↓ 変換  (find-file &ldquo;~/Lisp/translate.lisp&rdquo;)<br/>
リスト<br/>
 ↓ cl-json<br/>
JSON<br/>
 ↓ escodegen<br/>
JS</p>

<p>escodegenのドキュメントがあんまりない…</p>

<p>ボツ</p>

<h2>ParenScript</h2>

<ul>
<li>Common Lisp製</li>
<li>Weblocks(WAF)に採用されるなどの実績/伝統</li>
<li>Common LispのサブセットをJSにコンパイル</li>
<li>実際はCommon Lispのマクロなので
Common Lispに組み込んで使える</li>
<li>ランタイムライブラリは必要ない</li>
<li>Lispを無理矢理変換するというより
LispっぽくJSを書ける感じ</li>
</ul>


<h3>例</h3>

<p>~/Lisp/parenscript.lisp</p>

<ul>
<li><code>(@ obj property)</code> でプロパティ参照</li>
<li><code>(chain obj function/property)</code> でメソッドチェーン
など</li>
</ul>


<p>以上</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lisp Meet Up #16 でLTしてきました。]]></title>
    <link href="http://KeenS.github.io/blog/2014/04/25/lisp-meet-up-number-16/"/>
    <updated>2014-04-25T01:35:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2014/04/25/lisp-meet-up-number-16</id>
    <content type="html"><![CDATA[<p>κeenです。年度末/年度始めで色々あり、しばらく更新できてませんでしたが <a href="http://atnd.org/events/49370">Lisp Meet Up Presented by Shibuya.lisp #16</a>に参加してきたのでレポートです。</p>

<!-- more -->


<p>最近はLisp Meet Upも盛況で毎回ほぼ満席ですね。今回も満席でした。というか立ち見出てました。</p>

<p>自己紹介では初参加の方が多くてCLerが多い印象でした。昔研究とかでCL使ってて久し振りに、とか。私個人的にはTwitterでフォローしてる方々とお会い出来て楽しかったです。</p>

<p>LTは私とTOYOZUMIさんが告知してました。しかしTOYOZUMIさんは当日体調が悪くて欠席したので私と飛び入りのchikuさんで計2件のLTがありました。TOYOZUMIさんは何回かに分けて発表するうちの1回だったので次回LTしていただけるかと思います。</p>

<p>私のやつは↓です。時間ギリギリで作ったのであんまりいじめないで下さい。因みにまだソースはgithubに上げてないです（後述）</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/33794330" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <strong><a href="https://www.slideshare.net/blackenedgold/lisp-meetup16" title="CL21で色々なデータ構造を実装してみようとした">CL21で色々なデータ構造を実装してみようとした</a></strong> from <strong><a href="http://www.slideshare.net/blackenedgold">blackenedgold</a></strong></p>

<p>会場からはCL21作者のにとりさんから「abstract-sequenceは最低限実装しなきゃいけないメソッドは少ない」との指摘がありましたがqueueとして機能するために色々頑張ったのです。</p>

<p>abstract-setとかは欲しいですねとの声もありました。issueに上げておきますかな</p>

<p>また、chikuさんからheapの実装について色々と指摘があり、 <a href="http://www.amazon.co.jp/%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%82%A4%E3%83%B3%E3%83%88%E3%83%AD%E3%83%80%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3-%E7%AC%AC3%E7%89%88-%E7%B7%8F%E5%90%88%E7%89%88-%E4%B8%96%E7%95%8C%E6%A8%99%E6%BA%96MIT%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%B3%E3%83%AB%E3%83%A1%E3%83%B3/dp/476490408X">Introduction to Algorithms</a>という本を紹介されました。とりあえず大学の図書館から借りてきたのでそれを読んだらcl21-data-collectionsに手を加えてgithubに上げます。</p>

<p>次はchikuさんから <a href="https://github.com/chiku-samugari/chiku.util">chiku-utils</a>というオレオレライブラリの紹介がありました。スライドは見付け次第貼りますね。結構便利そうな関数やマクロがあったので一度見てみると良いかもしれません。</p>

<p>その後は休憩からのぐだぐだ時間でした。chikuさんの発表の中で出てきた<code>keymin</code>という関数について会場から一般的には<code>argmin</code>と言うとの指摘があり、その場でかにたんが<code>argmin</code>の定義の数式を書いたことから私とかにたんとラジカルこうじさんでマスハラをしあってました。というか主にかにたんがマスハラしてました。Lispの話はあまりしませんでしたね… あとは私がゼミで <a href="http://www.amazon.co.jp/gp/product/0124077269/ref=oh_details_o00_s00_i00?ie=UTF8&amp;psc=1">パタヘネ</a>を読んでることからパタヘネってC言語の入門書だよねとかの会話とか。StumpWMについてもちょっと話したかな？</p>

<p>そうだ。次回のScheme回は <a href="https://bitbucket.org/ktakashi/sagittarius-scheme/overview">Sagittarius</a>の作者のKeiさんが次回LTする気満々とのことで話題に上がってました。それに <a href="https://github.com/wasabiz/picrin">picrin</a>の作者のわざびず君も来るかもとかですしTOYOZUMIさんの連作もありますし次回は長くなるか2回に分けるかになるかもしれません。</p>

<p>その後の懇親会は9人が参加でしたがアルコールを飲む方はあまりいませんでしたね。飲んでたのは3~4人かな?多くの方が普通にお酒に弱いだとかバイクで来てるだとか次の日仕事があるとかですね。もう普通に食事でも良いのでは。私のいたテーブルでの会話は佐野さんがLispの本をめっちゃ持ってるだとかでしたね。実践Common Lispを訳者ということを割り引いても多いくらい持ってるそうです。CLtL2とかもめっちゃ持ってるそうです。謎ですね。</p>

<p>今回のまとめ</p>

<ul>
<li>かにたんをホワイトボードに近付けてはいけない</li>
</ul>


<p>最後になりますがイベント管理や会場手配など運営の方々ありがとう御座いまいした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lisp Meet Up #14でLTしてきました]]></title>
    <link href="http://KeenS.github.io/blog/2014/02/27/lisp-meet-up-number-14/"/>
    <updated>2014-02-27T14:57:00+09:00</updated>
    <id>http://KeenS.github.io/blog/2014/02/27/lisp-meet-up-number-14</id>
    <content type="html"><![CDATA[<p>どうも、κeenです。Rubyをアップグレードしようとしたら<code>rvm</code>が動かなくて、あれ？ってなったら私が<code>echo -&gt; echo</code>とかいう謎のsymlinkを作ってたせいでした。このブログはOctopressで作ってるのでその間更新遅れました。</p>

<p>さて、毎月恒例 <a href="http://atnd.org/events/47730">Lisp Meet Up Presented by Shibuya.lisp #14</a>でLTしてきたので報告です。今回は「Real World OCamlを読んだ感想」というタイトルです。</p>

<!-- more -->


<p>まあ、感想とは言っても内容を軽く紹介したあとにLispにインポートしてみたという内容です。</p>

<p>今回はいつも以上にスライドが説明不足なのでどうにか頑張ってUstreamを探して下さい</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/31658546" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <strong><a href="https://www.slideshare.net/blackenedgold/real-world-ocamllisp" title="Real World OCamlを読んでLispと協調してみた">Real World OCamlを読んでLispと協調してみた</a></strong> from <strong><a href="http://www.slideshare.net/blackenedgold">blackenedgold</a></strong></p>

<p>会場からはquicksortの例がメモリ使用量的にquicksortとは言えないとか怒られました。あとは<code>append</code>が演算子<code>@</code>で書けちゃうとコスト高いのにみんな頻繁に使っちゃうんじゃないかとかのツッコミもありました。</p>

<p>Meet Up自体は自己紹介から始まりました初めての参加の方が14人中3人だったかな？もっと増えると嬉しいですね。京都から来た博士過程の方とか「ハッカーと画家」を読んでLispに興味を持った方とかが居ました。</p>

<p>で、私のLTは上の通り。前述の通りUstreamでも流されてます。</p>

<p>次はかにたん(@kazh98)さんから。かにたんここ2ヶ月くらいMeet Upで見掛けないなと思ってたら数学の論文に”Gauche”って文字列を入れる仕事をしてたようです。LTはRacketの新バージョンの機能FFIを使って線形代数ライブラリのバインディングを作る話でした。ジョーク飛しながら軽快に喋ってて楽しかったです。スライドはこちら。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/31635279" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <strong><a href="https://www.slideshare.net/kazh98/racket-31635279" title="すべてをRacketに取り込もう！ ~Racket FFI と Package システムの使い方~">すべてをRacketに取り込もう！ ~Racket FFI と Package システムの使い方~</a></strong> from <strong><a href="http://www.slideshare.net/kazh98">Kazuhiro Hishinuma</a></strong></p>

<p>そのあとは休憩からのぐだぐだタイムで私はCommon Lisperで <a href="http://cl21.org/">CL21</a>の<code>lambda</code>の略称を考えてたりしました。私は<code>^</code>良いと思うんですけど英字キーボードだと<code>S-6</code>なので押しにくいそうです。<code>fn</code>は<code>function</code>の略称っぽくてダメという話。<code>function</code>はCommon Lispでは既に別の意味がありますからね。</p>

<p>懇親会では私含めて就活生が二人居るので就活の話になりましたがLisperってまともな就活してないんですね…<br/>
大学中退してバイト先に就職した、友達の始めたベンチャーに参加してから今の職場に転職した、就活せずにふらふらしてたらShibuya.lispでLispの求人があったからそこに行った…。</p>

<p>そういえばまた隣がにとりさんだったので最近何やってますかと訊いたら<code>Utopian</code>に向けて着々と準備進めてますとの返事をいただきました。まだ計画あったんですねと返すと</p>

<blockquote><p>昨日「Utopianってまだ計画あったんですね」って言われたけど、3年前からClack、Caveman、ningle、CL-DBI、SxQL、Caveman2、Integralってずっとリリースし続けてるのは全部Utopianの為ですよ</p>

<p>— 深町英太郎 (fukamachi) (@nitro_idiot) <a href="https://twitter.com/nitro_idiot/statuses/438909695881797632">2014, 2月 27</a><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p></blockquote>

<p>とのこと。私もUtopianの下地を作るためにRubyにあってLispにないものを色々考えてたので色々話してたらCL21のコミット権もらっちゃいました。私はライブラリ(DateTimeとかQueueなどのデータ構造とか)を整備したいのですがそれらは0.2で追加される予定だそうなので今はissue潰しですかね。</p>

<p>まあ、そんなところです。そういえばClojureの会社に潜入したといういちせさん(＠ichisemasashi)にどんな感じか訊くの忘れてましたね…まあ、次回もいらっしゃるでしょうから次回訊けば良いですかね。</p>
]]></content>
  </entry>
  
</feed>
