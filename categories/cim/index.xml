<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CIM on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/cim/</link>
    <description>Recent content in CIM on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 29 Jan 2017 22:18:24 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/cim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deprecating CIM</title>
      <link>//KeenS.github.io/blog/2017/01/29/deprecating_cim/</link>
      <pubDate>Sun, 29 Jan 2017 22:18:24 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/01/29/deprecating_cim/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m κeen. I have a sad news, I&amp;rsquo;ll stop the development of &lt;a href=&#34;https://github.com/KeenS/CIM&#34;&gt;CIM&lt;/a&gt; and no more updates for new lisp impls will be provided.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introduction to CIM</title>
      <link>//KeenS.github.io/slide/introduction-to-cim/</link>
      <pubDate>Sat, 30 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/slide/introduction-to-cim/</guid>
      <description># Introduction to CIM κeen(@blackenedgold) ## 突然ですが Common Lispのスクリプトファイルの実行方法知ってますか？ sbcl sbcl --script $file ecl ecl -shell $file ccl ccl -e $file -e &#39;(quit)&#39; ... シバン可搬性のあるスクリプトが書けない ## そこで、こんなの書きました ```sh case &#34;$LISP_IMPL&#34; in sbcl*) sbcl --script $1 ;; clisp*) clisp -on-error exit -i $1 ;; ecl*) ecl -shell $1 ;; ccl*) ... ``` ## でも問題がある * どの処理系をバックエンドに使うか * 処理系のパスをどう捜すか * そもそもどうやって使ってもらうか ## κeenの答え  処理系の管理までやってしまおう。  そうしたら一緒に使ってもらえる。 ＿人人人人人人＿ ＞　CIMの誕生　＜ ￣Y^Y^Y^Y^Y￣ ## CIMとは * Common Lisp Implementation Manager * ちむ * Rubyのrvmを強く意識 * Common Lisp処理系のインストール、切り替え、コマンドラインインターフェースなど。 * `cim`、 `cl`、 `ql`コマンドから成る * B Shell スクリプト製(マルチプラットフォーム対応のため) * 2013/10くらいからぼちぼち開発 ## `cim`コマンドについて インストール cim install sbcl バックエンドの切り替え cim use sbcl 現在情報 cim info CIMのアップデート cim get など。 ## `cl`コマンドについて * 最初に紹介したシェルスクリプトベース * コマンドラインからCommon Lispを使うことを重視 * シバン対応も。 * REPLは独自実装(デバッガを黙らせるのが主な目的) * オプションはrubyを意識 ## 少しシバンの話 ### だめな例 ```lisp #!</description>
    </item>
    
    <item>
      <title>Cloud9の紹介とLispのセットアップ</title>
      <link>//KeenS.github.io/blog/2014/08/02/introduction-to-cloud9/</link>
      <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/blog/2014/08/02/introduction-to-cloud9/</guid>
      <description>&lt;p&gt;κeenです。先日のLisp Meet Upで紹介した&lt;a href=&#34;https://c9.io&#34;&gt;Cloud9&lt;/a&gt;の詳解でも書きます。まあ、そんなに詳しくないんですけどね。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CIMの解説をしてみる コマンド編</title>
      <link>//KeenS.github.io/blog/2014/01/27/cim-explanation/</link>
      <pubDate>Mon, 27 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/blog/2014/01/27/cim-explanation/</guid>
      <description>&lt;p&gt;先日LTで紹介したCIMが思いの外反響を呼んでる(Githubのstarが15)ので解説でもしてみます。&lt;/p&gt;

&lt;p&gt;コマンド編の次は実装編です。これでバグにエンカウントしたときの調査とか完璧ですね。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lisp Meet Up #13でLTしてきました</title>
      <link>//KeenS.github.io/blog/2014/01/24/lisp-meet-up-number-13/</link>
      <pubDate>Fri, 24 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/blog/2014/01/24/lisp-meet-up-number-13/</guid>
      <description>&lt;p&gt;もう12時回ったので昨日になってしまいましたが &lt;a href=&#34;http://atnd.org/events/46746#comments&#34;&gt;Lisp Meet Up presented by Shibya.lisp #13&lt;/a&gt;に参加してLTしてきたので報告(?)エントリです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ここ１ヶ月くらいの近況</title>
      <link>//KeenS.github.io/blog/2013/11/13/what-recent/</link>
      <pubDate>Wed, 13 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>//KeenS.github.io/blog/2013/11/13/what-recent/</guid>
      <description>&lt;p&gt;#isucon 参戦記がフォロワーの多い@tagomorisさんとか@nitro_idiotさんとかにツイートされて普段の数十倍のアクセスが来てテンション上がったので近況書きますね。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>