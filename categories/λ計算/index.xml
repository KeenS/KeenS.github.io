<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>λ計算 on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/%CE%BB%E8%A8%88%E7%AE%97/</link>
    <description>Recent content in λ計算 on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 21 Apr 2015 00:25:56 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/%CE%BB%E8%A8%88%E7%AE%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>静的なメモリ管理の話。リージョン推論とλ計算からRustまで</title>
      <link>//KeenS.github.io/slide/seitekinamemorikanrinohanashi.rijonsuirontolambdakeisankararustmade/</link>
      <pubDate>Tue, 21 Apr 2015 00:25:56 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/seitekinamemorikanrinohanashi.rijonsuirontolambdakeisankararustmade/</guid>
      <description>===
About Me   κeen @blackenedgold Github: KeenS 大学では非情報系学科。趣味のプログラマ。  非ガチ勢なので優しくして下さい&amp;gt;&amp;lt;   Lisp, Ruby, OCaml, Shell Scriptあたりを書きます  ===
メモリ管理の話  (一般的ではない用語)
 弱い静的メモリ管理 強い動的メモリ管理 (弱い動的メモリ管理) 強い静的メモリ管理  ===
メモリ管理の話  弱い静的メモリ管理 特徴  弱い = ユーザがミスるとメモリ周りのエラーやリークが実行時に起きる 静的 = コンパイル時にメモリ管理が決定する  例  C言語  ===
メモリ管理の話  弱い静的メモリ管理 利点  実行時は安定している  欠点  バグる 面倒 危険  ===
メモリ管理の話  強い動的メモリ管理 特徴  強い = 基本的にメモリでエラーやリークが起きない 動的 = 実行時になるまでメモリの使われ方が分からない  例  GCのある言語全般 ===  メモリ管理の話  強い動的メモリ管理 利点  メモリ管理からの開放  欠点  動作が不安定 (cf これがCassandra) パフォーマンスの問題 リアルタイム性の問題  ===</description>
    </item>
    
  </channel>
</rss>