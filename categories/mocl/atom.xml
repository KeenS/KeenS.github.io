<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mocl | κeenのHappy Hacκing Blog]]></title>
  <link href="http://KeenS.github.io/categories/mocl/atom.xml" rel="self"/>
  <link href="http://KeenS.github.io/"/>
  <updated>2014-09-30T03:47:56+09:00</updated>
  <id>http://KeenS.github.io/</id>
  <author>
    <name><![CDATA[κeen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shibuya.lisp Tech Talk #8を運営&amp;LTしてきました]]></title>
    <link href="http://KeenS.github.io/blog/2014/09/16/lisp-tech-talk-8/"/>
    <updated>2014-09-16T21:04:12+09:00</updated>
    <id>http://KeenS.github.io/blog/2014/09/16/lisp-tech-talk-8</id>
    <content type="html"><![CDATA[<p>κeenです。レポートに追われ試験があり合宿に行きで2週間以上空きましたが8/30にShibuya.lisp TT #8の運営をしつつLT枠での参加もしてきたので報告です。何かそこそこ大きなイベントの運営をされる方の参考になれば。</p>

<!-- more -->


<h1>キックオフミーティング</h1>

<p>キックオフミーティングが6月にありました。集まったのは5人。potix2(@potix2)さん、chikuさん、深町(@nitro_idiot)さんかにたん(@kazh98)、私。Shibuya.lispの運営はもうちょい居る筈なんですけど引く手数多のLisper達はきっと忙しいんでしょうね。</p>

<p>Shibuya.lisp TTを開催するかを含めて話し合いました。開催されるとなれば3年振りです。</p>

<p>一番の懸案事項はTTをする人がいるかでした。招待講演のアテを話し合ったりTT枠とLT枠のバランスを話し合ったりして開催可能だろうと判断しました。その場で予想参加人数、タイムテーブルや役割分担、TT枠やLT枠が応募多寡になったときの対応、懇親会をどうするかなどを話し合いました。</p>

<p>やっぱりその時点では会場が決まってないので不確定要素が多く、「会場次第」が多かったかと思います。そのときの予想や要求を元に会場の条件を絞った訳ですが。</p>

<p>必要と判断された役職は、</p>

<ul>
<li>懇親会</li>
<li>司会</li>
<li>誘導</li>
<li>照明</li>
<li>マイク</li>
<li>受付</li>
<li>会計</li>
<li>広報</li>
<li>動画</li>
<li>タイムキーパ</li>
<li>コーヒーのケータリングとかお茶とかお菓子の準備</li>
</ul>


<p>でした。5人だとどうしても人数が足りないので運営手伝いも募集することになりました。</p>

<h1>会場決定</h1>

<p>mixi様より(鈴木さん経由で)会場を提供頂きました。スクリーン2枚、飲食OK、懇親会もその場でOK、ハンディカムの貸し出しありの至れり尽せりです。鈴木さんありがとう御座います。</p>

<h1>広報</h1>

<p>広報担当のかにたんがTwitterやMeet Upで宣伝したりchikuさんがTokyo.cljに参加して宣伝したりで広報活動を行なってきました。結果、60人の枠がほぼ埋まる(キャンセル含めれば超過)程度の人数が集りました。かにたんありがとう。</p>

<p>懸案事項だったTTの発表者は早々に埋まり、むしろ応募多寡だろうと予想されたLT枠が半分しか埋まらなくて焦りました。</p>

<h1>ビデオ</h1>

<p>映像に詳しいTOYOZUMIさんに相談したところ、発表者の映像出力をキャプチャする手段があるとのことなので</p>

<ol>
<li>特殊機器による映像出力のキャプチャ</li>
<li>ハンディカムによる発表者の録画</li>
<li>WebカメラによるUstream配信</li>
</ol>


<p>の3つを行ない、3.はリアルタイムに、1.、2.を合成したものを録画映像として配信することになりました。一応私がビデオ担当でしたが一人では無理なのでchikuさんやかにたんと一緒に予行演習を行ないました。</p>

<p>扱いの分からぬ機器に悪戦苦闘し、一応動かすことは出来たものの不安が残るので、上手く動いたシナリオと動かなかったシナリオを用意しました。</p>

<h1>その他</h1>

<p>懇親会の手配やら会計やらがどうだったかは分かりません。何も気にすることが無い程スムーズに進んでたんでしょう。potix2さんと深町さんありがとうございます。</p>

<h1>当日</h1>

<h2>準備</h2>

<p>chikuさんと一緒に渋谷駅に集合し、ケータリングのコーヒーを持って会場入り。そのまま鈴木さんにお世話になりつつ会場設営。当初は私は会場設営はほどほどに、ビデオ関係の準備をしてる筈でしたが人が少ないのでそのまま設営をやってました。</p>

<p>さらにThunderboltケーブルが不足ということでビックカメラまでダッシュ。雪駄+合宿で痛めた足で走るんじゃなかった。結局Thunderboltを買ってきても機器を上手く扱うことが出来ず、失敗した方のシナリオでオペレーションしてました。</p>

<p>映像配信に関しては私のLinuxではUstream配信出来ないだとかWebカメラがスライドから遠くて見えないだとかがありましたが、全体は滞りなく進行。</p>

<h2>Talk</h2>

<p>TalkはLT枠は飛び入りが4人あり、結局良い感じに埋まりました。</p>

<ul>
<li>特別講演

<ol>
<li>笹川様 : 好きい夢の話 (<a href="https://drive.google.com/file/d/0B_H0_8eqWuVAY25lWGdiTGE5RmM/edit?usp=sharing">ビデオ</a>)</li>
</ol>
</li>
<li>TT

<ol>
<li>athosさん : genuine-hilighterの話 (<a href="https://drive.google.com/file/d/0B_H0_8eqWuVAZmJPaWpTMHZRUmc/edit?usp=sharing">ビデオ</a>)</li>
<li>深町さん : cl21の話 (<a href="https://drive.google.com/file/d/0B_H0_8eqWuVAcV91QXRzSC1JVXc/edit?usp=sharing">ビデオ</a>)</li>
<li>豊住さん : 自作画像処理ライブラリの話 (<a href="https://drive.google.com/file/d/0B_H0_8eqWuVATE5nZ0Z4V3Zwdms/edit?usp=sharing">ビデオ</a>)</li>
<li>横田さん : 型宣言と最適化の話 (<a href="https://drive.google.com/file/d/0B_H0_8eqWuVAYzhqZ2J5T0VKTXc/edit?usp=sharing">ビデオ</a>)</li>
</ol>
</li>
<li>LT (<a href="https://drive.google.com/file/d/0B_H0_8eqWuVAaGNLTGpTWWh0ZFU/edit?usp=sharing">ビデオ 1~4</a>、<a href="https://drive.google.com/file/d/0B_H0_8eqWuVAR21Pc2M4bmdpdlU/edit?usp=sharing">ビデオ 4~9</a>)

<ol>
<li>のぶかずさん : Shenの話</li>
<li>κeen : moclの話</li>
<li>かにたん : 床下LispとLisp Meet Upの話</li>
<li>すてぃべあさん : EROSの話</li>
<li>ねこはるさん : Clojureの型推論器の話</li>
<li>Takagiさん: cl-cudaの話</li>
<li>あんちべさん : Incanterの話</li>
<li>TAKUFUKUSHIMAさん : Omの話</li>
<li>zick_minohさん : 42の言語でLisp処理系を書いた話</li>
</ol>
</li>
</ul>


<p>と様々な内容に分かれて行われました。私の発表スライドは<a href="/slide/shibuya-dot-lisp-tt-number-8.html">ここ</a>にあります。</p>

<h2>懇親会</h2>

<p>箸が足りない、ケータリングのボットを返却し忘れるなどとトラブルはあったものの概ね問題なく進みました。出されたのはアルコール、ソフトドリンク、寿司、ピザです。</p>

<p>だいたい言語毎に島が出来てたようです。私は撮影したビデオを取り込みつつ色々な島に入っていきました。Common Lisperでcl21コミッタでScheme実装者でClojureワナビーなのでどこにも入れて良いですね。ただ、前日スライドの微調整などであまり寝てなかったのでちょいちょい居眠りしてました。</p>

<p>片付けが終って外に出るとみなさんが待ってて下さったのでぞろぞろ帰りました。TOYOZUMIさんが2次会にカラオケに行こうと皆さん誘ってました。私は行こうかと思ったのですがカラオケはジェネレーションギャップがあるとつらいので大人しく帰りました。</p>

<h1>後日</h1>

<p>返し忘れたケータリングのポットは後日chikuさんが返してくれました。</p>

<p>録画した動画はちょいと梃摺りました。まず、長い動画なので動画サイズが4GBのところで切れてます。なのでその2つを結合し、さらにあまりにサイズが大きいので画質を落とす作業が必要でした。</p>

<p>変換はavconv(ffmpegのフォーク。Ubuntuだとこれしか入らない)で行なったのですが、MPEG4をダイレクトには結合出来ないらしことに気付くまで何度も失敗しました(1つの動画の変換に4時間とか掛かるんですよ？しかもその間CPUは100%に張り付いてるのでPC使えない)。レポートやら試験やらの合間に行なったのでそれだけで数日使いました。最終的にはmpegtsなるフォーマットに変換してcatで結合すれば良いことが分かり、</p>

<pre><code>(MP4 + MP4) -&gt; (mpegts + mpegts) -&gt; mpegts -&gt; MP4 -&gt; MP4(low quality)
</code></pre>

<p>の手順を踏んで最終動画を得ました。それでも1トークあたり1GBくらいのサイズがあります。もうちょい画質落としても良かったのかな。</p>

<p>で、今アップロード中ですが私のポンコツWiMAXルータは高負荷に耐えられず1動画数時間掛かってます。その間全くネットが使えません。はぁ。</p>

<p>実は今回の運営は私も含めTech Talk初参加の人がそれなりに居たのですがなんとか乗り切れましたね。講演をして下さった笹川様、会場を提供して下さったmixi様と鈴木さん、運営の手伝いをして下さった方々、ありがとう御座いました。そして運営のみなさん、発表者のみなさんお疲れ様でした。</p>

<p>次回もTT開催出来ると良いですね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[授業で半年間moclを使ってみた]]></title>
    <link href="http://KeenS.github.io/slide/shibuya-dot-lisp-tt-number-8.html"/>
    <updated>2014-08-28T17:05:00+09:00</updated>
    <id>http://KeenS.github.io/slide/shibuya-dot-lisp-tt-number-8.markdown</id>
    <content type="html"><![CDATA[<h1>授業で半年間moclを使ってみた</h1>

<hr />


<p>Shibuya.lisp TT #8</p>

<br>


<p>κeen(@blackenedgold)</p>

<h2>自己紹介</h2>

<hr />


<ul>
<li>κeen</li>
<li>東大数学科の4年生</li>
<li>ソーシャルアカウントは上のアイコン達から。</li>
<li>Lisp, Ruby, OCaml, Shell Scriptあたりを書きます</li>
</ul>


<p> 一年前</p>

<h2><a href="http://ks.ms.u-tokyo.ac.jp/">計算数学II</a></h2>

<p><img src="/images/shibuya_lisp_TT8/calculation_math.png" alt="計算数学IIのホームページ" /></p>

<p>自分でテーマを決めて半年間取り組む</p>

<p>チーム<a href="https://sites.google.com/site/2013ks2/home">人造エイリアン</a>
<img src="/images/shibuya_lisp_TT8/android_alien.png" alt="チーム人造エイリアン" /></p>

<h2>Common Lisp でAndroid?</h2>

<h2><a href="https://wukix.com/mocl">mocl</a></h2>

<p><img src="/images/shibuya_lisp_TT8/mocl.png" alt="mocl home" /></p>

<h2>What is mocl</h2>

<hr />


<ul>
<li>iOS, Androidで動くCommon Lisp処理系</li>
<li>LLVMをバックエンドに使う</li>
<li>Networking, Unicode, CLOS, and More. Run Countless CL Libraries.</li>
</ul>


<h2>買ってもらった(・ω・)v</h2>

<p><img src="/images/shibuya_lisp_TT8/mocl_ut.png" alt="mocl home" /></p>

<h2>注意</h2>

<hr />


<p>私が触ったのは1つ前のバージョンです。</p>

<p>一部5月のアップデートで改善されています。</p>

<h2>How it Works</h2>

<hr \>


<p><embed src="http://KeenS.github.io/images/shibuya_lisp_TT8/mocl_flowchart.svg" type="image/svg+xml" height="500px" /></p>

<h2>コードサンプル</h2>

<hr \>


<p>授業で私が作ったオセロのAIのコード
```java
public BoardCanvas(Context context,int width, int height,int color ){</p>

<pre><code>...
CL.cl_init();
CL.init_game(3 - color);
...
</code></pre>

<p>}</p>

<p>void nextHand(){</p>

<pre><code>String[] coord = CL.next().split(" ");
CL.jput(Integer.parseInt(coord[0]), Integer.parseInt(coord[1]) , color);
...
</code></pre>

<p>}
```</p>

<p>```lisp
(declaim (call-in next))
(defun next ()
  (let ((dummy (make-board))</p>

<pre><code>    (max most-negative-fixnum)
    (x) (y) (score))
...
))
</code></pre>

<p>(declaim (call-in init-game))
(defun init-game (color)
  (setf <em>board</em> (make-board))
  (setf <em>ai</em> color))
(declaim (call-in jput))
(defun jput (x y color)
  (put <em>board</em> x y color))
```</p>

<h2>ライブラリについて</h2>

<hr />


<ul>
<li>ASDFが使える</li>
<li><code>MOCL_HOME/systems/</code>以下に配置</li>
<li>quicklispでインストールしたやつは<code>MOCL_HOME/systems/</code>にひたすら<code>ln -s</code></li>
<li>大抵のライブラリは動かない</li>
</ul>


<p>例えば<code>cl-annot</code>を使って
<code>lisp
(declaim (call-in jput))
(defun jput (x y color)
  (put *board* x y color))
</code>
を
<code>lisp
@call-in
(defun jput (x y color)
  (put *board* x y color))
</code>
としたい</p>

<p>私のときはCFFIを始め、ironclad、cl-annotなど、<br/>
使おうとしたライブラリは全て動かなかった</p>

<p>現在の状態は不明</p>

<h2>作業フロー(Android)</h2>

<hr />




<ol>
<li>CLのコードを書いてSBCLで動かす</li>
<li>ある程度動いたらmoclでAndroid用のコードを生成</li>
<li>原因不明のエラーが出るので1に戻る</li>
<li>コンパイルが通れば生成されたCをコンパイル</li>
</ol>




<ol start="5">
<li>JavaからCLを呼び出すコードを書く</li>
<li>アプリをコンパイル</li>
<li>実機/エミュレータに転送</li>
</ol>




<ol start="8">
<li>動かす</li>
<li>動かない</li>
<li>ひたすらlogcat眺める</li>
<li>1に戻る</li>
</ol>


<h3>ここがつらい</h3>

<hr />


<ul>
<li>作業が煩雑</li>
<li>例外のスタックトレースがJNIのせいで追いづらい</li>
<li>logを出すには<code>rt:format</code>という関数のみ使える(ログレベルを設定出来ない)</li>
</ul>


<p>※ 今はREPLが端末で動くので環境は良くなっています。</p>

<h2>制限など</h2>

<hr />


<ul>
<li>Java/Obj-CからCLを呼ぶことしか出来ない

<ul>
<li>プラットフォームのライブラリも呼べない</li>
</ul>
</li>
<li>やりとり出来るのは文字列、数値、真偽値のみ

<ul>
<li>裏でタスクを回すworker的な役割or純粋関数的な役割のみ</li>
</ul>
</li>
</ul>


<p>※ 今はCLからObj-Cを呼ぶことが出来ます。</p>

<h2>成果物</h2>

<hr />


<ul>
<li><a href="https://gist.github.com/KeenS/15e7bb35519818c88c13">コード(抜粋)</a></li>
<li><a href="http://www.slideshare.net/blackenedgold/ss-30373688">最終発表スライド</a></li>
<li><a href="http://www.slideshare.net/blackenedgold/ss-30373688">デモ動画</a></li>
</ul>


<h2>おまけ</h2>

<h2>5月のアップデート内容</h2>

<hr />


<ul>
<li>OS Xアプリケーション対応</li>
<li>端末内でREPLが動く</li>
<li>FFI強化</li>
<li>Lisp内Obj-C構文</li>
<li>iOSとOS XでのネイティブSSL対応</li>
<li>ARM64サポート</li>
<li>ドキュメントの改善</li>
<li>多くのバグフィクス</li>
</ul>


<p><span style="font-size:600%">以上</span><br/>
何か質問あればどうぞ</p>
]]></content>
  </entry>
  
</feed>
