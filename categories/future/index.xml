<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Future on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/future/</link>
    <description>Recent content in Future on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 05 Oct 2018 19:55:29 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/future/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Futureとその周辺</title>
      <link>//KeenS.github.io/slide/futuretosonoshuuhensa_bei/</link>
      <pubDate>Fri, 05 Oct 2018 19:55:29 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/futuretosonoshuuhensa_bei/</guid>
      <description># Futureとその周辺 ---------------------- [情報科学若手の会 #51](https://wakate.org/2018/07/28/51th-general/) === # About Me --------- ![κeenのアイコン](/images/kappa.png) * κeen * [@blackenedgold](https://twitter.com/blackenedgold) * Github: [KeenS](https://github.com/KeenS) * [Idein Inc.](https://idein.jp/)のエンジニア * Lisp, ML, Rust, Shell Scriptあたりを書きます * 言語処理系と継続が好き * 科学っぽい話はできないです === # 非同期計算 ------------- * 待ってる間別のことをやりたい * 処理の切り替えどうするの ![非同期計算](/images/async.png) === # 非同期計算 ------------- * (限定)継続が取り出せればいい * 解決！ ![限定継続](/images/cont.png) === # 限定継続 ---------- * 多くの言語では限定継続は扱えない + Schemeなら簡単なんだけどねー * CPS変換すれば限定継続じみたことができる + 要はコールバック形式 === # 問題意識 ---------- * コールバック地獄 * デッドロック === # コールバック地獄 -------------- * コールバックがどんとんネストしていく問題 * 非同期呼び出しする度に深くなる * 視認性が悪くなる === # コールバック地獄 -------------- ```javascript fs.</description>
    </item>
    
    <item>
      <title>ステートマシン抽象化としてのFuture</title>
      <link>//KeenS.github.io/blog/2017/07/02/sute_tomashinchuushoukatoshitenofuture/</link>
      <pubDate>Sun, 02 Jul 2017 12:31:07 +0900</pubDate>
      
      <guid>//KeenS.github.io/blog/2017/07/02/sute_tomashinchuushoukatoshitenofuture/</guid>
      <description>&lt;p&gt;κeenです。最近Futureと一口にいってもいくつか種類があるなと気付いたのでRustの&lt;a href=&#34;https://github.com/alexcrichton/futures-rs&#34;&gt;&lt;code&gt;futures-rs&lt;/code&gt;&lt;/a&gt;に実装されているFutureの挙動を紐解こうと思います。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>