<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arrows on κeenのHappy Hacκing Blog</title>
    <link>//KeenS.github.io/categories/arrows/</link>
    <description>Recent content in Arrows on κeenのHappy Hacκing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 02 Mar 2015 23:36:03 +0900</lastBuildDate>
    
	<atom:link href="//KeenS.github.io/categories/arrows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>既存のテンプレートエンジンの問題点と再設計</title>
      <link>//KeenS.github.io/slide/kizonnotenpure-toenjinnomondaitentosaisekkeiaruihaarrowsnitsuite/</link>
      <pubDate>Mon, 02 Mar 2015 23:36:03 +0900</pubDate>
      
      <guid>//KeenS.github.io/slide/kizonnotenpure-toenjinnomondaitentosaisekkeiaruihaarrowsnitsuite/</guid>
      <description>===
About Me   κeen @blackenedgold Github: KeenS 野生のLisper Lisp, Ruby, OCaml, Shell Scriptあたりを書きます ===  Template Engines ===
Existing Architeture  (リクエスト) アプリ 引数を計算 テンプレートに引数を渡す レスポンスをレンダリング  レスポンスをサーバに渡す (レスポンス) ===  Rendering?   結合した文字列はクライアントに返ったらその後はゴミ   GCへ負荷がかかる (後述)   クライアントにとって1つの文字列である必要はない むしろ返せる部分だけ先に返した方が得（後述） ===  GC Pressure (SBCL)   世代別Copy GC 結合した文字列は比較的大きい alloc_spaceに入らない大きさならアロケートが遅い GCを頻繁に起動してしまう 16KBを越えると特別扱いされて遅い/メモリを喰う LispのWebアプリはレスポンスタイムの分散が大きい（要出展）  参考: SBCL GENCGC @ x86 Linux Split Response  例えば、こんなの</description>
    </item>
    
  </channel>
</rss>